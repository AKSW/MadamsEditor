{"version":3,"sources":["../node_modules/prefix-ns/data.json","../node_modules/prefix-ns/index.js","../node_modules/yamljs/lib/Pattern.js","../node_modules/yamljs/lib/Utils.js","../node_modules/yamljs/lib/Unescaper.js","../node_modules/yamljs/lib/Escaper.js","../node_modules/yamljs/lib/Exception/ParseException.js","../node_modules/yamljs/lib/Exception/ParseMore.js","../node_modules/yamljs/lib/Exception/DumpException.js","../node_modules/yamljs/lib/Inline.js","../node_modules/yamljs/lib/Parser.js","../node_modules/yamljs/lib/Dumper.js","../node_modules/yamljs/lib/Yaml.js","../node_modules/extend/index.js","../node_modules/author-regex/index.js","../node_modules/parse-author/index.js","../node_modules/@rmlio/yarrrml-parser/lib/expander.js","../node_modules/@rmlio/yarrrml-parser/lib/rdfa-context.json","../node_modules/n3/src/IRIs.js","../node_modules/queue-microtask/index.js","../node_modules/base64-js/index.js","../node_modules/ieee754/index.js","../node_modules/isarray/index.js","../node_modules/buffer/index.js","../node_modules/n3/src/N3Lexer.js","../node_modules/n3/src/N3Util.js","../node_modules/n3/src/N3DataFactory.js","../node_modules/n3/src/N3Parser.js","../node_modules/n3/src/N3Writer.js","../node_modules/events/events.js","../node_modules/readable-stream/lib/internal/streams/stream-browser.js","../node_modules/readable-stream/lib/internal/streams/buffer_list.js","../node_modules/process/browser.js","../node_modules/readable-stream/lib/internal/streams/destroy.js","../node_modules/readable-stream/errors-browser.js","../node_modules/readable-stream/lib/internal/streams/state.js","../node_modules/inherits/inherits_browser.js","../node_modules/util-deprecate/browser.js","../node_modules/readable-stream/lib/_stream_writable.js","../node_modules/readable-stream/lib/_stream_duplex.js","../node_modules/string_decoder/node_modules/safe-buffer/index.js","../node_modules/string_decoder/lib/string_decoder.js","../node_modules/readable-stream/lib/internal/streams/end-of-stream.js","../node_modules/readable-stream/lib/internal/streams/async_iterator.js","../node_modules/readable-stream/lib/internal/streams/from-browser.js","../node_modules/readable-stream/lib/_stream_readable.js","../node_modules/readable-stream/lib/_stream_transform.js","../node_modules/readable-stream/lib/_stream_passthrough.js","../node_modules/readable-stream/lib/internal/streams/pipeline.js","../node_modules/readable-stream/readable-browser.js","../node_modules/n3/src/N3Store.js","../node_modules/n3/src/N3StreamParser.js","../node_modules/n3/src/N3StreamWriter.js","../node_modules/n3/src/index.js","../node_modules/@rmlio/yarrrml-parser/lib/abstract-generator.js","../node_modules/@rmlio/yarrrml-parser/lib/formulations.json","../node_modules/@rmlio/yarrrml-parser/lib/jdbc-drivers.json","../node_modules/@rmlio/yarrrml-parser/lib/rml-generator.js","madamseditor.js","app.js"],"names":["module","exports","regex","require","str","TypeError","test","match","concat","apply","exec","author","name","i","length","val","charAt","email","url","RDF","XSD","SWAP","xsd","decimal","boolean","double","integer","string","rdf","type","nil","first","rest","langString","owl","sameAs","r","forSome","forAll","log","implies","namespaces","escapeSequence","escapeReplacements","illegalIriChars","lineModeRegExps","_iri","_unescapedIri","_simpleQuotedString","_langcode","_blank","_newline","_comment","_whitespace","_endOfFile","invalidRegExp","N3Lexer","constructor","options","_simpleApostropheString","_prefix","_prefixed","_variable","_number","_boolean","_keyword","_sparqlKeyword","_shortPredicates","_lineMode","lineMode","_n3Mode","key","RegExp","n3","_comments","comments","_literalClosingPos","_tokenizeToEnd","callback","inputFinished","input","_input","outputComments","whiteSpaceMatch","comment","line","_line","value","prefix","substr","firstChar","matchLength","inconclusive","_previousMarker","_unescape","reportSyntaxError","_parseLiteral","toUpperCase","token","previousToken","self","_syntaxError","item","invalid","replaced","replace","sequence","unicode4","unicode8","escapedChar","String","fromCharCode","Number","parseInt","charCode","opening","openingLength","closingPos","Math","max","indexOf","backslashCount","raw","substring","lines","split","issue","err","Error","context","undefined","tokenize","tokens","error","e","t","push","_pendingBuffer","setEncoding","on","data","Buffer","isNamedNode","term","termType","isBlankNode","isLiteral","isVariable","isDefaultGraph","inDefaultGraph","quad","graph","iri","factory","prefixes","defaultPrefixes","Object","create","processPrefix","cache","local","namedNode","N3DataFactory","DEFAULTGRAPH","_blankNodeCounter","escapedLiteral","quadId","DataFactory","blankNode","variable","literal","defaultGraph","triple","Term","id","equals","other","toJSON","NamedNode","Literal","lastIndexOf","language","atPos","toLowerCase","datatype","datatypeString","dtPos","char","BlankNode","Variable","DefaultGraph","termFromId","endPos","components","unescapeQuotes","termToId","escapeQuotes","subject","predicate","object","Quad","_","quoted","languageOrDataType","isFinite","isInteger","isNaN","blankNodePrefix","N3Parser","_contextStack","_graph","_setBase","baseIRI","initDataFactory","format","isTurtle","isTriG","isNTriples","isNQuads","isN3","isLineMode","_supportsNamedGraphs","_readPredicateOrNamedGraph","_readPredicate","_supportsQuads","_supportsRDFStar","_resolveRelativeIRI","_blankNodePrefix","_lexer","lexer","_explicitQuantifiers","explicitQuantifiers","_resetBlankNodePrefix","fragmentPos","_base","_basePath","_baseRoot","_baseScheme","_saveContext","n3Mode","inverse","_inversePredicate","blankPrefix","_prefixes","quantified","_quantified","_restoreContext","pop","_subject","_predicate","_object","_readInTopContext","_error","_callback","_sparqlStyle","_readPrefix","_readBaseIRI","_readSubject","_readNamedGraphLabel","_readEntity","quantifier","_resolveIRI","_namedNode","_blankNode","_readBlankNodeHead","RDF_NIL","_readListItem","_readPunctuation","N3_FORSOME","_quantifier","_readQuantifierList","N3_FORALL","_literalValue","_completeSubjectLiteral","_literal","_getPathReader","ABBREVIATIONS","_readBlankNodeTail","_readObject","_readDataTypeOrLang","_getContextEndReader","_readGraph","_readBlankNodePunctuation","_emit","empty","_readPredicateAfterBlank","list","next","previousList","stack","parent","RDF_FIRST","_readListItemDataTypeOrLang","RDF_REST","_completeObjectLiteral","_completeLiteral","listItem","completed","_readCallback","_readFormulaTail","inversePredicate","_readQuadPunctuation","_readPrefixIRI","prefixNode","_prefixCallback","_readDeclarationPunctuation","_readNamedGraphBlankLabel","entity","QUANTIFIERS_GRAPH","_readQuantifierPunctuation","afterPath","_afterPath","_readPath","_readForwardPath","_readBackwardPath","_readRDFStarTailOrGraph","_readRDFStarTail","_quad","contextStack","message","noop","_removeDotSegments","result","pathStart","segmentStart","parse","quadCallback","prefixCallback","quads","every","parser","prototype","escape","escapeAll","escapedCharacters","SerializedTerm","N3Writer","outputStream","_prefixRegex","write","_lists","lists","_outputStream","_endStream","end","output","chunk","encoding","done","_writeQuad","_writeQuadLine","_prefixIRIs","addPrefixes","_inDefaultGraph","_write","_encodeIriOrBlank","_encodeObject","_encodePredicate","_encodeSubject","_prefixMatch","quadToString","quadsToString","map","join","_encodeQuad","characterReplacer","prefixMatch","_encodeLiteral","_blockedWrite","addQuad","addQuads","addPrefix","hasPrefixes","IRIlist","prefixList","prefixIRI","blank","children","child","contents","elements","Array","singleDone","character","charCodeAt","toString","ReflectOwnKeys","R","Reflect","ReflectApply","target","receiver","args","Function","call","ProcessEmitWarning","warning","console","warn","ownKeys","getOwnPropertySymbols","getOwnPropertyNames","NumberIsNaN","EventEmitter","init","once","_events","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","listener","_getMaxListeners","that","_addListener","prepend","m","events","existing","newListener","emit","unshift","warned","w","emitter","count","onceWrapper","fired","arguments","removeListener","wrapFn","_onceWrap","state","wrapped","bind","_listeners","unwrap","evlistener","unwrapListeners","arrayClone","listenerCount","arr","n","copy","spliceOne","index","ret","Promise","resolve","reject","eventListener","errorListener","slice","defineProperty","enumerable","get","set","arg","RangeError","getPrototypeOf","setMaxListeners","getMaxListeners","doError","er","handler","len","listeners","addListener","prependListener","prependOnceListener","position","originalListener","shift","off","removeAllListeners","keys","rawListeners","eventNames","enumerableOnly","symbols","filter","sym","getOwnPropertyDescriptor","_objectSpread","source","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","obj","configurable","writable","_classCallCheck","instance","Constructor","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","_require","_require2","inspect","custom","copyBuffer","src","offset","BufferList","head","tail","v","entry","s","p","alloc","allocUnsafe","hasStrings","_getString","_getBuffer","c","nb","buf","depth","customInspect","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","runClearTimeout","marker","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","Item","array","nextTick","title","env","argv","version","versions","binding","cwd","chdir","dir","umask","destroy","cb","_this","readableDestroyed","_readableState","destroyed","writableDestroyed","_writableState","errorEmitted","emitErrorNT","_destroy","emitCloseNT","emitErrorAndCloseNT","emitClose","undestroy","reading","ended","endEmitted","ending","finalCalled","prefinished","finished","errorOrDestroy","stream","rState","wState","autoDestroy","_inheritsLoose","subClass","superClass","__proto__","codes","createErrorType","code","Base","NodeError","_Base","arg1","arg2","arg3","getMessage","oneOf","expected","thing","isArray","startsWith","search","pos","endsWith","this_len","includes","start","actual","determiner","msg","ERR_INVALID_OPT_VALUE","highWaterMarkFrom","isDuplex","duplexKey","highWaterMark","getHighWaterMark","hwm","floor","objectMode","Duplex","WriteReq","CorkedRequest","finish","onCorkedFinish","Writable","WritableState","internalUtil","deprecate","Stream","OurUint8Array","global","Uint8Array","_uint8ArrayToBuffer","from","_isUint8Array","isBuffer","realHasInstance","destroyImpl","_require$codes","ERR_INVALID_ARG_TYPE","ERR_METHOD_NOT_IMPLEMENTED","ERR_MULTIPLE_CALLBACK","ERR_STREAM_CANNOT_PIPE","ERR_STREAM_DESTROYED","ERR_STREAM_NULL_VALUES","ERR_STREAM_WRITE_AFTER_END","ERR_UNKNOWN_ENCODING","nop","writableObjectMode","needDrain","noDecode","decodeStrings","defaultEncoding","writing","corked","sync","bufferProcessing","onwrite","writecb","writelen","bufferedRequest","lastBufferedRequest","pendingcb","bufferedRequestCount","corkedRequestsFree","writev","_writev","final","_final","writeAfterEnd","validChunk","decodeChunk","writeOrBuffer","isBuf","newChunk","last","doWrite","onwriteError","finishMaybe","onwriteStateUpdate","needFinish","clearBuffer","afterWrite","onwriteDrain","l","buffer","holder","allBuffers","callFinal","prefinish","need","endWritable","corkReq","getBuffer","current","out","Symbol","hasInstance","pipe","cork","uncork","setDefaultEncoding","_undestroy","objectKeys","Readable","method","allowHalfOpen","readable","onend","onEndNT","ERR_STREAM_PREMATURE_CLOSE","called","_len","_key","isRequest","setHeader","abort","eos","opts","onlegacyfinish","onfinish","writableEnded","readableEnded","onerror","onclose","onrequest","req","_Object$setPrototypeO","kLastResolve","kLastReject","kError","kEnded","kLastPromise","kHandlePromise","kStream","createIterResult","readAndResolve","iter","read","onReadable","wrapForNext","lastPromise","then","AsyncIteratorPrototype","ReadableStreamAsyncIteratorPrototype","setPrototypeOf","promise","asyncIterator","_this2","createReadableStreamAsyncIterator","_Object$create","iterator","ReadableState","EE","EElistenerCount","debug","debugUtil","debuglog","StringDecoder","ERR_STREAM_PUSH_AFTER_EOF","ERR_STREAM_UNSHIFT_AFTER_END_EVENT","kProxyEvents","event","fn","readableObjectMode","pipes","pipesCount","flowing","needReadable","emittedReadable","readableListening","resumeScheduled","paused","awaitDrain","readingMore","decoder","_read","readableAddChunk","addToFront","skipChunkCheck","onEofChunk","chunkInvalid","addChunk","maybeReadMore","emitReadable","isPaused","enc","content","clear","MAX_HWM","computeNewHighWaterMark","howMuchToRead","emitReadable_","flow","maybeReadMore_","pipeOnDrain","updateReadableListening","resume","nReadingNextTick","resume_","fromList","consume","endReadable","endReadableNT","xs","x","nOrig","doRead","dest","pipeOpts","doEnd","endFn","stdout","stderr","unpipe","onunpipe","unpipeInfo","hasUnpiped","ondrain","ondata","cleanedUp","pause","dests","splice","ev","res","wrap","_fromList","iterable","Transform","ERR_TRANSFORM_ALREADY_TRANSFORMING","ERR_TRANSFORM_WITH_LENGTH_0","afterTransform","ts","_transformState","transforming","writechunk","rs","needTransform","writeencoding","transform","_transform","flush","_flush","err2","PassThrough","ERR_MISSING_ARGS","destroyer","closed","to","popCallback","streams","pipeline","destroys","reduce","N3Store","_size","_graphs","_id","_ids","_entities","_blankNodeIndex","_factory","size","graphs","subjects","graphKey","subjectKey","predicateKey","_addToIndex","index0","key0","key1","key2","index1","index2","existed","_removeFromIndex","_findInIndex","name0","name1","name2","tmp","varCount","entityKeys","value0","entity0","value1","entity1","values","parts","_loop","_loopByKey0","_loopByKey1","_loopBy2Keys","_countInIndex","_getGraphs","isString","_uniqueEntities","uniqueIds","graphItem","predicates","objects","freeze","ids","entities","changed","import","removeQuad","removeQuads","remove","removeMatches","deleteGraph","getQuads","subjectId","predicateId","objectId","graphId","countQuads","some","getSubjects","results","forSubjects","getPredicates","forPredicates","getObjects","forObjects","o","getGraphs","forGraphs","g","createBlankNode","suggestedName","extractLists","ignoreErrors","onError","node","tails","toRemove","tailQuad","items","malformed","headPos","objectQuads","subjectQuads","N3StreamParser","onData","onEnd","uri","N3StreamWriter","writer","_writer","N3","_GLOBAL","config","defaults","dataUrl","mappingUrl","rmlMapperUrl","as","dqv","duv","cat","qb","grddl","ldp","oa","ma","rdfa","rdfs","rif","rr","skos","skosxl","wdr","void","wdrs","xhv","xml","prov","sd","org","gldp","cnt","dcat","earl","ht","ptr","cc","ctag","dc","dc11","dcterms","foaf","gr","ical","og","rev","sioc","vcard","schema","describedby","license","role","ssn","sosa","time","MadamsEditor","ui","MadamsEditor_UI","MadamsEditor_Parser","_init","assign","initEditors","loadExampleData","dataEditor","yarrrmlEditor","document","querySelector","addEventListener","handleClickRunBtn","preventDefault","handleUpdateYarrmlEditorTimeout","ace","edit","setTheme","session","setMode","handleUpdateYarrmlEditor","outEditor","btn","closest","classList","add","cleanupMessages","runMapping","rdf2Turtle","contains","scrollIntoView","left","block","behavior","setValue","clearSelection","catch","addMessage","finally","getValue","mappingStr","yarrrmlExtend","yarrrmlEncodeBrackets","yarrrml2RML","rml","fetch","ok","text","wrapper","alertEl","$","addClass","append","innerHTML","inputData","headers","body","JSON","stringify","sources","response","decodeRMLReplacements","yarrrml","cg1","cg2","cg3","el","trim","level","entries","escapeTable","yaml","y2r","Writer","convert","getMessages","q","doc","Parser","getUsedPrefixes","outWriter","outTtl","pre","json","YAML"],"mappings":"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","file":"app.68376e05.js","sourceRoot":"../src","sourcesContent":["module.exports={\"@context\":{madsrdf:\"http://www.loc.gov/mads/rdf/v1#\",bflc:\"http://id.loc.gov/ontologies/bflc/\",rdf:\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\",foaf:\"http://xmlns.com/foaf/0.1/\",yago:\"http://yago-knowledge.org/resource/\",rdfs:\"http://www.w3.org/2000/01/rdf-schema#\",dbo:\"http://dbpedia.org/ontology/\",dbp:\"http://dbpedia.org/property/\",ex:\"http://example.org/\",dc:\"http://purl.org/dc/elements/1.1/\",owl:\"http://www.w3.org/2002/07/owl#\",gr:\"http://purl.org/goodrelations/v1#\",spacerel:\"http://data.ordnancesurvey.co.uk/ontology/spatialrelations/\",skos:\"http://www.w3.org/2004/02/skos/core#\",geo:\"http://www.opengis.net/ont/geosparql#\",schema:\"http://schema.org/\",xsd:\"http://www.w3.org/2001/XMLSchema#\",dcat:\"http://www.w3.org/ns/dcat#\",bf:\"http://id.loc.gov/ontologies/bibframe/\",sd:\"http://www.w3.org/ns/sparql-service-description#\",search:\"http://sindice.com/vocab/search#\",org:\"http://www.w3.org/ns/org#\",frbr:\"http://purl.org/vocab/frbr/core#\",qb:\"http://purl.org/linked-data/cube#\",dcterms:\"http://purl.org/dc/terms/\",prov:\"http://www.w3.org/ns/prov#\",sioc:\"http://rdfs.org/sioc/ns#\",dct:\"http://purl.org/dc/terms/\",xtypes:\"http://purl.org/xtypes/\",ont:\"http://purl.org/net/ns/ontology-annot#\",commerce:\"http://search.yahoo.com/searchmonkey/commerce/\",dbpedia:\"http://dbpedia.org/resource/\",void:\"http://rdfs.org/ns/void#\",onto:\"http://www.ontotext.com/\",rss:\"http://purl.org/rss/1.0/\",bibo:\"http://purl.org/ontology/bibo/\",gldp:\"http://www.w3.org/ns/people#\",geonames:\"http://www.geonames.org/ontology#\",event:\"http://purl.org/NET/c4dm/event.owl#\",wd:\"http://www.wikidata.org/entity/\",fb:\"http://rdf.freebase.com/ns/\",pto:\"http://www.productontology.org/id/\",dbr:\"http://dbpedia.org/resource/\",dcmit:\"http://purl.org/dc/dcmitype/\",vcard:\"http://www.w3.org/2006/vcard/ns#\",cc:\"http://creativecommons.org/ns#\",md:\"http://www.w3.org/ns/md#\",sc:\"http://purl.org/science/owl/sciencecommons/\",oo:\"http://purl.org/openorg/\",rr:\"http://www.w3.org/ns/r2rml#\",doap:\"http://usefulinc.com/ns/doap#\",prog:\"http://purl.org/prog/\",swrc:\"http://swrc.ontoware.org/ontology#\",vann:\"http://purl.org/vocab/vann/\",dbpprop:\"http://dbpedia.org/property/\",nie:\"http://www.semanticdesktop.org/ontologies/2007/01/19/nie#\",ma:\"http://www.w3.org/ns/ma-ont#\",content:\"http://purl.org/rss/1.0/modules/content/\",gen:\"http://purl.org/gen/0.1#\",http:\"http://www.w3.org/2011/http#\",tl:\"http://purl.org/NET/c4dm/timeline.owl#\",ov:\"http://open.vocab.org/terms/\",akt:\"http://www.aktors.org/ontology/portal#\",wot:\"http://xmlns.com/wot/0.1/\",fn:\"http://www.w3.org/2005/xpath-functions#\",aiiso:\"http://purl.org/vocab/aiiso/schema#\",vs:\"http://www.w3.org/2003/06/sw-vocab-status/ns#\",swc:\"http://data.semanticweb.org/ns/swc/ontology#\",dcterm:\"http://purl.org/dc/terms/\",marcrel:\"http://id.loc.gov/vocabulary/relators/\",ical:\"http://www.w3.org/2002/12/cal/ical#\",cv:\"http://rdfs.org/resume-rdf/\",dbowl:\"http://ontology.cybershare.utep.edu/dbowl/relational-to-ontology-mapping-primitive.owl#\",mo:\"http://purl.org/ontology/mo/\",earl:\"http://www.w3.org/ns/earl#\",xhtml:\"http://www.w3.org/1999/xhtml#\",rel:\"http://purl.org/vocab/relationship/\",prop:\"http://dbpedia.org/property/\",dcam:\"http://purl.org/dc/dcam/\",xmp:\"http://ns.adobe.com/xap/1.0/\",daia:\"http://purl.org/ontology/daia/\",bio:\"http://purl.org/vocab/bio/0.1/\",crm:\"http://www.cidoc-crm.org/cidoc-crm/\",ad:\"http://schemas.talis.com/2005/address/schema#\",rdfg:\"http://www.w3.org/2004/03/trix/rdfg-1/\",dc11:\"http://purl.org/dc/elements/1.1/\",bill:\"http://www.rdfabout.com/rdf/schema/usbill/\",test2:\"http://this.invalid/test2#\",cs:\"http://purl.org/vocab/changeset/schema#\",sio:\"http://semanticscience.org/resource/\",factbook:\"http://wifo5-04.informatik.uni-mannheim.de/factbook/ns#\",xhv:\"http://www.w3.org/1999/xhtml/vocab#\",co:\"http://purl.org/ontology/co/core#\",pc:\"http://purl.org/procurement/public-contracts#\",dv:\"http://rdf.data-vocabulary.org/#\",og:\"http://ogp.me/ns#\",musim:\"http://purl.org/ontology/similarity/\",d2rq:\"http://www.wiwiss.fu-berlin.de/suhl/bizer/D2RQ/0.1#\",air:\"http://dig.csail.mit.edu/TAMI/2007/amord/air#\",log:\"http://www.w3.org/2000/10/swap/log#\",afn:\"http://jena.hpl.hp.com/ARQ/function#\",book:\"http://purl.org/NET/book/vocab#\",xs:\"http://www.w3.org/2001/XMLSchema#\",obo:\"http://purl.obolibrary.org/obo/\",media:\"http://search.yahoo.com/searchmonkey/media/\",ctag:\"http://commontag.org/ns#\",ir:\"http://www.ontologydesignpatterns.org/cp/owl/informationrealization.owl#\",admin:\"http://webns.net/mvcb/\",cyc:\"http://sw.opencyc.org/concept/\",days:\"http://ontologi.es/days#\",tzont:\"http://www.w3.org/2006/timezone#\",xfn:\"http://gmpg.org/xfn/11#\",biblio:\"http://purl.org/net/biblio#\",mu:\"http://mu.semte.ch/vocabularies/core/\",con:\"http://www.w3.org/2000/10/swap/pim/contact#\",botany:\"http://purl.org/NET/biol/botany#\",cal:\"http://www.w3.org/2002/12/cal/ical#\",tag:\"http://www.holygoat.co.uk/owl/redwood/0.1/tags/\",time:\"http://www.w3.org/2006/time#\",dcq:\"http://purl.org/dc/qualifiers/1.0/\",sism:\"http://purl.oclc.org/NET/sism/0.1/\",xf:\"http://www.w3.org/2002/xforms/\",reco:\"http://purl.org/reco#\",osag:\"http://www.ordnancesurvey.co.uk/ontology/AdministrativeGeography/v2.0/AdministrativeGeography.rdf#\",af:\"http://purl.org/ontology/af/\",ome:\"http://purl.org/ontomedia/core/expression#\",cld:\"http://purl.org/cld/terms/\",dir:\"http://schemas.talis.com/2005/dir/schema#\",sr:\"http://www.openrdf.org/config/repository/sail#\",oa:\"http://www.w3.org/ns/oa#\",rif:\"http://www.w3.org/2007/rif#\",memo:\"http://ontologies.smile.deri.ie/2009/02/27/memo#\",cmp:\"http://www.ontologydesignpatterns.org/cp/owl/componency.owl#\",myspace:\"http://purl.org/ontology/myspace#\",jdbc:\"http://d2rq.org/terms/jdbc/\",ok:\"http://okkam.org/terms#\",sdmxdim:\"http://purl.org/linked-data/sdmx/2009/dimension#\",rev:\"http://purl.org/stuff/rev#\",gn:\"http://www.geonames.org/ontology#\",lomvoc:\"http://ltsc.ieee.org/rdf/lomv1p0/vocabulary#\",math:\"http://www.w3.org/2000/10/swap/math#\",sdmx:\"http://purl.org/linked-data/sdmx#\",giving:\"http://ontologi.es/giving#\",swande:\"http://purl.org/swan/1.2/discourse-elements/\",swanq:\"http://purl.org/swan/1.2/qualifiers/\",dcn:\"http://www.w3.org/2007/uwa/context/deliverycontext.owl#\",owlim:\"http://www.ontotext.com/trree/owlim#\",cfp:\"http://sw.deri.org/2005/08/conf/cfp.owl#\",as:\"https://www.w3.org/ns/activitystreams#\",unit:\"http://qudt.org/vocab/unit#\",photoshop:\"http://ns.adobe.com/photoshop/1.0/\",wfs:\"http://schemas.opengis.net/wfs/\",exif:\"http://www.w3.org/2003/12/exif/ns#\",sdmxa:\"http://purl.org/linked-data/sdmx/2009/attribute#\",xsi:\"http://www.w3.org/2001/XMLSchema-instance#\",qudt:\"http://qudt.org/vocab/unit#\",om:\"http://opendata.caceres.es/def/ontomunicipio#\",adms:\"http://www.w3.org/ns/adms#\",lyou:\"http://purl.org/linkingyou/\",dul:\"http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#\",swrl:\"http://www.w3.org/2003/11/swrl#\",type:\"http://info.deepcarbon.net/schema/type#\",omn:\"http://open-multinet.info/ontology/omn#\",swrcfe:\"http://www.morelab.deusto.es/ontologies/swrcfe#\",cert:\"http://www.w3.org/ns/auth/cert#\",cnt:\"http://www.w3.org/2011/content#\",swrlb:\"http://www.w3.org/2003/11/swrlb#\",lemon:\"http://lemon-model.net/lemon#\",isbd:\"http://iflastandards.info/ns/isbd/elements/\",ore:\"http://www.openarchives.org/ore/terms/\",openlinks:\"http://www.openlinksw.com/schemas/virtrdf#\",edm:\"http://www.europeana.eu/schemas/edm/\",nfo:\"http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#\",ontology:\"http://dbpedia.org/ontology/\",eat:\"http://www.eat.rl.ac.uk/#\",aat:\"http://vocab.getty.edu/aat/\",sf:\"http://www.opengis.net/ont/sf#\",voaf:\"http://purl.org/vocommons/voaf#\",sioct:\"http://rdfs.org/sioc/types#\",gtfs:\"http://vocab.gtfs.org/terms#\",scovo:\"http://purl.org/NET/scovo#\",ac:\"http://umbel.org/umbel/ac/\",fabio:\"http://purl.org/spar/fabio/\",db:\"http://dbpedia.org/\",siocserv:\"http://rdfs.org/sioc/services#\",skosxl:\"http://www.w3.org/2008/05/skos-xl#\",geoes:\"http://geo.linkeddata.es/resource/\",gvp:\"http://vocab.getty.edu/ontology#\",nif:\"http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#\",eg:\"http://www.example.org/\",coref:\"http://www.rkbexplorer.com/ontologies/coref#\",drugbank:\"http://www4.wiwiss.fu-berlin.de/drugbank/resource/drugbank/\",ldp:\"http://www.w3.org/ns/ldp#\",tgn:\"http://vocab.getty.edu/tgn/\",pmlj:\"http://inference-web.org/2.0/pml-justification.owl#\",room:\"http://vocab.deri.ie/rooms#\",prism:\"http://prismstandard.org/namespaces/basic/2.0/\",ulan:\"http://vocab.getty.edu/ulan/\",ptr:\"http://www.w3.org/2009/pointers#\",lv:\"http://purl.org/lobid/lv#\",test:\"http://test2.example.com/\",gold:\"http://purl.org/linguistics/gold/\",acc:\"http://purl.org/NET/acc#\",uniprot:\"http://purl.uniprot.org/core/\",core:\"http://vivoweb.org/ontology/core#\",ssn:\"http://www.w3.org/ns/ssn/\",nsogi:\"http://prefix.cc/nsogi:\",georss:\"http://www.georss.org/georss/\",go:\"http://purl.org/obo/owl/GO#\",dbc:\"http://dbpedia.org/resource/Category:\",doc:\"http://www.w3.org/2000/10/swap/pim/doc#\",movie:\"http://data.linkedmdb.org/resource/movie/\",dce:\"http://purl.org/dc/elements/1.1/\",wn:\"http://xmlns.com/wordnet/1.6/\",rsa:\"http://www.w3.org/ns/auth/rsa#\",bif:\"http://www.openlinksw.com/schemas/bif#\",whois:\"http://www.kanzaki.com/ns/whois#\",geosparql:\"http://www.opengis.net/ont/geosparql#\",dbprop:\"http://dbpedia.org/property/\",akts:\"http://www.aktors.org/ontology/support#\",space:\"http://purl.org/net/schemas/space/\",music:\"http://musicontology.com/\",java:\"http://www.w3.org/2007/uwa/context/java.owl#\",rec:\"http://purl.org/ontology/rec/core#\",loc:\"http://www.w3.org/2007/uwa/context/location.owl#\",sider:\"http://www4.wiwiss.fu-berlin.de/sider/resource/sider/\",po:\"http://purl.org/ontology/po/\",lgd:\"http://linkedgeodata.org/triplify/\",cerif:\"http://spi-fm.uca.es/neologism/cerif#\",dblp:\"http://dblp.uni-trier.de/rdf/schema-2015-01-26#\",am:\"http://vocab.deri.ie/am#\",acm:\"http://www.rkbexplorer.com/ontologies/acm#\",ti:\"http://www.ontologydesignpatterns.org/cp/owl/timeinterval.owl#\",cito:\"http://purl.org/spar/cito/\",acl:\"http://www.w3.org/ns/auth/acl#\",wn20schema:\"http://www.w3.org/2006/03/wn/wn20/schema/\",lexinfo:\"http://www.lexinfo.net/ontology/2.0/lexinfo#\",service:\"http://purl.org/ontology/service#\",httph:\"http://www.w3.org/2007/ont/httph#\",sp:\"http://spinrdf.org/sp#\",zoology:\"http://purl.org/NET/biol/zoology#\",ceo:\"https://linkeddata.cultureelerfgoed.nl/vocab/def/ceo#\",umbelrc:\"http://umbel.org/umbel/rc/\",cco:\"http://www.ontologyrepository.com/CommonCoreOntologies/\",sec:\"https://w3id.org/security#\",organism:\"http://eulersharp.sourceforge.net/2003/03swap/organism#\",nmo:\"http://www.semanticdesktop.org/ontologies/2007/03/22/nmo#\",itsrdf:\"http://www.w3.org/2005/11/its/rdf#\",imm:\"http://schemas.microsoft.com/imm/\",lode:\"http://linkedevents.org/ontology/\",kb:\"http://deductions.sf.net/ontology/knowledge_base.owl#\",prv:\"http://purl.org/net/provenance/ns#\",dbpediaowl:\"http://dbpedia.org/ontology/\",wdrs:\"http://www.w3.org/2007/05/powder-s#\",sparql:\"http://www.w3.org/ns/sparql#\",atom:\"http://www.w3.org/2005/Atom/\",swid:\"http://semanticweb.org/id/\",pr:\"http://purl.org/ontology/prv/core#\",formats:\"http://www.w3.org/ns/formats/\",ignf:\"http://data.ign.fr/def/ignf#\",ndl:\"http://schemas.ogf.org/nml/2013/05/base#\",gndo:\"http://d-nb.info/standards/elementset/gnd#\",pat:\"http://purl.org/hpi/patchr#\",nao:\"http://www.semanticdesktop.org/ontologies/2007/08/15/nao#\",cdm:\"http://publications.europa.eu/ontology/cdm#\",gd:\"http://rdf.data-vocabulary.org/#\",sesame:\"http://www.openrdf.org/schema/sesame#\",nco:\"http://www.semanticdesktop.org/ontologies/2007/03/22/nco#\",xml:\"http://www.w3.org/XML/1998/namespace/\",cro:\"http://rhizomik.net/ontologies/copyrightonto.owl#\",ro:\"http://purl.org/obo/owl/ro#\",ya:\"http://blogs.yandex.ru/schema/foaf/\",abc:\"http://www.metadata.net/harmony/ABCSchemaV5Commented.rdf#\",bd:\"http://www.bigdata.com/rdf#\",sh:\"http://www.w3.org/ns/shacl#\",ecs:\"http://rdf.ecs.soton.ac.uk/ontology/ecs#\",spin:\"http://spinrdf.org/spin#\",irw:\"http://www.ontologydesignpatterns.org/ont/web/irw.owl#\",daml:\"http://www.daml.org/2001/03/daml+oil#\",opm:\"https://w3id.org/opm#\",fise:\"http://fise.iks-project.eu/ontology/\",resist:\"http://www.rkbexplorer.com/ontologies/resist#\",wo:\"http://purl.org/ontology/wo/\",mods:\"http://www.loc.gov/mods/v3#\",sit:\"http://www.ontologydesignpatterns.org/cp/owl/situation.owl#\",olia:\"http://purl.org/olia/olia.owl#\",web:\"http://www.w3.org/2007/uwa/context/web.owl#\",protege:\"http://protege.stanford.edu/system#\",smf:\"http://topbraid.org/sparqlmotionfunctions#\",biocore:\"http://bio2rdf.org/core#\",granatum:\"http://chem.deri.ie/granatum/\",pmt:\"http://tipsy.googlecode.com/svn/trunk/vocab/pmt#\",omt:\"http://purl.org/ontomedia/ext/common/trait#\",oc:\"http://opencoinage.org/rdf/\",site:\"http://ns.ontowiki.net/SysOnt/Site/\",omb:\"http://purl.org/ontomedia/ext/common/being#\",mf:\"http://www.w3.org/2001/sw/DataAccess/tests/test-manifest#\",ping:\"https://namso-gen.com/\",myspo:\"http://purl.org/ontology/myspace#\",product:\"http://purl.org/commerce/product#\",admingeo:\"http://data.ordnancesurvey.co.uk/ontology/admingeo/\",wdt:\"http://www.wikidata.org/prop/direct/\",link:\"http://www.w3.org/2006/link#\",biol:\"http://purl.org/NET/biol/ns#\",cpa:\"http://www.ontologydesignpatterns.org/schemas/cpannotationschema.owl#\",rnews:\"http://iptc.org/std/rNews/2011-10-07#\",fresnel:\"http://www.w3.org/2004/09/fresnel#\",lx:\"http://purl.org/NET/lx#\",scot:\"http://rdfs.org/scot/ns#\",user:\"http://schemas.talis.com/2005/user/schema#\",climb:\"http://climb.dataincubator.org/vocabs/climb/\",politico:\"http://www.rdfabout.com/rdf/schema/politico/\",lfn:\"http://www.dotnetrdf.org/leviathan#\",meta:\"https://krr.triply.cc/krr/sameas-meta/def/\",bibtex:\"http://purl.org/net/nknouf/ns/bibtex#\",dctype:\"http://purl.org/dc/dcmitype/\",list:\"http://www.w3.org/2000/10/swap/list#\",food:\"http://purl.org/foodontology#\",mit:\"http://purl.org/ontology/mo/mit#\",wgs84:\"http://www.w3.org/2003/01/geo/wgs84_pos#\",cgov:\"http://reference.data.gov.uk/def/central-government/\",label:\"http://purl.org/net/vocab/2004/03/label#\",disco:\"http://rdf-vocabulary.ddialliance.org/discovery#\",wv:\"http://vocab.org/waiver/terms/\",umbel:\"http://umbel.org/umbel#\",chebi:\"http://bio2rdf.org/chebi:\",fec:\"http://www.rdfabout.com/rdf/schema/usfec/\",oauth:\"http://demiblog.org/vocab/oauth#\",video:\"http://purl.org/ontology/video#\",ddc:\"http://purl.org/NET/decimalised#\",atomix:\"http://buzzword.org.uk/rdf/atomix#\",pav:\"http://purl.org/pav/\",postcode:\"http://data.ordnancesurvey.co.uk/id/postcodeunit/\",doac:\"http://ramonantonio.net/doac/0.1/#\",geof:\"http://www.opengis.net/def/function/geosparql/\",npg:\"http://ns.nature.com/terms/\",meteo:\"http://purl.org/ns/meteo#\",wgs:\"http://www.w3.org/2003/01/geo/wgs84_pos#\",gso:\"http://www.w3.org/2006/gen/ont#\",taxo:\"http://purl.org/rss/1.0/modules/taxonomy/\",xkos:\"http://rdf-vocabulary.ddialliance.org/xkos#\",es:\"http://eulersharp.sourceforge.net/2003/03swap/log-rules#\",ass:\"http://uptheasset.org/ontology#\",sdl:\"http://purl.org/vocab/riro/sdl#\",omc:\"http://purl.org/ontomedia/ext/common/bestiary#\",acco:\"http://purl.org/acco/ns#\",compass:\"http://purl.org/net/compass#\",spl:\"http://spinrdf.org/spl#\",gnd:\"http://d-nb.info/gnd/\",penn:\"http://purl.org/olia/penn.owl#\",bio2rdf:\"http://bio2rdf.org/\",ontolex:\"http://www.w3.org/ns/lemon/ontolex#\",conv:\"http://purl.org/twc/vocab/conversion/\",so:\"http://purl.org/ontology/symbolic-music/\",os:\"http://www.w3.org/2000/10/swap/os#\",opensearch:\"http://a9.com/-/spec/opensearch/1.1/\",agg:\"http://purl.org/twc/health/vocab/aggregate/\",efo:\"http://www.ebi.ac.uk/efo/\",ms:\"http://purl.org/obo/owl/MS#\",rdfsharp:\"https://rdfsharp.codeplex.com/\",xro:\"http://purl.org/xro/ns#\",profiling:\"http://ontologi.es/profiling#\",ngeo:\"http://geovocab.org/geometry#\",rdac:\"http://rdaregistry.info/Elements/c/\",hg:\"http://rdf.histograph.io/\",tmo:\"http://www.semanticdesktop.org/ontologies/2008/05/20/tmo#\",interval:\"http://reference.data.gov.uk/def/intervals/\",usgov:\"http://www.rdfabout.com/rdf/schema/usgovt/\",lang:\"http://ontologi.es/lang/core#\",fed:\"http://www.openrdf.org/config/sail/federation#\",rdau:\"http://rdaregistry.info/Elements/u/\",contact:\"http://www.w3.org/2000/10/swap/pim/contact#\",ps:\"https://w3id.org/payswarm#\",sv:\"http://schemas.talis.com/2005/service/schema#\",up:\"http://purl.uniprot.org/core/\",rdrel:\"http://rdvocab.info/RDARelationshipsWEMI/\",ocd:\"http://dati.camera.it/ocd/\",cidoc:\"http://www.cidoc-crm.org/cidoc-crm/\",powder:\"http://www.w3.org/2007/05/powder#\",prj:\"http://purl.org/stuff/project/\",ire:\"http://www.ontologydesignpatterns.org/cpont/ire.owl#\",bp:\"http://www.biopax.org/release/biopax-level3.owl#\",pext:\"http://www.ontotext.com/proton/protonext#\",xhe:\"http://buzzword.org.uk/rdf/xhtml-elements#\",hydra:\"http://www.w3.org/ns/hydra/core#\",gpt:\"http://purl.org/vocab/riro/gpt#\",money:\"http://purl.org/net/rdf-money/\",inno:\"http://purl.org/innovation/ns#\",ref:\"http://purl.org/vocab/relationship/\",ao:\"http://purl.org/ontology/ao/core#\",sco:\"http://purl.org/ontology/sco#\",awol:\"http://bblfish.net/work/atom-owl/2006-06-06/#\",rep:\"http://www.openrdf.org/config/repository#\",game:\"http://data.totl.net/game/\",rei:\"http://www.w3.org/2004/06/rei#\",tio:\"http://purl.org/tio/ns#\",wikidata:\"http://www.wikidata.org/entity/\",code:\"http://telegraphis.net/ontology/measurement/code#\",omm:\"http://purl.org/ontomedia/core/media#\",xen:\"http://buzzword.org.uk/rdf/xen#\",omp:\"http://purl.org/ontomedia/ext/common/profession#\",soft:\"http://www.w3.org/2007/uwa/context/software.owl#\",hard:\"http://www.w3.org/2007/uwa/context/hardware.owl#\",lom:\"http://ltsc.ieee.org/rdf/lomv1p0/lom#\",sim:\"http://purl.org/ontology/similarity/\",ct:\"http://data.linkedct.org/resource/linkedct/\",xl:\"http://langegger.at/xlwrap/vocab#\",tdb:\"http://jena.hpl.hp.com/2008/tdb#\",lime:\"http://www.w3.org/ns/lemon/lime#\",worldbank:\"http://worldbank.270a.info/dataset/\",lfm:\"http://purl.org/ontology/last-fm/\",doclist:\"http://www.junkwork.net/xml/DocumentList#\",nrl:\"http://www.semanticdesktop.org/ontologies/2007/08/15/nrl#\",nt:\"http://ns.inria.fr/nicetag/2010/09/09/voc#\",chord:\"http://purl.org/ontology/chord/\",swp:\"http://www.w3.org/2004/03/trix/swp-2/\",sede:\"http://eventography.org/sede/0.1/\",purl:\"http://www.purl.org/\",audio:\"http://purl.org/media/audio#\",affy:\"http://www.affymetrix.com/community/publications/affymetrix/tmsplice#\",biopax:\"http://www.biopax.org/release/biopax-level3.owl#\",rdagr1:\"http://rdvocab.info/Elements/\",hlisting:\"http://sindice.com/hlisting/0.1/\",isothes:\"http://purl.org/iso25964/skos-thes#\",swivt:\"http://semantic-mediawiki.org/swivt/1.0#\",courseware:\"http://courseware.rkbexplorer.com/ontologies/courseware#\",uco:\"http://purl.org/uco/ns#\",sysont:\"http://ns.ontowiki.net/SysOnt/\",rdfa:\"http://www.w3.org/ns/rdfa#\",xlink:\"https://es.scribd.com/doc/79794476/05-Ejercicios-Resueltos-Caja-Negra-y-Recapitulacion/\",dailymed:\"http://www4.wiwiss.fu-berlin.de/dailymed/resource/dailymed/\",push:\"http://www.w3.org/2007/uwa/context/push.owl#\",eu:\"http://eulersharp.sourceforge.net/2003/03swap/log-rules#\",ui:\"http://www.w3.org/ns/ui#\",p3p:\"http://www.w3.org/2002/01/p3prdfv1#\",lgdo:\"http://linkedgeodata.org/ontology/\",spc:\"http://purl.org/ontomedia/core/space#\",library:\"http://purl.org/library/\",example:\"http://www.example.org/rdf#\",obj:\"http://www.openrdf.org/rdf/2009/object#\",icaltzd:\"http://www.w3.org/2002/12/cal/icaltzd#\",name:\"http://example.org/name#\",dwc:\"http://rs.tdwg.org/dwc/terms/\",cycann:\"http://sw.cyc.com/CycAnnotations_v1#\",pmlp:\"http://inference-web.org/2.0/pml-provenance.owl#\",irrl:\"http://www.ontologydesignpatterns.org/cp/owl/informationobjectsandrepresentationlanguages.owl#\",dbnary:\"http://kaiko.getalp.org/dbnary#\",oat:\"http://openlinksw.com/schemas/oat/\",custom:\"http://www.openrdf.org/config/sail/custom#\",ne:\"http://umbel.org/umbel/ne/\",like:\"http://ontologi.es/like#\",dady:\"http://purl.org/NET/dady#\",string:\"http://www.w3.org/2000/10/swap/string#\",ero:\"http://purl.obolibrary.org/obo/\",iswc:\"http://annotation.semanticweb.org/2004/iswc#\",sail:\"http://www.openrdf.org/config/sail#\",lt:\"http://diplomski.nelakolundzija.org/LTontology.rdf#\",crypto:\"http://www.w3.org/2000/10/swap/crypto#\",net:\"http://www.w3.org/2007/uwa/context/network.owl#\",vote:\"http://www.rdfabout.com/rdf/schema/vote/\",opo:\"http://online-presence.net/opo/ns#\",pbo:\"http://purl.org/ontology/pbo/core#\",swandr:\"http://purl.org/swan/1.2/discourse-relationships/\",sport:\"http://www.bbc.co.uk/ontologies/sport/\",airport:\"http://www.daml.org/2001/10/html/airport-ont#\",hcterms:\"http://purl.org/uF/hCard/terms/\",rov:\"http://www.w3.org/ns/regorg#\",moat:\"http://moat-project.org/ns#\",aifb:\"http://www.aifb.kit.edu/id/\",resource:\"http://purl.org/vocab/resourcelist/schema#\",rail:\"http://ontologi.es/rail/vocab#\",scv:\"http://purl.org/NET/scovo#\",tags:\"http://www.holygoat.co.uk/owl/redwood/0.1/tags/\",common:\"http://www.w3.org/2007/uwa/context/common.owl#\",copyright:\"http://rhizomik.net/ontologies/copyrightonto.owl#\",meetup:\"http://www.lotico.com/meetup/\",kwijibo:\"http://kwijibo.talis.com/\",states:\"http://www.w3.org/2005/07/aaa#\",swh:\"http://plugin.org.uk/swh-plugins/\",ist:\"http://purl.org/ontology/is/types/\",bib:\"http://zeitkunst.org/bibtex/0.1/bibtex.owl#\",frir:\"http://purl.org/twc/ontology/frir.owl#\",lastfm:\"http://purl.org/ontology/last-fm/\",phil:\"http://philosurfical.open.ac.uk/ontology/philosurfical.owl#\",pmlr:\"http://inference-web.org/2.0/pml-relation.owl#\",st:\"http://ns.inria.fr/sparql-template/\",anca:\"http://users.utcluj.ro/~raluca/rdf_ontologies_ralu/ralu_modified_ontology_pizzas2_0#\",sm:\"http://topbraid.org/sparqlmotion#\",cordis:\"http://cordis.europa.eu/projects/\",puc:\"http://purl.org/NET/puc#\",nexif:\"http://www.semanticdesktop.org/ontologies/2007/05/10/nexif#\",swanqs:\"http://purl.org/swan/1.2/qualifiers/\",ttl:\"http://www.w3.org/2008/turtle#\",wordmap:\"http://purl.org/net/ns/wordmap#\",ub:\"http://www.lehigh.edu/~zhp2/2004/0401/univ-bench.owl#\",wdr:\"http://www.w3.org/2007/05/powder#\",lifecycle:\"http://purl.org/vocab/lifecycle/schema#\",gob:\"http://purl.org/ontology/last-fm/\",nid3:\"http://www.semanticdesktop.org/ontologies/2007/05/10/nid3#\",mysql:\"http://web-semantics.org/ns/mysql/\",viaf:\"http://viaf.org/ontology/1.1/#\",eztag:\"http://ontologies.ezweb.morfeo-project.org/eztag/ns#\",lotico:\"http://www.lotico.com/resource/\",prissma:\"http://ns.inria.fr/prissma/v1#\",cogs:\"http://vocab.deri.ie/cogs#\",eco:\"http://www.ebusiness-unibw.org/ontologies/eclass/5.1.4/#\",resex:\"http://resex.rkbexplorer.com/ontologies/resex#\",dcmitype:\"http://purl.org/dc/dcmitype/\",lu:\"http://www.ontologydesignpatterns.org/ont/framenet/abox/lu/\",grddl:\"http://www.w3.org/2003/g/data-view#\",xforms:\"http://www.w3.org/2002/xforms/\",swanco:\"http://purl.org/swan/1.2/swan-commons/\",ddl:\"http://purl.org/vocab/riro/ddl#\",phss:\"http://ns.poundhill.com/phss/1.0/\",pim:\"http://www.w3.org/ns/pim/space#\",pobo:\"http://purl.obolibrary.org/obo/\",gsp:\"http://www.opengis.net/ont/geosparql#\",res:\"http://dbpedia.org/resource/\",conversion:\"http://purl.org/twc/vocab/conversion/\",person:\"http://www.w3.org/ns/person#\",dgtwc:\"http://data-gov.tw.rpi.edu/2009/data-gov-twc.rdf#\",edam:\"http://edamontology.org/\",gml:\"http://www.opengis.net/ont/gml#\",vivo:\"http://vivoweb.org/ontology/core#\",datafaqs:\"http://purl.org/twc/vocab/datafaqs#\",apivc:\"http://purl.org/linked-data/api/vocab#\",freebase:\"http://rdf.freebase.com/ns/\",com:\"http://purl.org/commerce#\",blt:\"http://www.bl.uk/schemas/bibliographic/blterms#\",act:\"http://www.w3.org/2007/rif-builtin-action#\",trackback:\"http://madskills.com/public/xml/rss/module/trackback/\",is:\"http://purl.org/ontology/is/core#\",pimo:\"http://www.semanticdesktop.org/ontologies/2007/11/01/pimo#\",sml:\"http://topbraid.org/sparqlmotionlib#\",dnr:\"http://www.dotnetrdf.org/configuration#\",dt:\"http://dbpedia.org/datatype/\",play:\"http://uriplay.org/spec/ontology/#\",dummy:\"http://hello.com/\",coin:\"http://purl.org/court/def/2009/coin#\",smiley:\"http://www.smileyontology.com/ns#\",seas:\"https://w3id.org/seas/\",pom:\"http://maven.apache.org/POM/4.0.0#\",muo:\"http://purl.oclc.org/NET/muo/muo#\",txn:\"http://lod.taxonconcept.org/ontology/txn.owl#\",wordnet:\"http://wordnet-rdf.princeton.edu/ontology#\",pdo:\"http://ontologies.smile.deri.ie/pdo#\",isq:\"http://purl.org/ontology/is/quality/\",ibis:\"http://purl.org/ibis#\",lingvoj:\"http://www.lingvoj.org/ontology#\",places:\"http://purl.org/ontology/places#\",ezcontext:\"http://ontologies.ezweb.morfeo-project.org/ezcontext/ns#\",evset:\"http://dsnotify.org/vocab/eventset/0.1/\",mei:\"http://www.music-encoding.org/ns/mei/\",prot:\"http://www.proteinontology.info/po.owl#\",asn:\"http://purl.org/ASN/schema/core/\",httpvoc:\"http://www.w3.org/2006/http#\",bag:\"http://bag.basisregistraties.overheid.nl/def/bag#\",arpfo:\"http://vocab.ouls.ox.ac.uk/projectfunding#\",muto:\"http://purl.org/muto/core#\",c4n:\"http://vocab.deri.ie/c4n#\",conserv:\"http://conserv.deri.ie/ontology#\",sdo:\"https://schema.org/\",wnschema:\"http://www.cogsci.princeton.edu/~wn/schema/\",qdoslf:\"http://foaf.qdos.com/lastfm/schema/\",rulz:\"http://purl.org/NET/rulz#\",payment:\"http://reference.data.gov.uk/def/payment#\",role:\"https://w3id.org/role/\",psych:\"http://purl.org/vocab/psychometric-profile/\",plink:\"http://buzzword.org.uk/rdf/personal-link-types#\",pgterms:\"http://www.gutenberg.org/2009/pgterms/\",iot:\"http://iotschema.org/\",osoc:\"http://web-semantics.org/ns/opensocial#\",posh:\"http://poshrdf.org/ns/posh/\",lp:\"http://launchpad.net/rdf/launchpad#\",vsr:\"http://purl.org/twc/vocab/vsr#\",human:\"http://eulersharp.sourceforge.net/2003/03swap/human#\",sl:\"http://www.semanlink.net/2001/00/semanlink-schema#\",ldap:\"http://purl.org/net/ldap/\",isi:\"http://purl.org/ontology/is/inst/\",locn:\"http://www.w3.org/ns/locn#\",sioca:\"http://rdfs.org/sioc/actions#\",lvont:\"http://lexvo.org/ontology#\",session:\"http://redfoot.net/2005/session#\",np:\"http://www.nanopub.org/nschema#\",rdaa:\"http://rdaregistry.info/Elements/a/\",b2bo:\"http://purl.org/b2bo#\",urn:\"http://fliqz.com/\",okkam:\"http://models.okkam.org/ENS-core-vocabulary#\",tripfs:\"http://purl.org/tripfs/2010/02#\",overheid:\"http://standaarden.overheid.nl/owms/\",opus:\"http://lsdis.cs.uga.edu/projects/semdis/opus#\",leak:\"http://data.ontotext.com/resource/leak/\",cheminf:\"http://www.semanticweb.org/ontologies/cheminf.owl#\",bsbm:\"http://www4.wiwiss.fu-berlin.de/bizer/bsbm/v01/vocabulary/\",h5:\"http://buzzword.org.uk/rdf/h5#\",swanpav:\"http://purl.org/swan/1.2/pav/\",dbpp:\"http://dbpedia.org/property/\",kontakt:\"http://richard.cyganiak.de/\",nsa:\"http://multimedialab.elis.ugent.be/organon/ontologies/ninsuna#\",address:\"http://schemas.talis.com/2005/address/schema#\",yoda:\"http://purl.org/NET/yoda#\",pml:\"http://provenanceweb.org/ns/pml#\",ean:\"http://openean.kaufkauf.net/id/\",geographis:\"http://telegraphis.net/ontology/geography/geography#\",cpv:\"http://purl.org/weso/cpv/\",ncal:\"http://www.semanticdesktop.org/ontologies/2007/04/02/ncal#\",bookmark:\"http://www.w3.org/2002/01/bookmark#\",arch:\"http://purl.org/archival/vocab/arch#\",wiki:\"http://en.wikipedia.org/wiki/\",xhtmlvocab:\"http://www.w3.org/1999/xhtml/vocab/\",ic:\"http://imi.go.jp/ns/core/rdf#\",timeline:\"http://purl.org/NET/c4dm/timeline.owl#\",enc:\"http://www.w3.org/2001/04/xmlenc#\",geospecies:\"http://rdf.geospecies.org/ont/geospecies#\",greg:\"http://kasei.us/about/foaf.xrdf#\",arg:\"http://rdfs.org/sioc/argument#\",lark1:\"http://users.utcluj.ro/~raluca/ontology/Ontology1279614123500.owl#\",deo:\"http://purl.org/spar/deo/\",zbwext:\"http://zbw.eu/namespaces/zbw-extensions/\",api:\"http://purl.org/linked-data/api/vocab#\",lr:\"http://linkedrecipes.org/schema/\",cpm:\"http://catalogus-professorum.org/cpm/2/\",faldo:\"http://biohackathon.org/resource/faldo#\",osgb:\"http://data.ordnancesurvey.co.uk/id/\",drug:\"http://www.agfa.com/w3c/2009/drugTherapy#\",odrl:\"http://www.w3.org/ns/odrl/2/\",bte:\"http://purl.org/twc/vocab/between-the-edges/\",tarot:\"http://data.totl.net/tarot/card/\",wairole:\"http://www.w3.org/2005/01/wai-rdf/GUIRoleTaxonomy#\",oslc:\"http://open-services.net/ns/core#\",card:\"http://www.ashutosh.com/test/\",vso:\"http://purl.org/vso/ns#\",coo:\"http://purl.org/coo/ns#\",fab:\"http://purl.org/fab/ns#\",ann:\"http://www.w3.org/2000/10/annotation-ns#\",ludo:\"http://ns.inria.fr/ludo/v1#\",gv:\"http://rdf.data-vocabulary.org/#\",calli:\"http://callimachusproject.org/rdf/2009/framework#\",eprints:\"http://eprints.org/ontology/\",exterms:\"http://www.example.org/terms/\",rdam:\"http://rdaregistry.info/Elements/m/\",eli:\"http://data.europa.eu/eli/ontology#\",olo:\"http://purl.org/ontology/olo/core#\",pro:\"http://purl.org/hpi/patchr#\",br:\"http://vocab.deri.ie/br#\",uri:\"http://purl.org/NET/uri#\",zem:\"http://s.zemanta.com/ns#\",voag:\"http://voag.linkedmodel.org/schema/voag#\",fd:\"http://foodable.co/ns/\",dita:\"http://purl.org/dita/ns#\",muni:\"http://vocab.linkeddata.es/urbanismo-infraestructuras/territorio#\",sawsdl:\"http://www.w3.org/ns/sawsdl#\",lex:\"http://purl.org/lex#\",frbre:\"http://purl.org/vocab/frbr/extended#\",agents:\"http://eulersharp.sourceforge.net/2003/03swap/agent#\",ospost:\"http://data.ordnancesurvey.co.uk/ontology/postcode/\",vitro:\"http://vitro.mannlib.cornell.edu/ns/vitro/public#\",aapi:\"http://rdf.alchemyapi.com/rdf/v1/s/aapi-schema#\",wlp:\"http://weblab-project.org/core/model/property/processing/\",hospital:\"http://www.agfa.com/w3c/2009/hospital#\",bing:\"http://bing.com/schema/media/\",pmlt:\"http://inference-web.org/2.0/pml-trust.owl#\",wikipedia:\"http://wikipedia.no/rdf/\",prvtypes:\"http://purl.org/net/provenance/types#\",remus:\"http://www.semanticweb.org/ontologies/2010/6/Ontology1279614123500.owl#\",aair:\"http://xmlns.notu.be/aair#\",wai:\"http://purl.org/wai#\",marl:\"http://www.gsi.dit.upm.es/ontologies/marl/ns#\",geodata:\"http://sws.geonames.org/\",ogp:\"http://ogp.me/ns#\",languages:\"http://eulersharp.sourceforge.net/2003/03swap/languages#\",un:\"http://www.w3.org/2007/ont/unit#\",mime:\"https://www.iana.org/assignments/media-types/\",agetec:\"http://www.agetec.org/\",status:\"http://www.w3.org/2003/06/sw-vocab-status/ns#\",care:\"http://eulersharp.sourceforge.net/2003/03swap/care#\",qa:\"http://www.mit.jyu.fi/ai/TRUST_Ontologies/QA.owl#\",nndsr:\"http://semanticdiet.com/schema/usda/nndsr/\",wisski:\"http://wiss-ki.eu/\",dso:\"http://purl.org/ontology/dso#\",aos:\"http://rdf.muninn-project.org/ontologies/appearances#\",odp:\"http://ontologydesignpatterns.org/\",dive:\"http://scubadive.networld.to/dive.rdf#\",cube:\"http://purl.org/linked-data/cube#\",iso:\"http://purl.org/iso25964/skos-thes#\",cos:\"http://www.inria.fr/acacia/corese#\",cmo:\"http://purl.org/twc/ontologies/cmo.owl#\",re:\"http://www.w3.org/2000/10/swap/reason#\",r2r:\"http://www4.wiwiss.fu-berlin.de/bizer/r2r/\",webtlab:\"http://webtlab.it.uc3m.es/\",req:\"http://purl.org/req/\",mygrid:\"http://www.mygrid.org.uk/ontology#\",opwn:\"http://www.ontologyportal.org/WordNet.owl#\",tcga:\"http://purl.org/tcga/core#\",imreg:\"http://www.w3.org/2004/02/image-regions#\",bibframe:\"http://bibframe.org/vocab/\",swanci:\"http://purl.org/swan/1.2/citations/\",fea:\"http://vocab.data.gov/def/fea#\",xesam:\"http://freedesktop.org/standards/xesam/1.0/core#\",won:\"https://w3id.org/won/core#\",rooms:\"http://vocab.deri.ie/rooms#\",tr:\"http://www.thomsonreuters.com/\",ncbitaxon:\"http://purl.org/obo/owl/NCBITaxon#\",hemogram:\"http://www.agfa.com/w3c/2009/hemogram#\",algo:\"http://securitytoolbox.appspot.com/securityAlgorithms#\",pos:\"http://www.w3.org/2003/01/geo/wgs84_pos#\",provenir:\"http://knoesis.wright.edu/provenir/provenir.owl#\",stanford:\"http://purl.org/olia/stanford.owl#\",linkedct:\"http://data.linkedct.org/vocab/\",prefix:\"http://prefix.cc/\",xds:\"http://www.w3.org/2001/XMLSchema#\",pay:\"http://reference.data.gov.uk/def/payment#\",gc:\"http://www.oegov.org/core/owl/gc#\",linkedmdb:\"http://data.linkedmdb.org/sparql/\",life:\"http://life.deri.ie/schema/\",osn:\"http://spatial.ucd.ie/lod/osn/\",cex:\"http://purl.org/weso/computex/ontology#\",bne:\"http://datos.bne.es/resource/\",wao:\"http://webtlab.it.uc3m.es/2010/10/WebAppsOntology#\",dayta:\"http://dayta.me/resource#\",soc:\"http://purl.org/net/hdlipcores/ontology/soc#\",mm:\"http://linkedmultimedia.org/sparql-mm/ns/2.0.0/function#\",dco:\"http://info.deepcarbon.net/schema#\",aneo:\"http://akonadi-project.org/ontologies/aneo#\",city:\"http://datos.localidata.com/def/City#\",visit:\"http://purl.org/net/vocab/2004/07/visit#\",toby:\"http://tobyinkster.co.uk/#\",fls:\"http://lukasblaho.sk/football_league_schema#\",omv:\"http://omv.ontoware.org/2005/05/ontology#\",opmv:\"http://purl.org/net/opmv/ns#\",teach:\"http://linkedscience.org/teach/ns#\",dbpo:\"http://dbpedia.org/ontology/\",dnb:\"http://d-nb.info/gnd/\",quak:\"http://dev.w3.org/cvsweb/2000/quacken/vocab#\",xfnv:\"http://vocab.sindice.com/xfn#\",rda:\"http://www.rdaregistry.info/\",rdo:\"http://purl.org/rdo/ns#\",oboe:\"http://ecoinformatics.org/oboe/oboe.1.0/oboe-core.owl#\",xsl:\"http://www.w3.org/1999/XSL/Transform#\",wp:\"http://vocabularies.wikipathways.org/wp#\",derecho:\"http://purl.org/derecho#\",sindice:\"http://vocab.sindice.net/\",oad:\"http://lod.xdams.org/reload/oad/\",ppo:\"http://vocab.deri.ie/ppo#\",prf:\"http://www.openmobilealliance.org/tech/profiles/UAPROF/ccppschema-20021212#\",skip:\"http://skipforward.net/skipforward/resource/\",pf:\"http://jena.hpl.hp.com/ARQ/property#\",wi:\"http://purl.org/ontology/wi/core#\",out:\"http://ontologies.hypios.com/out#\",jita:\"http://aims.fao.org/aos/jita/\",atomowl:\"http://bblfish.net/work/atom-owl/2006-06-06/#\",fowl:\"http://www.w3.org/TR/2003/PR-owl-guide-20031209/food#\",protons:\"http://proton.semanticweb.org/2005/04/protons#\",gelo:\"http://krauthammerlab.med.yale.edu/ontologies/gelo#\",dgfoaf:\"http://west.uni-koblenz.de/ontologies/2010/07/dgfoaf.owl#\",span:\"http://www.ifomis.org/bfo/1.1/span#\",dcr:\"http://www.isocat.org/ns/dcr.rdf#\",organiz:\"http://eulersharp.sourceforge.net/2003/03swap/organization#\",gridworks:\"http://purl.org/net/opmv/types/gridworks#\",esd:\"http://def.esd.org.uk/\",rlog:\"http://persistence.uni-leipzig.org/nlp2rdf/ontologies/rlog#\",evopat:\"http://ns.aksw.org/Evolution/\",c4o:\"http://purl.org/spar/c4o/\",govtrackus:\"http://www.rdfabout.com/rdf/usgov/geo/us/\",metalex:\"http://www.metalex.eu/schema/1.0#\",comm:\"http://vocab.resc.info/communication#\",countries:\"http://eulersharp.sourceforge.net/2003/03swap/countries#\",emotion:\"http://ns.inria.fr/emoca#\",dsp:\"http://purl.org/metainfo/terms/dsp#\",ccom:\"http://purl.org/ontology/cco/mappings#\",bioskos:\"http://eulersharp.sourceforge.net/2003/03swap/bioSKOSSchemes#\",oboro:\"http://obofoundry.org/ro/ro.owl#\",rv:\"http://wifo-ravensburg.de/semanticweb.rdf#\",eclap:\"http://www.eclap.eu/schema/eclap/\",hxl:\"http://hxl.humanitarianresponse.info/ns/#\",theatre:\"http://purl.org/theatre#\",agent:\"http://eulersharp.sourceforge.net/2003/03swap/agent#\",prvr:\"http://purl.org/ontology/prv/rules#\",scsv:\"http://purl.org/NET/schema-org-csv#\",kdo:\"http://kdo.render-project.eu/kdo#\",gazetteer:\"http://data.ordnancesurvey.co.uk/ontology/50kGazetteer/\",san:\"http://www.irit.fr/recherches/MELODI/ontologies/SAN#\",arecipe:\"http://purl.org/amicroformat/arecipe/\",wbp:\"http://worldbank.270a.info/property/\",iao:\"http://purl.obolibrary.org/obo/iao.owl#\",spatial:\"http://geovocab.org/spatial#\",igeo:\"http://rdf.insee.fr/def/geo#\",sql:\"http://ns.inria.fr/ast/sql#\",wbc:\"http://worldbank.270a.info/classification/\",ple:\"http://pleiades.stoa.org/places/\",elog:\"http://eulersharp.sourceforge.net/2003/03swap/log-rules#\",decl:\"http://www.linkedmodel.org/1.0/schema/decl#\",cao:\"http://purl.org/makolab/caont/\",agrelon:\"http://d-nb.info/standards/elementset/agrelon#\",nocal:\"http://vocab.deri.ie/nocal#\",cb:\"http://cbasewrap.ontologycentral.com/vocab#\",swanag:\"http://purl.org/swan/1.2/agents/\",loticoowl:\"http://www.lotico.com/ontology/\",xbrli:\"http://www.xbrl.org/2003/instance#\",commons:\"http://commons.psi.enakting.org/def/\",dis:\"http://stanbol.apache.org/ontology/disambiguation/disambiguation#\",sig:\"http://purl.org/signature#\",xt:\"http://purl.org/twc/vocab/cross-topix#\",vaem:\"http://www.linkedmodel.org/schema/vaem#\",uni:\"http://purl.org/weso/uni/uni.html#\",enhancer:\"http://stanbol.apache.org/ontology/enhancer/enhancer#\",ens:\"http://models.okkam.org/ENS-core-vocabulary.owl#\",units:\"http://eulersharp.sourceforge.net/2003/03swap/units#\",oboso:\"http://purl.org/obo/owl/SO#\",xch:\"http://oanda2rdf.appspot.com/xch/\",events:\"http://eulersharp.sourceforge.net/2003/03swap/event#\",tmpl:\"http://purl.org/restdesc/http-template#\",premis:\"http://www.loc.gov/premis/rdf/v1#\",rad:\"http://www.w3.org/ns/rad#\",htir:\"http://www.w3.org/2011/http#\",reve:\"http://data.eurecom.fr/ontology/reve#\",nuts:\"http://dd.eionet.europa.eu/vocabulary/common/nuts/\",aims:\"http://aims.fao.org/aos/common/\",idemo:\"http://rdf.insee.fr/def/demo#\",health:\"http://purl.org/twc/health/vocab/\",bbc:\"http://www.bbc.co.uk/ontologies/news/\",cidoccrm:\"http://purl.org/NET/cidoc-crm/core#\",pna:\"http://data.press.net/ontology/asset/\",swpo:\"http://sw-portal.deri.org/ontologies/swportal#\",w3p:\"http://prov4j.org/w3p/\",shv:\"http://ns.aksw.org/spatialHierarchy/\",recipe:\"http://linkedrecipes.org/schema/\",dbt:\"http://dbpedia.org/resource/Template:\",fc:\"http://www.freeclass.eu/freeclass_v1#\",admssw:\"http://purl.org/adms/sw/\",wgspos:\"http://www.w3.org/2003/01/geo/wgs84_pos#\",clineva:\"http://www.agfa.com/w3c/2009/clinicalEvaluation#\",mte:\"http://nl.ijs.si/ME/owl/\",oper:\"http://sweet.jpl.nasa.gov/2.0/mathOperation.owl#\",sem:\"http://semanticweb.cs.vu.nl/2009/11/sem/\",pccz:\"http://purl.org/procurement/public-contracts-czech#\",mp:\"http://jicamaro.info/mp#\",ufmedia:\"http://purl.org/microformat/hmedia/\",aigp:\"http://swat.cse.lehigh.edu/resources/onto/aigp.owl#\",italy:\"http://data.kasabi.com/dataset/italy/schema/\",wl:\"http://www.wsmo.org/ns/wsmo-lite#\",genab:\"http://eulersharp.sourceforge.net/2003/03swap/genomeAbnormality#\",ends:\"http://labs.mondeca.com/vocab/endpointStatus#\",orca:\"http://geni-orca.renci.org/owl/topology.owl#\",dcm:\"http://purl.org/dc/dcmitype/\",kw:\"http://kwantu.net/kw/\",oax:\"http://www.w3.org/ns/openannotation/extensions/\",rlno:\"http://rdflivenews.aksw.org/ontology/\",infosys:\"http://www.infosys.com/\",doco:\"http://purl.org/spar/doco/\",oj:\"http://ontojob.at/\",set:\"http://www.w3.org/2000/10/swap/set#\",transit:\"http://vocab.org/transit/terms/\",wf:\"http://www.w3.org/2005/01/wf/flow#\",httpm:\"http://www.w3.org/2011/http-methods#\",owls:\"http://www.daml.org/services/owl-s/1.2/Service.owl#\",sdgp:\"http://stats.data-gov.ie/property/\",fcm:\"http://eulersharp.sourceforge.net/2006/02swap/fcm#\",ogorg:\"http://opengraph.org/schema/\",pol:\"http://escience.rpi.edu/ontology/semanteco/2/0/pollution.owl#\",visko:\"http://trust.utep.edu/visko/ontology/visko-operator-v3.owl#\",pns:\"http://data.press.net/ontology/stuff/\",tei:\"http://www.tei-c.org/ns/1.0/\",vocab:\"http://rdf.ontology2.com/vocab#\",dtype:\"http://www.linkedmodel.org/schema/dtype#\",carfo:\"http://purl.org/carfo#\",humanbody:\"http://eulersharp.sourceforge.net/2003/03swap/humanBody#\",fl:\"http://eulersharp.sourceforge.net/2003/03swap/fl-rules#\",pne:\"http://data.press.net/ontology/event/\",coun:\"http://www.daml.org/2001/09/countries/iso-3166-ont#\",eseduc:\"http://www.purl.org/ontologia/eseduc#\",myprefix:\"http://myprefix.org/\",itsmo:\"http://ontology.it/itsmo/v1#\",semtweet:\"http://semantictweet.com/\",kupkb:\"http://www.e-lico.eu/data/kupkb/\",wapp:\"http://ns.rww.io/wapp#\",open:\"http://open.vocab.org/terms/\",owltime:\"http://www.w3.org/TR/owl-time#\",scowt:\"http://purl.org/weso/ontologies/scowt#\",npgd:\"http://ns.nature.com/datasets/\",hgnc:\"http://bio2rdf.org/hgnc:\",prolog:\"http://eulersharp.sourceforge.net/2003/03swap/prolog#\",intervals:\"http://reference.data.gov.uk/def/intervals/\",sgv:\"http://www.w3.org/TR/SVG/\",nyt:\"http://data.nytimes.com/\",healthcare:\"http://www.agfa.com/w3c/2009/healthCare#\",wfdesc:\"http://purl.org/wf4ever/wfdesc#\",aersv:\"http://aers.data2semantics.org/vocab/\",place:\"http://purl.org/ontology/places/\",ccard:\"http://purl.org/commerce/creditcard#\",artstor:\"http://simile.mit.edu/2003/10/ontologies/artstor#\",ipad:\"http://www.padinthecity.com/\",wfm:\"http://purl.org/net/wf-motifs#\",geom:\"http://data.ign.fr/def/geometrie#\",spif:\"http://spinrdf.org/spif#\",dctypes:\"http://purl.org/dc/dcmitype/\",gxa:\"http://www.ebi.ac.uk/gxa/\",coeus:\"http://bioinformatics.ua.pt/coeus/\",nytimes:\"http://data.nytimes.com/elements/\",rdfdf:\"http://www.openlinksw.com/virtrdf-data-formats#\",npgg:\"http://ns.nature.com/graphs/\",func:\"http://www.w3.org/2007/rif-builtin-function#\",dl:\"http://ontology.ip.rm.cnr.it/ontologies/DOLCE-Lite#\",oboinowl:\"http://www.geneontology.org/formats/oboInOwl#\",bsb:\"http://opacplus.bsb-muenchen.de/title/\",rating:\"http://www.tvblob.com/ratings/#\",lctr:\"http://data.linkedct.org/vocab/resource/\",ecb:\"http://ecb.270a.info/class/1.0/\",xmls:\"http://www.w3.org/2001/XMLSchema#\",flow:\"http://www.w3.org/2005/01/wf/flow#\",eye:\"http://jena.hpl.hp.com/Eyeball#\",pronom:\"http://reference.data.gov.uk/technical-registry/\",vra:\"http://purl.org/vra/\",saxon:\"http://saxon.sf.net/\",osmsemnet:\"http://spatial.ucd.ie/2012/08/osmsemnet/\",wm:\"http://ns.inria.fr/webmarks#\",nxp:\"http://purl.org/nxp/schema/v1/\",pkmn:\"http://pokedex.dataincubator.org/pkm/\",vcardx:\"http://buzzword.org.uk/rdf/vcardx#\",goef:\"http://purl.org/twc/vocab/goef#\",dssn:\"http://purl.org/net/dssn/\",cold:\"http://purl.org/configurationontology#\",penis:\"http://penis.to/#\",malignneo:\"http://www.agfa.com/w3c/2009/malignantNeoplasm#\",frapo:\"http://purl.org/cerif/frapo/\",rdaw:\"http://rdaregistry.info/Elements/w/\",centrifuge:\"http://purl.org/twc/vocab/centrifuge#\",wsc:\"http://www.openk.org/wscaim.owl#\",soap:\"http://www.w3.org/2003/05/soap-envelope/\",osr:\"http://dati.senato.it/osr/\",aerols:\"http://xmlns.com/aerols/0.1/\",govwild:\"http://govwild.org/0.6/GWOntology.rdf/\",rpubl:\"http://rinfo.lagrummet.se/ns/2008/11/rinfo/publ#\",ql:\"http://www.w3.org/2004/ql#\",ngeoi:\"http://vocab.lenka.no/geo-deling#\",bm:\"http://bio2rdf.org/\",lh:\"http://vocab.inf.ed.ac.uk/library/holdings#\",ecpo:\"http://purl.org/ontology/ecpo#\",telix:\"http://purl.org/telix#\",emp:\"http://purl.org/ctic/empleo/oferta#\",crtv:\"http://open-services.net/ns/crtv#\",str:\"http://nlp2rdf.lod2.eu/schema/string/\",s4ac:\"http://ns.inria.fr/s4ac/v2#\",article:\"http://ogp.me/ns/article#\",mtecore:\"http://purl.org/olia/mte/multext-east.owl#\",bmo:\"http://collection.britishmuseum.org/id/ontology/\",lod2:\"http://lod2.eu/schema/\",fct:\"http://openlinksw.com/services/facets/1.0/\",daiaserv:\"http://purl.org/ontology/daia/Service/\",ec:\"http://eulergui.sourceforge.net/contacts.owl.n3#\",openskos:\"http://openskos.org/xmlns#\",moby:\"http://www.mygrid.org.uk/mygrid-moby-service#\",nsl:\"http://purl.org/ontology/storyline/\",oac:\"http://www.openannotation.org/ns/\",poder:\"http://poderopedia.com/vocab/\",cf:\"http://mmisw.org/ont/cf/parameter/\",genea:\"http://www.owl-ontologies.com/generations.owl#\",rso:\"http://www.researchspace.org/ontology/\",diseasome:\"http://www4.wiwiss.fu-berlin.de/diseasome/resource/diseasome/\",mil:\"http://rdf.muninn-project.org/ontologies/military#\",ekaw:\"http://data.semanticweb.org/conference/ekaw/2012/complete/\",meb:\"http://rdf.myexperiment.org/ontologies/base/\",skos08:\"http://www.w3.org/2008/05/skos#\",osp:\"http://data.lirmm.fr/ontologies/osp#\",va:\"http://code-research.eu/ontology/visual-analytics#\",p20:\"http://zbw.eu/beta/p20/vocab/\",wfprov:\"http://purl.org/wf4ever/wfprov#\",mohammad:\"http://manesht.ir/\",te:\"http://www.w3.org/2006/time-entry#\",category:\"http://dbpedia.org/resource/Category:\",lgv:\"http://linkedgeodata.org/ontology/\",ling:\"http://purl.org/voc/ling/\",gbv:\"http://purl.org/ontology/gbv/\",grs:\"http://www.georss.org/georss/\",pam:\"http://prismstandard.org/namespaces/pam/2.0/\",identity:\"http://purl.org/twc/ontologies/identity.owl#\",atomrdf:\"http://atomowl.org/ontologies/atomrdf#\",environ:\"http://eulersharp.sourceforge.net/2003/03swap/environment#\",hp:\"http://purl.org/voc/hp/\",okg:\"http://openknowledgegraph.org/ontology/\",clinproc:\"http://www.agfa.com/w3c/2009/clinicalProcedure#\",geofla:\"http://data.ign.fr/ontologies/geofla#\",vsto:\"http://escience.rpi.edu/ontology/vsto/2/0/vsto.owl#\",cis:\"http://purl.org/NET/cloudisus#\",sad:\"http://vocab.deri.ie/sad#\",msr:\"http://www.telegraphis.net/ontology/measurement/measurement#\",namespaces:\"https://vg.no/\",no:\"http://km.aifb.kit.edu/projects/numbers/number#\",archdesc:\"http://archdesc.info/archEvent#\",leaks:\"https://cuzin.com/\",fingal:\"http://vocab.deri.ie/fingal#\",fbgeo:\"http://rdf.freebase.com/ns/location/geocode/\",wkd:\"http://schema.wolterskluwer.de/\",oecd:\"http://oecd.270a.info/dataset/\",camelot:\"http://vocab.ox.ac.uk/camelot#\",hartigprov:\"http://purl.org/net/provenance/ns#\",marshall:\"http://sites.google.com/site/xgmaitc/\",tvc:\"http://www.essepuntato.it/2012/04/tvc/\",rich:\"http://rdf.data-vocabulary.org/\",mpeg7:\"http://rhizomik.net/ontologies/2005/03/Mpeg7-2001.owl#\",gfo:\"http://www.onto-med.de/ontologies/gfo.owl#\",tisc:\"http://observedchange.com/tisc/ns#\",frad:\"http://iflastandards.info/ns/fr/frad/\",biordf:\"http://purl.org/net/biordfmicroarray/ns#\",dpl:\"http://dbpedialite.org/things/\",stac:\"http://securitytoolbox.appspot.com/stac#\",d2r:\"http://sites.wiwiss.fu-berlin.de/suhl/bizer/d2r-server/config.rdf#\",psh:\"http://psh.techlib.cz/skos/\",puelia:\"http://kwijibo.talis.com/vocabs/puelia#\",geovocab:\"http://geovocab.org/\",qu:\"http://purl.oclc.org/NET/ssnx/qu/qu#\",wscaim:\"http://www.openk.org/wscaim.owl#\",qvoc:\"http://mlode.nlp2rdf.org/quranvocab#\",oarj:\"http://opendepot.org/reference/linked/1.0/\",scms:\"http://ns.aksw.org/scms/annotations/\",gesis:\"http://lod.gesis.org/lodpilot/ALLBUS/vocab.rdf#\",tripfs2:\"http://purl.org/tripfs/2010/06#\",c4dm:\"http://purl.org/NET/c4dm/event.owl#\",opmw:\"http://www.opmw.org/ontology/\",occult:\"http://data.totl.net/occult/\",iron:\"http://purl.org/ontology/iron#\",opl:\"http://openlinksw.com/schema/attribution#\",protegedc:\"http://protege.stanford.edu/plugins/owl/dc/protege-dc.owl#\",bcnnorms:\"http://datos.bcn.cl/ontologies/bcn-norms#\",gastro:\"http://www.ebsemantics.net/gastro#\",l4a:\"http://labels4all.info/ns/\",hcard:\"http://purl.org/uF/hCard/terms/\",s2s:\"http://escience.rpi.edu/ontology/sesf/s2s/4/0/\",dbyago:\"http://dbpedia.org/class/yago/\",curr:\"https://w3id.org/cc#\",kbp:\"http://tackbp.org/2013/ontology#\",cdtype:\"http://purl.org/cld/cdtype/\",csm:\"http://purl.org/csm/1.0#\",ebu:\"http://semantic.eurobau.com/eurobau-utility.owl#\",ptop:\"http://www.ontotext.com/proton/protontop#\",osukdt:\"http://www.ordnancesurvey.co.uk/ontology/Datatypes.owl#\",bfo:\"http://purl.obolibrary.org/obo/\",ru:\"http://purl.org/imbi/ru-meta.owl#\",skiresort:\"http://www.openlinksw.com/ski_resorts/schema#\",bcncon:\"http://datos.bcn.cl/ontologies/bcn-congress#\",campsite:\"http://www.openlinksw.com/campsites/schema#\",taxon:\"http://purl.org/biodiversity/taxon/\",zoomaterms:\"http://rdf.ebi.ac.uk/vocabulary/zooma/\",laposte:\"http://data.lirmm.fr/ontologies/laposte#\",fos:\"http://futurios.org/fos/spec/\",dcndl:\"http://ndl.go.jp/dcndl/terms/\",dawgt:\"http://www.w3.org/2001/sw/DataAccess/tests/test-dawg#\",l4lod:\"http://ns.inria.fr/l4lod/v2/\",rssynd:\"http://web.resource.org/rss/1.0/modules/syndication/\",osspr:\"http://data.ordnancesurvey.co.uk/ontology/spatialrelations/\",sci:\"http://data.scientology.org/ns/\",transmed:\"http://www.w3.org/2001/sw/hcls/ns/transmed/\",mads:\"http://www.loc.gov/mads/rdf/v1#\",paia:\"http://purl.org/ontology/paia#\",qrl:\"http://www.aifb.kit.edu/project/ld-retriever/qrl#\",ds:\"http://purl.org/ctic/dcat#\",frbrcore:\"http://purl.org/vocab/frbr/core#\",hifm:\"http://purl.org/net/hifm/data#\",cmd:\"http://clarin.eu/cmd#\",rec54:\"http://www.w3.org/2001/02pd/rec54.rdf#\",seq:\"http://www.ontologydesignpatterns.org/cp/owl/sequence.owl#\",prvt:\"http://purl.org/net/provenance/types#\",geop:\"http://aims.fao.org/aos/geopolitical.owl#\",prism21:\"http://prismstandard.org/namespaces/basic/2.1/\",odcs:\"http://opendata.cz/infrastructure/odcleanstore/\",pso:\"http://purl.org/spar/pso/\",sso:\"http://nlp2rdf.lod2.eu/schema/sso/\",onyx:\"http://www.gsi.dit.upm.es/ontologies/onyx/ns#\",bihap:\"http://bihap.kb.gov.tr/ontology/\",tblcard:\"http://www.w3.org/People/Berners-Lee/card#\",eumida:\"http://data.kasabi.com/dataset/eumida/terms/\",b2rpubchem:\"http://bio2rdf.org/ns/ns/ns/pubchem#\",dcite:\"http://purl.org/spar/datacite/\",steel:\"http://ontorule-project.eu/resources/steel-30#\",refe:\"http://orion.tw.rpi.edu/~xgmatwc/refe/\",pubmed:\"http://bio2rdf.org/pubmed_vocabulary:\",harrisons:\"http://harrisons.cc/\",elec:\"http://purl.org/ctic/sector-publico/elecciones#\",infor:\"http://www.ontologydesignpatterns.org/cp/owl/informationrealization.owl#\",vsw:\"http://verticalsearchworks.com/ontology/\",dbkwik:\"http://dbkwik.webdatacommons.org/\",crv:\"http://purl.org/twc/vocab/datacarver#\",parl:\"https://id.parliament.uk/schema/\",qud:\"http://qudt.org/1.1/schema/qudt#\",wsl:\"http://www.wsmo.org/ns/wsmo-lite#\",quantities:\"http://eulersharp.sourceforge.net/2003/03swap/quantitiesExtension#\",part:\"http://purl.org/vocab/participation/schema#\",spt:\"http://spitfire-project.eu/ontology/ns/\",bwb:\"http://doc.metalex.eu/bwb/ontology/\",bridge:\"http://purl.org/vocommons/bridge#\",li:\"http://def.seegrid.csiro.au/isotc211/iso19115/2003/lineage#\",bcnbio:\"http://datos.bcn.cl/ontologies/bcn-biographies#\",telmap:\"http://purl.org/telmap/\",sioctypes:\"http://rdfs.org/sioc/types#\",mrel:\"http://id.loc.gov/vocabulary/relators/\",conf:\"http://richard.cyganiak.de/2007/pubby/config.rdf#\",alchemy:\"http://rdf.alchemyapi.com/rdf/v1/s/aapi-schema#\",aers:\"http://aers.data2semantics.org/resource/\",rdae:\"http://rdaregistry.info/Elements/e/\",daisy:\"http://www.daisy.org/z3998/2012/vocab/\",osgeom:\"http://data.ordnancesurvey.co.uk/ontology/geometry/\",vsws:\"http://verticalsearchworks.com/ontology/synset#\",hints2005:\"http://purl.org/twc/cabig/model/HINTS2005-1.owl#\",sdmxd:\"http://purl.org/linked-data/sdmx/2009/dimension#\",lldr:\"http://purl.oclc.org/NET/lldr/ns#\",pizza:\"http://www.co-ode.org/ontologies/pizza/pizza.owl#\",germplasm:\"http://purl.org/germplasm/terms#\",ep:\"http://eprints.org/ontology/\",stream:\"http://dbpedia.org/ontology/Stream/\",webbox:\"http://webbox.ecs.soton.ac.uk/ns#\",lexvo:\"http://lexvo.org/ontology#\",lodac:\"http://lod.ac/ns/lodac#\",dvia:\"http://data.eurecom.fr/ontology/dvia#\",orges:\"http://datos.gob.es/def/sector-publico/organizacion#\",jjd:\"http://www.joshuajeeson.com/\",cts2:\"http://schema.omg.org/spec/CTS2/1.0/\",rdamedia:\"http://rdvocab.info/termList/RDAMediaType/\",od:\"http://purl.org/twc/vocab/opendap#\",water:\"http://escience.rpi.edu/ontology/semanteco/2/0/water.owl#\",strdf:\"http://strdf.di.uoa.gr/ontology#\",eui:\"http://institutions.publicdata.eu/#\",situ:\"http://www.ontologydesignpatterns.org/cp/owl/situation.owl#\",vrank:\"http://purl.org/voc/vrank#\",w3con:\"http://www.w3.org/2000/10/swap/pim/contact#\",iol:\"http://www.ontologydesignpatterns.org/ont/dul/IOLite.owl#\",omapi:\"http://purl.org/omapi/0.2/#\",wikterms:\"http://wiktionary.dbpedia.org/terms/\",eunis:\"http://eunis.eea.europa.eu/rdf/species-schema.rdf#\",lcy:\"http://purl.org/vocab/lifecycle/schema#\",roevo:\"http://purl.org/wf4ever/roevo#\",mged:\"http://mged.sourceforge.net/ontologies/MGEDOntology.owl#\",ecos:\"http://kmm.lboro.ac.uk/ecos/1.0#\",wlo:\"http://purl.org/ontology/wo/\",quty:\"http://www.telegraphis.net/ontology/measurement/quantity#\",npgx:\"http://ns.nature.com/extensions/\",ox:\"http://vocab.ox.ac.uk/projectfunding#\",opmo:\"http://openprovenance.org/model/opmo#\",swperson:\"http://data.semanticweb.org/person/\",moac:\"http://observedchange.com/moac/ns#\",graffle:\"http://purl.org/twc/vocab/vsr/graffle#\",mb:\"http://dbtune.org/musicbrainz/resource/instrument/\",nidm:\"http://nidm.nidash.org/\",prviv:\"http://purl.org/net/provenance/integrity#\",biro:\"http://purl.org/spar/biro/\",pingback:\"http://purl.org/net/pingback/\",vdpp:\"http://data.lirmm.fr/ontologies/vdpp#\",rdacarrier:\"http://rdvocab.info/termList/RDACarrierType/\",cosmo:\"http://purl.org/ontology/cosmo#\",op:\"http://environment.data.gov.au/def/op#\",fincaselaw:\"http://purl.org/finlex/schema/oikeus/\",viskoo:\"http://trust.utep.edu/visko/ontology/visko-operator-v3.owl#\",who:\"http://www.who.int/vocab/ontology#\",turismo:\"http://idi.fundacionctic.org/cruzar/turismo#\",emoca:\"http://ns.inria.fr/emoca#\",rdarel:\"http://rdvocab.info/RDARelationshipsWEMI/\",dcoid:\"http://dx.deepcarbon.net/\",luc:\"http://www.ontotext.com/owlim/lucene#\",r4ta:\"http://ns.inria.fr/ratio4ta/v1#\",cbase:\"http://ontologycentral.com/2010/05/cb/vocab#\",infection:\"http://www.agfa.com/w3c/2009/infectiousDisorder#\",semio:\"http://www.lingvoj.org/semio#\",twaapi:\"http://purl.org/twc/vocab/aapi-schema#\",swpatho:\"http://swpatho.ag-nbi.de/context/meta.owl#\",fma:\"http://sig.uw.edu/fma#\",mt:\"http://www.w3.org/2001/sw/DataAccess/tests/test-manifest#\",pkgsrc:\"http://pkgsrc.co/schema#\",lsc:\"http://linkedscience.org/lsc/ns#\",wno:\"http://wordnet-rdf.princeton.edu/ontology#\",rlnr:\"http://rdflivenews.aksw.org/resource/\",disease:\"http://www.agfa.com/w3c/2009/humanDisorder#\",odv:\"http://reference.data.gov.uk/def/organogram/\",ctorg:\"http://purl.org/ctic/infraestructuras/organizacion#\",onssprel:\"http://www.ordnancesurvey.co.uk/ontology/SpatialRelations/v0.2/SpatialRelations.owl#\",fcp:\"http://www.newmedialab.at/fcp/\",ordf:\"http://purl.org/NET/ordf/\",omnlife:\"http://open-multinet.info/ontology/omn-lifecycle#\",bv:\"http://purl.org/vocommons/bv#\",ssso:\"http://purl.org/ontology/ssso#\",my:\"http://www.mobile.com/model/\",agls:\"http://www.agls.gov.au/agls/terms/\",particip:\"http://purl.org/vocab/participation/schema#\",saif:\"http://wwwiti.cs.uni-magdeburg.de/~srahman/\",odapp:\"http://vocab.deri.ie/odapp#\",tsioc:\"http://rdfs.org/sioc/types#\",cvbase:\"http://purl.org/captsolo/resume-rdf/0.2/base#\",dogont:\"http://elite.polito.it/ontologies/dogont.owl#\",lingvo:\"http://www.lingvoj.org/ontology#\",vin:\"http://www.w3.org/TR/2003/PR-owl-guide-20031209/wine#\",r2rml:\"http://www.w3.org/ns/r2rml#\",vvo:\"http://purl.org/vvo/ns#\",rdarole:\"http://rdvocab.info/roles/\",radion:\"http://www.w3.org/ns/radion#\",dr:\"http://purl.org/swan/2.0/discourse-relationships/\",rs:\"http://spektrum.ctu.cz/ontologies/radio-spectrum#\",accom:\"http://purl.org/acco/ns#\",frame:\"http://www.ontologydesignpatterns.org/ont/framenet/abox/frame/\",asgv:\"http://aims.fao.org/aos/agrovoc/\",mvco:\"http://purl.oclc.org/NET/mvco.owl#\",roterms:\"http://purl.org/wf4ever/roterms#\",gawd:\"http://gawd.atlantides.org/terms/\",finlaw:\"http://purl.org/finlex/schema/laki/\",qb4o:\"http://purl.org/olap#\",frbrer:\"http://iflastandards.info/ns/fr/frbr/frbrer/\",oecc:\"http://www.oegov.org/core/owl/cc#\",w3po:\"http://purl.org/provenance/w3p/w3po#\",coll:\"http://purl.org/co/\",geocontext:\"http://www.geocontext.org/publ/2013/vocab#\",dn:\"http://purl.org/datanode/ns/\",sw:\"http://linkedwidgets.org/statisticalwidget/ontology/\",rdacontent:\"http://rdvocab.info/termList/RDAContentType/\",tis:\"http://www.ontologydesignpatterns.org/cp/owl/timeindexedsituation.owl#\",vgo:\"http://purl.org/net/VideoGameOntology#\",vapour:\"http://vapour.sourceforge.net/vocab.rdf#\",olad:\"http://openlad.org/vocab#\",dbpr:\"http://dbpedia.org/resource/\",dqm:\"http://purl.org/dqm-vocabulary/v1/dqm#\",viskov:\"http://trust.utep.edu/visko/ontology/visko-view-v3.owl#\",gcis:\"http://data.globalchange.gov/gcis.owl#\",locwd:\"http://purl.org/locwd/schema#\",voidp:\"http://www.enakting.org/provenance/voidp/\",of:\"http://owlrep.eu01.aws.af.cm/fridge#\",gadm:\"http://gadm.geovocab.org/ontology#\",icane:\"http://www.icane.es/opendata/vocab#\",poste:\"http://data.lirmm.fr/ontologies/poste#\",hlygt:\"http://www.holygoat.co.uk/owl/redwood/0.1/tags/\",frsad:\"http://iflastandards.info/ns/fr/frsad/\",abs:\"http://abs.270a.info/dataset/\",ebucore:\"http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#\",csp:\"http://vocab.deri.ie/csp#\",nex:\"http://www.nexml.org/2009/\",evident:\"http://purl.org/net/evident#\",uta:\"http://uptheasset.org/ontology#\",pwo:\"http://purl.org/spar/pwo/\",lexcz:\"http://purl.org/lex/cz#\",graves:\"http://rdf.muninn-project.org/ontologies/graves#\",dbtont:\"http://dbtropes.org/ont/\",geosp:\"http://rdf.geospecies.org/ont/geospecies#\",ntag:\"http://ns.inria.fr/nicetag/2010/09/09/voc#\",biotop:\"http://purl.org/biotop/biotop.owl#\",estrn:\"http://vocab.linkeddata.es/datosabiertos/def/urbanismo-infraestructuras/transporte#\",obsm:\"http://rdf.geospecies.org/methods/observationMethod#\",ecrm:\"http://erlangen-crm.org/current/\",fe:\"http://www.ontologydesignpatterns.org/ont/framenet/abox/fe/\",wf4ever:\"http://purl.org/wf4ever/wf4ever#\",ses:\"http://lod.taxonconcept.org/ses/\",gnm:\"http://www.geonames.org/ontology/mappings/\",rdai:\"http://rdaregistry.info/Elements/i/\",ostop:\"http://www.ordnancesurvey.co.uk/ontology/Topography/v0.1/Topography.owl#\",lc:\"http://semweb.mmlab.be/ns/linkedconnections#\",oplprod:\"http://www.openlinksw.com/ontology/products#\",scufl2:\"http://ns.taverna.org.uk/2010/scufl2#\",ogbd:\"http://www.ogbd.fr/2012/ontologie#\",viso:\"http://purl.org/viso/\",drm:\"http://vocab.data.gov/def/drm#\",mammal:\"http://lod.taxonconcept.org/ontology/p01/Mammalia/index.owl#\",vcard2006:\"http://www.w3.org/2006/vcard/ns#\",ontopic:\"http://www.ontologydesignpatterns.org/ont/dul/ontopic.owl#\",kai:\"http://kai.uni-kiel.de/\",delta:\"http://www.w3.org/2004/delta#\",wn20:\"http://www.w3.org/2006/03/wn/wn20/\",rdafrbr:\"http://rdvocab.info/uri/schema/FRBRentitiesRDA/\",gnvc:\"http://purl.org/gc/\",daq:\"http://purl.org/eis/vocab/daq#\",stats:\"http://purl.org/rdfstats/stats#\",fao:\"http://fao.270a.info/dataset/\",owlse:\"http://www.daml.org/services/owl-s/1.2/generic/Expression.owl#\",rdf123:\"http://rdf123.umbc.edu/ns/\",bcngeo:\"http://datos.bcn.cl/ontologies/bcn-geographics#\",amalgame:\"http://purl.org/vocabularies/amalgame#\",fam:\"http://vocab.fusepool.info/fam#\",trait:\"http://contextus.net/ontology/ontomedia/ext/common/trait#\",lmm1:\"http://www.ontologydesignpatterns.org/ont/lmm/LMM_L1.owl#\",snarm:\"http://rdf.myexperiment.org/ontologies/snarm/\",ldr:\"http://purl.oclc.org/NET/ldr/ns#\",frb:\"http://frb.270a.info/dataset/\",gov:\"http://gov.genealogy.net/ontology.owl#\",provone:\"http://purl.org/provone#\",esdir:\"http://vocab.linkeddata.es/datosabiertos/def/urbanismo-infraestructuras/direccion-postal#\",lmm2:\"http://www.ontologydesignpatterns.org/ont/lmm/LMM_L2.owl#\",bk:\"http://www.provbook.org/ns/#\",rdl:\"http://data.posccaesar.org/rdl/\",guo:\"http://purl.org/hpi/guo#\",call:\"http://webofcode.org/wfn/call:\",dbptmpl:\"http://dbpedia.org/resource/Template:\",pois:\"http://purl.oclc.org/POIS/vcblr#\",gf:\"http://def.seegrid.csiro.au/isotc211/iso19109/2005/feature#\",limoo:\"http://purl.org/LiMo/0.1/\",odo:\"http://ocean-data.org/schema/\",tw:\"http://tw.rpi.edu/schema/\",bco:\"http://purl.obolibrary.org/obo/bco.owl#\",gq:\"http://genomequest.com/\",doas:\"http://deductions.github.io/doas.owl.ttl#\",lso:\"http://linkedspending.aksw.org/ontology/\",cjr:\"http://vocab.linkeddata.es/datosabiertos/def/urbanismo-infraestructuras/callejero#\",gist:\"https://ontologies.semanticarts.com/gist/\",raul:\"http://vocab.deri.ie/raul#\",plo:\"http://purl.org/net/po#\",muldicat:\"http://iflastandards.info/ns/muldicat#\",sro:\"http://salt.semanticauthoring.org/ontologies/sro#\",crsw:\"http://courseware.rkbexplorer.com/ontologies/courseware#\",rdag1:\"http://rdvocab.info/Elements/\",fcs:\"http://clarin.eu/fcs/resource#\",nxs:\"http://www.neclimateus.org/\",pvcs:\"http://purl.org/twc/vocab/pvcs#\",onc:\"http://www.ics.forth.gr/isl/oncm/core#\",app:\"http://jmvanel.free.fr/ontology/software_applications.n3#\",oprovo:\"http://openprovenance.org/ontology#\",pproc:\"http://contsem.unizar.es/def/sector-publico/pproc#\",location:\"http://sw.deri.org/2006/07/location/loc#\",cart:\"http://purl.org/net/cartCoord#\",s3db:\"http://www.s3db.org/core#\",gm:\"http://def.seegrid.csiro.au/isotc211/iso19107/2003/geometry#\",smg:\"http://ns.cerise-project.nl/energy/def/cim-smartgrid#\",pnt:\"http://data.press.net/ontology/tag/\",geod:\"http://vocab.lenka.no/geo-deling#\",eurlex:\"http://eur-lex.publicdata.eu/ontology/\",ecc:\"https://ns.eccenca.com/\",dpc:\"http://hospee.org/ontologies/dpc/\",cdt:\"http://w3id.org/lindt/custom_datatypes#\",dpd:\"http://www.kanzaki.com/ns/dpd#\",cpant:\"http://purl.org/NET/cpan-uri/terms#\",ops:\"https://w3id.org/ops#\",uis:\"http://uis.270a.info/dataset/\",odpart:\"http://www.ontologydesignpatterns.org/cp/owl/participation.owl#\",agro:\"http://agrinepaldata.com/vocab/\",defns:\"http://www.openarchives.org/OAI/2.0/\",edgar:\"http://edgarwrap.ontologycentral.com/vocab/edgar#\",cl:\"http://advene.org/ns/cinelab/\",wikim:\"http://spi-fm.uca.es/spdef/models/genericTools/wikim/1.0#\",ipo:\"http://purl.org/ipo/core#\",tac:\"http://ns.bergnet.org/tac/0.1/triple-access-control#\",oh:\"http://semweb.mmlab.be/ns/oh#\",pod:\"https://project-open-data.cio.gov/v1.1/schema/#\",rdag3:\"http://rdvocab.info/ElementsGr3/\",lio:\"http://purl.org/net/lio#\",opllic:\"http://www.openlinksw.com/ontology/licenses#\",topo:\"http://data.ign.fr/def/topo#\",imf:\"http://imf.270a.info/dataset/\",msm:\"http://iserve.kmi.open.ac.uk/ns/msm#\",shw:\"http://paul.staroch.name/thesis/SmartHomeWeather.owl#\",osadm:\"http://data.ordnancesurvey.co.uk/ontology/admingeo/\",solid:\"http://www.w3.org/ns/solid/terms#\",tao:\"http://vocab.deri.ie/tao#\",limo:\"http://www.purl.org/limo-ontology/limo#\",oss:\"http://opendata.caceres.es/def/ontosemanasanta#\",rdfdata:\"http://rdf.data-vocabulary.org/rdf.xml#\",mds:\"http://doc.metalex.eu/id/\",passim:\"http://data.lirmm.fr/ontologies/passim#\",lda:\"http://purl.org/linked-data/api/vocab#\",dbpedia2:\"http://dbpedia.org/property/\",thors:\"http://resource.geosciml.org/ontology/timescale/thors#\",tddo:\"http://databugger.aksw.org/ns/core#\",cmdm:\"http://infra.clarin.eu/cmd/\",gl:\"http://schema.geolink.org/\",mocanal:\"http://www.semanticweb.org/asow/ontologies/2013/9/untitled-ontology-36#\",pnc:\"http://data.press.net/ontology/classification/\",being:\"http://purl.org/ontomedia/ext/common/being#\",oliasystem:\"http://purl.org/olia/system.owl#\",bis:\"http://bis.270a.info/dataset/\",csvw:\"http://www.w3.org/ns/csvw#\",aws:\"http://purl.oclc.org/NET/ssnx/meteo/aws#\",cmdi:\"http://www.clarin.eu/cmd/\",form:\"http://deductions-software.com/ontologies/forms.owl.ttl#\",sam:\"http://def.seegrid.csiro.au/isotc211/iso19156/2011/sampling#\",laabs:\"http://dbpedia.org/resource/\",tm:\"http://def.seegrid.csiro.au/isotc211/iso19108/2002/temporal#\",bgn:\"http://bibliograph.net/schemas/\",deps:\"http://ontologi.es/doap-deps#\",opencyc:\"http://sw.opencyc.org/concept/\",sor:\"http://purl.org/net/soron/\",mico:\"http://www.mico-project.eu/ns/platform/1.0/schema#\",pattern:\"http://www.essepuntato.it/2008/12/pattern#\",chembl:\"http://rdf.ebi.ac.uk/terms/chembl#\",esco:\"http://data.europa.eu/esco/model#\",oslo:\"http://purl.org/oslo/ns/localgov#\",ftcontent:\"http://www.ft.com/ontology/content/\",ost:\"http://w3id.org/ost/ns#\",hr:\"http://iserve.kmi.open.ac.uk/ns/hrests#\",saref:\"https://saref.etsi.org/core/\",cdc:\"http://www.contextdatacloud.org/resource/\",lofv:\"http://purl.org/legal_form/vocab#\",lindt:\"https://w3id.org/lindt/voc#\",maso:\"http://securitytoolbox.appspot.com/MASO#\",bgcat:\"http://bg.dbpedia.org/resource/?????????:\",static:\"http://vocab-ld.org/vocab/static-ld#\",rdarel2:\"http://metadataregistry.org/uri/schema/RDARelationshipsGR2/\",sru:\"http://www.loc.gov/zing/srw/\",dq:\"http://def.seegrid.csiro.au/isotc211/iso19115/2003/dataquality#\",rmo:\"http://eatld.et.tu-dresden.de/rmo#\",ext:\"http://def.seegrid.csiro.au/isotc211/iso19115/2003/extent#\",vext:\"http://ldf.fi/void-ext#\",xlime:\"http://xlime-project.org/vocab/\",agrd:\"http://agrinepaldata.com/\",verb:\"https://w3id.org/verb/\",pco:\"http://purl.org/procurement/public-contracts#\",latitude:\"https://www.w3.org/2006/vcard/ns#latitude#\",mv:\"http://schema.mobivoc.org/\",contsem:\"http://contsem.unizar.es/def/sector-publico/contratacion#\",ruto:\"http://rdfunit.aksw.org/ns/core#\",csv:\"http://vocab.sindice.net/csv/\",goog:\"http://schema.googleapis.com/\",omdoc:\"http://omdoc.org/ontology/\",dbcat:\"http://dbpedia.org/resource/Category:\",shoah:\"http://dati.cdec.it/lod/shoah/\",vmm:\"http://spi-fm.uca.es/spdef/models/genericTools/vmm/1.0#\",dannet:\"http://www.wordnet.dk/owl/instance/2009/03/instances/\",emtr:\"http://purl.org/NET/ssnext/electricmeters#\",mmd:\"http://musicbrainz.org/ns/mmd-1.0#\",bbcprov:\"http://www.bbc.co.uk/ontologies/provenance/\",bevon:\"http://rdfs.co/bevon/\",pni:\"http://data.press.net/ontology/identifier/\",employee:\"http://www.employee.com/data#\",spdx:\"http://spdx.org/rdf/terms#\",oplcert:\"http://www.openlinksw.com/schemas/cert#\",cpsv:\"http://purl.org/vocab/cpsv#\",gaf:\"http://groundedannotationframework.org/\",wro:\"http://purl.org/net/wf4ever/ro#\",isocat:\"http://www.isocat.org/datcat/\",jp1:\"http://rdf.muninn-project.org/ontologies/jp1/\",geos:\"http://www.telegraphis.net/ontology/geography/geography#\",videogame:\"http://purl.org/net/vgo#\",rdapo:\"http://rdaregistry.info/termList/RDAPolarity/\",date:\"http://contextus.net/ontology/ontomedia/misc/date#\",physo:\"http://merlin.phys.uni.lodz.pl/onto/physo/physo.owl#\",lden:\"http://www.linklion.org/lden/\",shex:\"http://www.w3.org/2013/ShEx/ns#\",citof:\"http://www.essepuntato.it/2013/03/cito-functions#\",olac:\"http://www.language-archives.org/OLAC/1.0/\",wfn:\"http://webofcode.org/wfn/\",bner:\"http://datos.bne.es/resource/\",pic:\"http://www.ipaw.info/ns/picaso#\",oan:\"http://data.lirmm.fr/ontologies/oan/\",xapi:\"http://purl.org/xapi/ontology#\",psys:\"http://www.ontotext.com/proton/protonsys#\",dsn:\"http://purl.org/dsnotify/vocab/eventset/\",rdagw:\"http://rdaregistry.info/termList/grooveWidth/\",fo:\"http://www.w3.org/1999/XSL/Format#\",acrt:\"http://privatealpha.com/ontology/certification/1#\",insdc:\"http://ddbj.nig.ac.jp/ontologies/sequence#\",xrd:\"http://docs.oasis-open.org/ns/xri/xrd-1.0#\",erce:\"http://xxefe.de/\",oplres:\"http://www.openlinksw.com/ontology/restrictions#\",trig:\"http://www.w3.org/2004/03/trix/rdfg-1/\",ldvm:\"http://linked.opendata.cz/ontology/ldvm/\",dbug:\"http://ontologi.es/doap-bugs#\",rdafnm:\"http://rdaregistry.info/termList/FormNoteMus/\",kml:\"http://www.opengis.net/kml/2.2#\",lfov:\"https://w3id.org/legal_form#\",c9d:\"http://purl.org/twc/vocab/conversion/\",pkm:\"http://www.ontotext.com/proton/protonkm#\",dbrc:\"http://dbpedia.org/resource/Category:\",roadmap:\"http://mappings.roadmap.org/\",yo:\"http://yovisto.com/\",gts:\"http://resource.geosciml.org/ontology/timescale/gts#\",origins:\"http://origins.link/\",ljkl:\"http://teste.com/\",esequip:\"http://vocab.linkeddata.es/datosabiertos/def/urbanismo-infraestructuras/equipamiento#\",onisep:\"http://rdf.onisep.fr/resource/\",dicom:\"http://purl.org/healthcarevocab/v1#\",itm:\"http://spi-fm.uca.es/spdef/models/genericTools/itm/1.0#\",language:\"http://id.loc.gov/vocabulary/iso639-1/\",voidext:\"http://rdfs.org/ns/void-ext#\",whisky:\"http://vocab.org/whisky/terms/\",diag:\"http://www.loc.gov/zing/srw/diagnostic/\",sbench:\"http://swat.cse.lehigh.edu/onto/univ-bench.owl#\",bbccms:\"http://www.bbc.co.uk/ontologies/cms/\",ccrel:\"http://creativecommons.org/ns#\",oils:\"http://lemon-model.net/oils#\",esadm:\"http://vocab.linkeddata.es/datosabiertos/def/sector-publico/territorio#\",babelnet:\"http://babelnet.org/2.0/\",sao:\"http://salt.semanticauthoring.org/ontologies/sao#\",holding:\"http://purl.org/ontology/holding#\",stories:\"http://purl.org/ontology/stories/\",mmt:\"http://linkedmultimedia.org/sparql-mm/functions/temporal#\",esaloj:\"http://vocab.linkeddata.es/datosabiertos/def/turismo/alojamiento#\",bn:\"http://babelnet.org/rdf/\",odapps:\"http://semweb.mmlab.be/ns/odapps#\",odrs:\"http://schema.theodi.org/odrs#\",basic:\"http://def.seegrid.csiro.au/isotc211/iso19103/2005/basic#\",hdo:\"http://www.samos.gr/ontologies/helpdeskOnto.owl#\",rdafr:\"http://rdaregistry.info/termList/frequency/\",rdamt:\"http://rdaregistry.info/termList/RDAMediaType/\",h2o:\"http://def.seegrid.csiro.au/isotc211/iso19150/-2/2012/basic#\",vf:\"https://w3id.org/valueflows#\",art:\"http://w3id.org/art/terms/1.0/\",mmf:\"http://linkedmultimedia.org/sparql-mm/ns/1.0.0/function#\",keys:\"http://purl.org/NET/c4dm/keys.owl#\",ls:\"http://linkedspending.aksw.org/instance/\",llo:\"http://lodlaundromat.org/ontology/\",clinic:\"http://example.com/clinic#\",locah:\"http://data.archiveshub.ac.uk/def/\",scoro:\"http://purl.org/spar/scoro/\",nerd:\"http://nerd.eurecom.fr/ontology#\",scip:\"http://lod.taxonconcept.org/ontology/sci_people.owl#\",olac11:\"http://www.language-archives.org/OLAC/1.1/\",tavprov:\"http://ns.taverna.org.uk/2012/tavernaprov/\",lexicon:\"http://www.example.org/lexicon#\",faq:\"http://www.openlinksw.com/ontology/faq#\",rdagd:\"http://rdaregistry.info/termList/gender/\",travel:\"http://www.co-ode.org/roberts/travel.owl#\",rdasoi:\"http://rdaregistry.info/termList/statIdentification/\",uri4uri:\"http://uri4uri.net/vocab#\",kees:\"http://linkeddata.center/kees/v1#\",ramon:\"http://rdfdata.eionet.europa.eu/ramon/ontology/\",html:\"http://www.w3.org/1999/xhtml/\",wn31:\"http://wordnet-rdf.princeton.edu/wn31/\",eurostat:\"http://wifo5-04.informatik.uni-mannheim.de/eurostat/resource/eurostat/\",irsteaont:\"http://ontology.irstea.fr/weather/ontology#\",data:\"http://data.odw.tw/\",security:\"http://securitytoolbox.appspot.com/securityMain#\",scor:\"http://purl.org/eis/vocab/scor#\",phdd:\"http://rdf-vocabulary.ddialliance.org/phdd#\",navm:\"https://w3id.org/navigation_menu#\",rdacct:\"http://rdaregistry.info/termList/CollTitle/\",oplacl:\"http://www.openlinksw.com/ontology/acl#\",naval:\"http://rdf.muninn-project.org/ontologies/naval#\",rdatc:\"http://rdaregistry.info/termList/trackConfig/\",l2sp:\"http://www.linked2safety-project.eu/properties/\",fp3:\"http://vocab.fusepool.info/fp3#\",ll:\"http://lodlaundromat.org/resource/\",dcs:\"http://ontologi.es/doap-changeset#\",wikibase:\"http://wikiba.se/ontology#\",galaksiya:\"http://ontoloji.galaksiya.com/vocab/\",oml:\"http://def.seegrid.csiro.au/ontology/om/om-lite#\",decision:\"https://decision-ontology.googlecode.com/svn/trunk/decision.owl#\",npdv:\"http://sws.ifi.uio.no/vocab/npd#\",rvl:\"http://purl.org/rvl/\",d2d:\"http://rdfns.org/d2d/\",ecgl:\"http://schema.geolink.org/\",bgdbr:\"http://bg.dbpedia.org/resource/\",koly:\"http://www.ensias.ma/\",rvdata:\"http://data.rvdata.us/\",bbccore:\"http://www.bbc.co.uk/ontologies/coreconcepts/\",rdabm:\"http://rdaregistry.info/termList/RDABaseMaterial/\",rdami:\"http://rdaregistry.info/termList/modeIssue/\",metadata:\"http://purl.oreilly.com/ns/meta/\",pcdt:\"http://purl.org/procurement/public-contracts-datatypes#\",lsd:\"http://linkedwidgets.org/statisticaldata/ontology/\",lcdr:\"http://ns.lucid-project.org/revision/\",wb:\"http://data.worldbank.org/\",xcql:\"http://docs.oasis-open.org/ns/search-ws/xcql#\",lpeu:\"http://purl.org/linkedpolitics/vocabulary/eu/plenary/\",spfood:\"http://kmi.open.ac.uk/projects/smartproducts/ontologies/food.owl#\",bgdbp:\"http://bg.dbpedia.org/property/\",sdm:\"https://w3id.org/okn/o/sdm#\",foo:\"http://filmontology.org/ontology/1.0/\",friends:\"http://www.openarchives.org/OAI/2.0/friends/\",lw:\"http://linkedwidgets.org/ontologies/\",mtlo:\"http://www.ics.forth.gr/isl/MarineTLO/v4/marinetlo.owl#\",allot:\"https://w3id.org/akn/ontology/allot#\",rml:\"http://semweb.mmlab.be/ns/rml#\",crmdig:\"http://www.ics.forth.gr/isl/CRMdig/\",bnf:\"http://www.w3.org/2000/10/swap/grammar/bnf#\",affymetrix:\"http://bio2rdf.org/affymetrix_vocabulary:\",cbo:\"http://comicmeta.org/cbo/\",lmf:\"http://www.lexinfo.net/lmf#\",auto:\"http://auto.schema.org/\",irstea:\"http://ontology.irstea.fr/\",json:\"https://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf#\",zr:\"http://explain.z3950.org/dtd/2.0/\",rdagrp:\"http://rdaregistry.info/termList/groovePitch/\",oplecrm:\"http://www.openlinksw.com/ontology/ecrm#\",ha:\"http://sensormeasurement.appspot.com/ont/home/homeActivity#\",eccrev:\"https://vocab.eccenca.com/revision/\",xslopm:\"http://purl.org/net/opmv/types/xslt#\",rdaftn:\"http://rdaregistry.info/termList/TacNotation/\",fno:\"https://w3id.org/function/ontology#\",rdacc:\"http://rdaregistry.info/termList/RDAColourContent/\",merge:\"http://jazz.net/ns/lqe/merge/\",llm:\"http://lodlaundromat.org/metrics/ontology/\",sg:\"http://www.springernature.com/scigraph/ontologies/core/\",oae:\"http://www.ics.forth.gr/isl/oae/core#\",rdaco:\"http://rdaregistry.info/termList/RDAContentType/\",ogc:\"http://www.opengis.net/def/\",oplmkt:\"http://www.openlinksw.com/ontology/market#\",rdarr:\"http://rdaregistry.info/termList/RDAReductionRatio/\",geovoid:\"http://purl.org/geovocamp/ontology/geovoid/\",condition:\"http://www.kinjal.com/condition:\",saws:\"http://purl.org/saws/ontology#\",beth:\"http://www.google.com/\",rdag2:\"http://rdvocab.info/ElementsGr2/\",ncit:\"http://ncicb.nci.nih.gov/xml/owl/EVS/Thesaurus.owl#\",estatwrap:\"http://ontologycentral.com/2009/01/eurostat/ns#\",vstoi:\"http://hadatac.org/ont/vstoi#\",dqv:\"http://www.w3.org/ns/dqv#\",tp:\"http://tour-pedia.org/download/tp.owl#\",sakthi:\"http://infotech.nitk.ac.in/research-scholars/sakthi-murugan-r/\",oplcb:\"http://www.openlinksw.com/schemas/crunchbase#\",ilap:\"http://data.posccaesar.org/ilap/\",d0:\"http://ontologydesignpatterns.org/ont/wikipedia/d0.owl#\",glview:\"http://schema.geolink.org/dev/view/\",opengov:\"http://www.w3.org/opengov#\",shacl:\"http://www.w3.org/ns/shacl#\",atlas:\"http://rdf.ebi.ac.uk/resource/atlas/\",clirio:\"http://clirio.kaerle.com/clirio.owl#\",lsmap:\"http://ontology.cybershare.utep.edu/ELSEWeb/elseweb-data.owl#\",sosa:\"http://www.w3.org/ns/sosa/\",bibrm:\"http://vocab.ub.uni-leipzig.de/bibrm/\",rdatr:\"http://rdaregistry.info/termList/typeRec/\",religion:\"http://rdf.muninn-project.org/ontologies/religion#\",samfl:\"http://def.seegrid.csiro.au/ontology/om/sam-lite#\",dio:\"https://w3id.org/dio#\",omnfed:\"http://open-multinet.info/ontology/omn-federation#\",orth:\"http://purl.org/net/orth#\",rdarm:\"http://registry.info/termList/recMedium/\",td5:\"http://td5.org/#\",wn30:\"http://purl.org/vocabularies/princeton/wn30/\",quantity:\"http://qudt.org/schema/quantity#\",dcatapit:\"http://dati.gov.it/onto/dcatapit#\",ontosec:\"http://www.semanticweb.org/ontologies/2008/11/OntologySecurity.owl#\",rdact:\"http://rdaregistry.info/termList/RDACarrierType/\",voidwh:\"http://www.ics.forth.gr/isl/VoIDWarehouse/VoID_Extension_Schema.owl#\",swpm:\"http://spi-fm.uca.es/spdef/models/deployment/swpm/1.0#\",odbc:\"http://www.openlinksw.com/ontology/odbc#\",ubiq:\"http://server.ubiqore.com/ubiq/core#\",kegg:\"http://bio2rdf.org/ns/kegg#\",company:\"http://intellimind.io/ns/company#\",vidont:\"http://vidont.org/\",escjr:\"http://vocab.linkeddata.es/datosabiertos/def/urbanismo-infraestructuras/callejero#\",vag:\"http://www.essepuntato.it/2013/10/vagueness/\",jolux:\"http://data.legilux.public.lu/resource/ontology/jolux#\",rofch:\"http://rdaregistry.info/termList/rofch/\",rdaemm:\"http://rdaregistry.info/termList/emulsionMicro/\",salad:\"https://w3id.org/cwl/salad#\",reegle:\"http://reegle.info/schema#\",lmx:\"http://www.w3.org/XML/1998/namespace/\",mesh:\"http://id.nlm.nih.gov/mesh/\",espresup:\"http://vocab.linkeddata.es/datosabiertos/def/hacienda/presupuestos#\",gpml:\"http://vocabularies.wikipathways.org/gpml#\",moo:\"http://www.movieontology.org/2009/11/09/movieontology.owl#\",driver:\"http://deductions.github.io/drivers.owl.ttl#\",rkd:\"http://data.rkd.nl/def#\",demlab:\"http://www.demcare.eu/ontologies/demlab.owl#\",uby:\"http://purl.org/olia/ubyCat.owl#\",caplibacl:\"http://schemas.capita-libraries.co.uk/2015/acl/schema#\",unspsc:\"http://ontoview.org/schema/unspsc/1#\",escom:\"http://vocab.linkeddata.es/datosabiertos/def/comercio/tejidoComercial#\",rut:\"http://rdfunit.aksw.org/ns/core#\",rdabf:\"http://rdaregistry.info/termList/bookFormat/\",olca:\"http://www.lingvoj.org/olca#\",grel:\"http://users.ugent.be/~bjdmeest/function/grel.ttl#\",efrbroo:\"http://erlangen-crm.org/efrbroo/\",rdasco:\"http://rdaregistry.info/termList/soundCont/\",loted:\"http://loted.eu/ontology#\",hasneto:\"http://hadatac.org/ont/hasneto#\",dicera:\"http://semweb.mmlab.be/ns/dicera#\",im:\"http://imgpedia.dcc.uchile.cl/resource/\",rdafmn:\"http://rdaregistry.info/termList/MusNotation/\",lsqv:\"http://lsq.aksw.org/vocab#\",cwl:\"https://w3id.org/cwl/cwl#\",rdafs:\"http://rdaregistry.info/termList/fontSize/\",pp:\"http://peoplesplaces.de/ontology#\",airs:\"https://raw.githubusercontent.com/airs-linked-data/lov/latest/src/airs_vocabulary.ttl#\",hasco:\"http://hadatac.org/ont/hasco/\",proms:\"http://promsns.org/def/proms#\",lawd:\"http://lawd.info/ontology/\",lemonuby:\"http://lemon-model.net/lexica/uby/\",oxi:\"http://omerxi.com/ontologies/core.owl.ttl#\",owsom:\"https://onlinesocialmeasures.wordpress.com/\",mod:\"http://www.isibang.ac.in/ns/mod#\",puml:\"http://plantuml.com/ontology#\",wikimedia:\"http://upload.wikimedia.org/wikipedia/commons/f/f6/\",crowd:\"http://purl.org/crowd/\",traffic:\"http://www.sensormeasurement.appspot.com/ont/transport/traffic#\",tadirah:\"http://tadirah.dariah.eu/vocab/\",rdapmt:\"http://rdaregistry.info/termList/prodTactile/\",mexv:\"http://mex.aksw.org/mex-algo#\",incident:\"http://vocab.resc.info/incident#\",lsweb:\"http://ontology.cybershare.utep.edu/ELSEWeb/elseweb-data.owl#\",bb:\"http://www.snik.eu/ontology/bb/\",figigii:\"http://www.omg.org/spec/FIGI/GlobalInstrumentIdentifiers/\",ns1:\"http://www.w3.org/1999/xhtml/vocab#\",rankrage:\"https://rankrage.de/\",hto:\"http://project-haystack.org/hto#\",jerm:\"http://jermontology.org/ontology/JERMOntology#\",td:\"https://www.w3.org/2019/wot/td#\",spcm:\"http://spi-fm.uca.es/spdef/models/deployment/spcm/1.0#\",gont:\"https://gont.ch/\",fdbp:\"http://fr.dbpedia.org/property/\",ofrd:\"http://purl.org/opdm/refrigerator#\",cwrc:\"http://sparql.cwrc.ca/ontology/cwrc#\",rofrr:\"http://rdaregistry.info/termList/rofrr/\",bsym:\"http://bsym.bloomberg.com/sym/\",dash:\"http://datashapes.org/dash#\",uneskos:\"http://purl.org/voc/uneskos#\",ev:\"http://www.w3.org/2001/xml-events/\",text:\"http://jena.apache.org/text#\",hello:\"https://www.youtube.com/user/SuperTellAFriend/featured/\",cpack:\"http://cliopatria.swi-prolog.org/schema/cpack#\",tix:\"http://toptix.com/2010/esro/\",ssno:\"http://www.w3.org/ns/ssn/\",rdaz:\"http://rdaregistry.info/Elements/z/\",step:\"http://purl.org/net/step#\",sdshare:\"http://www.sdshare.org/2012/extension/\",newsevents:\"http://www.aifb.uni-karlsruhe.de/WBS/uhe/ontologies#\",aktivesa:\"http://sa.aktivespace.org/ontologies/aktivesa#\",rofer:\"http://rdaregistry.info/termList/rofer/\",ws:\"http://www.w3.org/ns/pim/space#\",ecglview:\"http://schema.geolink.org/view/\",regorg:\"http://www.w3.org/ns/regorg#\",gci:\"http://ontology.eil.utoronto.ca/GCI/Foundation/GCI-Foundation.owl#\",mdi:\"http://w3id.org/multidimensional-interface/ontology#\",sx:\"http://shex.io/ns/shex#\",obeu:\"http://data.openbudgets.eu/ontology/\",jpo:\"http://rdf.jpostdb.org/ontology/jpost.owl#\",teamwork:\"http://topbraid.org/teamwork#\",bdd:\"https://api.bloomberg.com/eap/catalogs/bbg/fields/\",gs1:\"http://gs1.org/voc/\",meat:\"http://example.com/\",ttla:\"https://w3id.org/ttla/\",sgg:\"http://www.springernature.com/scigraph/graphs/\",ttp:\"http://eample.com/test#\",webservice:\"http://www.openlinksw.com/ontology/webservices#\",pv:\"http://ns.inria.fr/provoc#\",esapar:\"http://vocab.linkeddata.es/datosabiertos/def/urbanismo-infraestructuras/aparcamiento#\",rofit:\"http://rdaregistry.info/termList/rofit/\",ndnp:\"http://chroniclingamerica.loc.gov/terms#\",ruian:\"https://data.cssz.cz/ontology/ruian/\",datex:\"http://vocab.datex.org/terms#\",rofem:\"http://rdaregistry.info/termList/rofem/\",bioc:\"http://deductions.github.io/biological-collections.owl.ttl#\",lswmo:\"http://ontology.cybershare.utep.edu/ELSEWeb/elseweb-modelling.owl#\",yd:\"https://yodata.io/\",essglobal:\"http://purl.org/essglobal/vocab/v1.0/\",dm2e:\"http://onto.dm2e.eu/schemas/dm2e/\",um:\"http://intelleo.eu/ontologies/user-model/ns/\",ottr:\"http://ns.ottr.xyz/templates#\",rdafnv:\"http://rdaregistry.info/termList/noteForm/\",eccauth:\"https://vocab.eccenca.com/auth/\",oplweb:\"http://www.openlinksw.com/schemas/oplweb#\",fnabox:\"http://www.ontologydesignpatterns.org/ont/framenet/abox/\",nlon:\"http://lod.nl.go.kr/ontology/\",output:\"http://volt-name.space/vocab/output#\",geojson:\"http://ld.geojson.org/vocab#\",vartrans:\"http://www.w3.org/ns/lemon/vartrans#\",lswpm:\"http://ontology.cybershare.utep.edu/ELSEWeb/elseweb-lifemapper-parameters.owl#\",antenne:\"https://data.zendantennes.omgeving.vlaanderen.be/ns/zendantenne#\",mbgd:\"http://mbgd.genome.ad.jp/owl/mbgd.owl#\",ou:\"http://opendata.unex.es/def/ontouniversidad#\",agr:\"http://promsns.org/def/agr#\",opllog:\"http://www.openlinksw.com/ontology/logging#\",markus:\"http://www.markus.com/\",rofsm:\"http://rdaregistry.info/termList/rofsm/\",literal:\"http://www.essepuntato.it/2010/06/literalreification/\",tsn:\"http://purl.org/net/tsn#\",mexcore:\"http://mex.aksw.org/mex-core#\",vacseen1:\"http://www.semanticweb.org/parthasb/ontologies/2014/6/vacseen1/\",glycan:\"http://purl.jp/bio/12/glyco/glycan#\",iana:\"http://www.iana.org/assignments/relation/\",hva:\"http://www.ebusiness-unibw.org/ontologies/hva/ontology#\",piero:\"http://reactionontology.org/piero/\",imind:\"http://schema.intellimind.ns/symbology#\",lheo:\"http://www.conjecto.com/ontology/2015/lheo#\",ethc:\"http://ethoinformatics.org/ethocore/\",tgm:\"http://id.loc.gov/vocabulary/graphicMaterials/\",uom:\"http://www.opengis.net/def/uom/OGC/1.0/\",ianarel:\"http://www.iana.org/assignments/relation/\",owl2xml:\"http://www.w3.org/2006/12/owl2-xml#\",vsso:\"http://automotive.eurecom.fr/vsso#\",pmc:\"http://identifiers.org/pmc/\",duv:\"http://www.w3.org/ns/duv#\",dpn:\"http://purl.org/dpn#\",lgt:\"http://linkedgadget.com/wiki/Property:\",amsl:\"http://vocab.ub.uni-leipzig.de/amsl/\",pmhb:\"http://pmhb.org/\",gns:\"http://sws.geonames.org/\",pid:\"http://permid.org/ontology/organization/\",cd:\"http://citydata.wu.ac.at/ns#\",doi:\"https://doi.org/\",frgeo:\"http://rdf.insee.fr/geo/\",fntbox:\"http://www.ontologydesignpatterns.org/ont/framenet/tbox/\",soch:\"http://kulturarvsdata.se/ksamsok#\",rdaar:\"http://rdaregistry.info/termList/AspectRatio/\",si:\"http://sisteminformasi.com/\",edgarcik:\"http://edgarwrap.ontologycentral.com/cik/\",fire:\"http://tldp.org/HOWTO/XML-RPC-HOWTO/xmlrpc-howto-java.html#\",door:\"http://kannel.open.ac.uk/ontology#\",rdaterm:\"http://rdaregistry.info/termList/RDATerms/\",llont:\"http://www.linklion.org/ontology#\",lslife:\"http://ontology.cybershare.utep.edu/ELSEWeb/elseweb-lifemapper.owl#\",rdapm:\"http://rdaregistry.info/termList/RDAproductionMethod/\",umls:\"http://bioportal.bioontology.org/ontologies/umls/\",iiif:\"http://iiif.io/api/image/2#\",remetca:\"http://www.purl.org/net/remetca#\",lgdm:\"http://linkedgeodata.org/meta/\",pmd:\"http://publishmydata.com/def/dataset#\",wde:\"http://www.wikidata.org/entity/\",vam:\"http://www.metmuseum.org/\",cwork:\"http://www.bbc.co.uk/ontologies/creativework/\",b3kat:\"http://lod.b3kat.de/title/\",itcat:\"http://th-brandenburg.de/ns/itcat#\",alethio:\"http://aleth.io/\",mexalgo:\"http://mex.aksw.org/mex-algo#\",rofid:\"http://rdaregistry.info/termList/rofid/\",pmo:\"http://premon.fbk.eu/ontology/core#\",pcit:\"http://public-contracts.nexacenter.org/id/propertiesRole/\",esair:\"http://vocab.linkeddata.es/datosabiertos/def/medio-ambiente/calidad-aire#\",gg:\"http://www.gemeentegeschiedenis.nl/gg-schema#\",dossier:\"https://data.omgeving.vlaanderen.be/ns/dossier#\",bdc:\"http://dbpedia.org/resource/Category:\",ipsv:\"http://id.esd.org.uk/list/\",tarql:\"http://tarql.github.io/tarql#\",mls:\"http://www.w3.org/ns/mls#\",minim:\"http://purl.org/minim/minim#\",huto:\"http://ns.inria.fr/huto/\",wimpo:\"http://rdfex.org/withImports?uri=\",ifc:\"http://ifcowl.openbimstandards.org/IFC2X3_Final#\",planet:\"http://dbpedia.org/\",open311:\"http://ontology.eil.utoronto.ca/open311#\",year:\"http://www.w3.org/year/\",tui:\"http://data.ifs.tuwien.ac.at/study/resource/\",ensembl:\"http://rdf.ebi.ac.uk/resource/ensembl/\",crml:\"http://semweb.mmlab.be/ns/rml/condition#\",lsq:\"http://lsq.aksw.org/vocab#\",rofrm:\"http://rdaregistry.info/termList/rofrm/\",memento:\"http://mementoweb.org/ns#\",dwciri:\"http://rs.tdwg.org/dwc/iri/\",rpath:\"https://w3id.org/lodsight/rdf-path#\",bot:\"https://w3id.org/bot#\",property:\"http://fr.dbpedia.org/property/\",sdt:\"http://statisticaldata.linkedwidgets.org/terms/\",dbfo:\"http://dbpedia.org/facts/ontology#\",jpost:\"http://rdf.jpostdb.org/ontology/jpost.owl#\",dcosample:\"http://info.deepcarbon.net/sample/schema#\",composer:\"http://dbpedia.org/ontology/composer/\",lyon:\"http://dbpedia.org/resource/Lyon/\",eccdi:\"https://vocab.eccenca.com/di/\",pmovn:\"http://premon.fbk.eu/ontology/vn#\",mmo:\"http://purl.org/momayo/mmo/\",kbv:\"https://id.kb.se/vocab/\",nobel:\"http://data.nobelprize.org/terms/\",mmoon:\"http://mmoon.org/mmoon/\",sto:\"https://w3id.org/i40/sto#\",vocnet:\"http://schema.vocnet.org/\",biml:\"http://schemas.varigence.com/biml.xsd#\",pmonb:\"http://premon.fbk.eu/ontology/nb#\",task:\"http://deductions.github.io/task-management.owl.ttl#\",alice:\"http://example.org/\",semiot:\"http://w3id.org/semiot/ontologies/semiot#\",mmm:\"http://www.mico-project.eu/ns/mmm/2.0/schema#\",sdmxm:\"http://purl.org/linked-data/sdmx/2009/measure#\",pdf:\"http://ns.adobe.com/pdf/1.3/\",crime:\"http://purl.org/vocab/reloc/\",webac:\"http://fedora.info/definitions/v4/webac#\",cff:\"http://purl.oclc.org/NET/ssnx/cf/cf-feature#\",dataid:\"http://dataid.dbpedia.org/ns/core#\",rgml:\"http://purl.org/puninj/2001/05/rgml-schema#\",meshv:\"http://id.nlm.nih.gov/mesh/vocab#\",cpov:\"http://data.europa.eu/m8g/\",aprov:\"http://purl.org/a-proc#\",ioto:\"http://www.irit.fr/recherches/MELODI/ontologies/IoT-O#\",customer:\"http://www.valuelabs.com/\",maet:\"http://edg.topbraid.solutions/taxonomy/macroeconomics/\",rdaft:\"http://rdaregistry.info/termList/fileType/\",fuseki:\"http://jena.apache.org/fuseki#\",or:\"http://openresearch.org/vocab/\",swcomp:\"https://github.com/ali1k/ld-reactor/blob/master/vocabulary/index.ttl#\",studiop:\"http://purl.org/resource/pilatesstudio/\",neotec:\"http://neotec.rc.unesp.br/resource/Neotectonics/\",apf:\"http://jena.apache.org/ARQ/property#\",eol:\"http://purl.org/biodiversity/eol/\",isbdu:\"http://iflastandards.info/ns/isbd/unc/elements/\",eame:\"http://www.semanticweb.org/ontologia_EA#\",qms:\"http://data.europa.eu/esco/qms#\",wdv:\"http://www.wikidata.org/value/\",dsfv:\"http://sws.ifi.uio.no/vocab/dsf/henriwi/dsf#\",pm:\"http://premon.fbk.eu/resource/\",ncicp:\"http://ncicb.nci.nih.gov/xml/owl/EVS/Thesaurus.owl#\",yso:\"http://www.yso.fi/onto/yso/\",sorg:\"http://schema.org/\",cue:\"http://www.clarin.eu/cmdi/cues/display/1.0#\",bblfish:\"http://bblfish.net/people/henry/card#\",voc:\"http://voc.odw.tw/\",system:\"http://www.univalle.edu.co/ontologies/System#\",datacite:\"http://purl.org/spar/datacite/\",rofsf:\"http://rdaregistry.info/termList/rofsf/\",rdfp:\"https://w3id.org/rdfp/\",changeset:\"http://purl.org/vocab/changeset/schema#\",volt:\"http://volt-name.space/ontology/\",scholl:\"http://menemeneml.com/school#\",lgdt:\"http://linkedgeodata.org/triplify/\",voidex:\"http://www.swi-prolog.org/rdf/library/\",rdacarx:\"http://rdaregistry.info/termList/RDACarrierEU/\",dcodt:\"http://info.deepcarbon.net/datatype/schema#\",dcap:\"http://purl.org/ws-mmi-dc/terms/\",brt:\"http://brt.basisregistraties.overheid.nl/def/top10nl#\",ago:\"http://awesemantic-geo.link/ontology/\",esproc:\"http://vocab.linkeddata.es/datosabiertos/def/sector-publico/procedimientos#\",rofhf:\"http://rdaregistry.info/termList/rofhf/\",spv:\"http://completeness.inf.unibz.it/sp-vocab#\",fr:\"https://w3id.org/fr/def/core#\",opa:\"https://w3id.org/laas-iot/adream#\",pcdm:\"http://pcdm.org/models#\",ldl:\"https://w3id.org/ldpdl/ns#\",pbody:\"http://reference.data.gov.uk/def/public-body/\",rdalay:\"http://rdaregistry.info/termList/layout/\",asawoo:\"http://liris.cnrs.fr/asawoo/\",undata:\"http://citydata.wu.ac.at/Linked-UNData/data/\",pmofn:\"http://premon.fbk.eu/ontology/fn#\",ali:\"http://www.niso.org/schemas/ali/1.0/\",organ:\"http://www.univalle.edu.co/ontologies/Organ#\",scco:\"http://rdf.ebi.ac.uk/terms/surechembl#\",rdax:\"http://rdaregistry.info/Elements/x/\",owms:\"http://standaarden.overheid.nl/owms/terms/\",sdterms:\"http://statisticaldata.linkedwidgets.org/terms/\",dk:\"http://www.data-knowledge.org/dk/schema/rdf/latest/\",isidore:\"http://www.rechercheisidore.fr/class/\",pato:\"http://purl.obolibrary.org/obo/\",smxm:\"http://smxm.ga/\",ppr:\"http://purl.org/datanode/ppr/ns/\",vplan:\"http://www.ifs.tuwien.ac.at/~miksa/ontologies/VPlan.owl#\",vogd:\"http://ogd.ifs.tuwien.ac.at/vienna/geo/\",nature:\"http://deductions.github.io/nature_observation.owl.ttl#\",rdacdt:\"http://rdaregistry.info/termList/RDACartoDT/\",sgfn:\"http://w3id.org/sparql-generate/fn/\",dcodata:\"http://info.deepcarbon.net/data/schema#\",imo:\"http://imgpedia.dcc.uchile.cl/ontology#\",provoc:\"http://ns.inria.fr/provoc/\",tx:\"http://swtmp.gitlab.io/vocabulary/templates.owl#\",dsw:\"http://purl.org/dsw/\",marcrole:\"http://id.loc.gov/vocabulary/relators/\",juso:\"http://rdfs.co/juso/\",ecoll:\"http://purl.org/ceu/eco/1.0#\",ver:\"https://w3id.org/version/ontology#\",ldqm:\"http://linkeddata.es/resource/ldqm/\",doacc:\"http://purl.org/net/bel-epa/doacc#\",pmopb:\"http://premon.fbk.eu/ontology/pb#\",llr:\"http://lodlaundromat.org/resource/\",rofrt:\"http://rdaregistry.info/termList/rofrt/\",rofim:\"http://rdaregistry.info/termList/rofim/\",rdapf:\"http://rdaregistry.info/termList/presFormat/\",provinsi:\"http://provinsi.com/\",maeco:\"http://edg.topbraid.solutions/maeco/\",audit:\"http://fedora.info/definitions/v4/audit#\",eccpubsub:\"https://vocab.eccenca.com/pubsub/\",eem:\"http://purl.org/eem#\",rdacpc:\"http://rdaregistry.info/termList/configPlayback/\",rofin:\"http://rdaregistry.info/termList/rofin/\",csdbp:\"http://cs.dbpedia.org/\",adr:\"https://w3id.org/laas-iot/adream#\",clapit:\"http://dati.gov.it/onto/clapit/\",sct:\"http://snomed.info/sct/\",it:\"http://www.influencetracker.com/ontology#\",persee:\"http://data.persee.fr/ontology/persee_ontology/\",ispra:\"http://dati.isprambiente.it/ontology/core#\",wail:\"http://www.eyrie.org/~zednenem/2002/wail/\",svcs:\"http://rdfs.org/sioc/services#\",aozora:\"http://purl.org/net/aozora/\",srx:\"http://www.w3.org/2005/sparql-results#\",dto:\"http://www.datatourisme.fr/ontology/core/1.0#\",tissue:\"http://www.univalle.edu.co/ontologies/Tissue#\",geoloc:\"http://deductions.github.io/geoloc.owl.ttl#\",gobierno:\"http://www.gobierno.es/gobierno/\",rdaspc:\"http://rdaregistry.info/termList/specPlayback/\",pand:\"http://bag.basisregistraties.overheid.nl/bag/id/pand/\",swo:\"http://www.ebi.ac.uk/swo/\",fluidops:\"http://www.fluidops.com/\",connard:\"https://mail.google.com/mail/u/1/#\",sdmxcode:\"http://purl.org/linked-data/sdmx/2009/code#\",neotecbib:\"http://neotec.rc.unesp.br/resource/NeotectonicsBibliography/\",waarde:\"https://lod.milieuinfo.be/ns/waarde#\",tosh:\"http://topbraid.org/tosh#\",sdmxc:\"http://purl.org/linked-data/sdmx/2009/concept#\",rdabs:\"http://rdaregistry.info/termList/broadcastStand/\",ja:\"http://jena.hpl.hp.com/2005/11/Assembler#\",r4r:\"http://guava.iis.sinica.edu.tw/r4r/\",rdagen:\"http://rdaregistry.info/termList/RDAGeneration/\",rdaad:\"http://rdaregistry.info/Elements/a/datatype/\",ldq:\"http://www.linkeddata.es/ontology/ldq#\",pep:\"https://w3id.org/pep/\",oplbenefit:\"http://www.openlinksw.com/ontology/benefits#\",gvoith:\"http://assemblee-virtuelle.github.io/grands-voisins-v2/thesaurus.ttl#\",orcid:\"http://orcid.org/\",seeds:\"http://deductions.github.io/seeds.owl.ttl#\",nkos:\"http://w3id.org/nkos#\",meeting:\"http://www.w3.org/2002/07/meeting#\",amt:\"http://academic-meta-tool.xyz/vocab#\",elod:\"http://linkedeconomy.org/ontology#\",sgiter:\"http://w3id.org/sparql-generate/iter/\",qbe:\"http://citydata.wu.ac.at/qb-equations#\",gdc:\"https://portal.gdc.cancer.gov/cases/\",rdaill:\"http://rdaregistry.info/termList/IllusContent/\",sfn:\"http://semweb.datasciencelab.be/ns/sfn#\",ideotalex:\"http://www.ideotalex.eu/datos/recurso/\",brk:\"http://brk.basisregistraties.overheid.nl/def/brk#\",rm:\"http://jazz.net/ns/rm#\",edac:\"http://ontology.cybershare.utep.edu/ELSEWeb/elseweb-edac.owl#\",efd:\"http://data.foodanddrinkeurope.eu/ontology#\",rfd:\"http://com.intrinsec//ontology#\",add:\"http://www.datatourisme.fr/ontology/core/1.0#\",assoc:\"https://w3id.org/associations/vocab#\",rofet:\"http://rdaregistry.info/termList/rofet/\",estatgph:\"http://estatwrap.ontologycentral.com/id/nama_aux_gph#\",ldn:\"https://www.w3.org/TR/ldn/#\",wsdl:\"http://www.w3.org/ns/wsdl-rdf#\",emergelm:\"http://purl.org/emergel/modules#\",dsv:\"http://purl.org/iso25964/DataSet/Versioning#\",vort:\"http://rockets.topbraid.solutions/vort/\",km4c:\"http://www.disit.org/km4city/schema#\",ncbigene:\"http://identifiers.org/ncbigene/\",ctxdesc:\"http://www.demcare.eu/ontologies/contextdescriptor.owl#\",oplp:\"http://www.openlinksw.com/ontology/purchases#\",tg:\"http://www.turnguard.com/turnguard#\",its:\"http://www.w3.org/2005/11/its/rdf#\",prohow:\"https://w3id.org/prohow#\",d3s:\"http://vocbench.solidaridad.cloud/taxonomies#\",bds:\"http://www.bigdata.com/rdf/search#\",oplwebsrv:\"http://www.openlinksw.com/ontology/webservices#\",id:\"http://identifiers.org/\",geor:\"http://www.opengis.net/def/rule/geosparql/\",master1:\"http://idl.u-grenoble3.fr/\",psv:\"http://www.wikidata.org/prop/statement/value/\",vehma:\"http://deductions.github.io/vehicule-management.owl.ttl#\",rdavf:\"http://rdaregistry.info/termList/videoFormat/\",oplstocks:\"http://www.openlinksw.com/ontology/stocks#\",wab:\"http://wab.uib.no/cost-a32_philospace/wittgenstein.owl#\",llalg:\"http://www.linklion.org/algorithm/\",oplangel:\"http://www.openlinksw.com/schemas/angel#\",pair:\"http://virtual-assembly.org/pair/PAIR_LOD_V3.owl/\",ns2:\"http://ogp.me/ns#video:\",euvoc:\"http://publications.europa.eu/ontology/euvoc#\",sciprov:\"http://sweetontology.net/reprSciProvenance/\",fun:\"http://w3id.org/sparql-generate/fn/\",s4envi:\"https://w3id.org/def/saref4envi#\",ifcowl:\"http://www.buildingsmart-tech.org/ifcOWL/IFC4_ADD2#\",dao:\"http://purl.org/dao#\",ogdl4m:\"https://github.com/martynui/OGDL4M/\",ceterms:\"http://purl.org/ctdl/terms/\",odw:\"http://odw.tw/\",mexperf:\"http://mex.aksw.org/mex-perf#\",gvoi:\"http://assemblee-virtuelle.github.io/grands-voisins-v2/gv.owl.ttl#\",oplli:\"http://www.openlinksw.com/schemas/linkedin#\",bdo:\"http://purl.bdrc.io/ontology/core/\",scra:\"http://purl.org/net/schemarama#\",dcatnl:\"http://standaarden.overheid.nl/dcatnl/terms/\",ontop:\"https://w3id.org/ontop/\",osd:\"http://a9.com/-/spec/opensearch/1.1/\",w3cgeo:\"http://www.w3.org/2003/01/geo/wgs84_pos#\",uc:\"http://ucuenca.edu.ec/ontology#\",emergel:\"http://purl.org/emergel/core#\",activity:\"http://activitystrea.ms/specs/atom/1.0/\",bgt:\"https://bgt.basisregistraties.overheid.nl/bgt/def/\",ims:\"http://www.imsglobal.org/xsd/imsmd_v1p2/\",eustd:\"http://eurostat.linked-statistics.org/data#\",iso37120:\"http://ontology.eil.utoronto.ca/ISO37120.owl#\",halyard:\"http://merck.github.io/Halyard/ns#\",lmdb:\"http://data.linkedmdb.org/movie/\",estrf:\"http://vocab.linkeddata.es/datosabiertos/def/transporte/trafico#\",cpi:\"http://www.ebusiness-unibw.org/ontologies/cpi/ns#\",fhir:\"http://hl7.org/fhir/\",ido:\"http://purl.obolibrary.org/obo/ido.owl#\",dgfr:\"http://colin.maudry.com/ontologies/dgfr#\",iter:\"http://w3id.org/sparql-generate/iter/\",orgesv2:\"http://datos.gob.es/sites/default/files/OntologiaDIR3/orges.owl#\",aseonto:\"http://requirement.ase.ru/requirements_ontology#\",aml:\"https://w3id.org/i40/aml#\",ondc:\"http://www.semanticweb.org/ontologies/2012/1/Ontology1329913965202.owl#\",s3n:\"http://w3id.org/s3n/\",input:\"http://volt-name.space/vocab/input#\",dqc:\"http://semwebquality.org/ontologies/dq-constraints#\",globalcube:\"http://kalmar32.fzi.de/triples/global-cube.ttl#\",sfd:\"http://semantic-forms.cc:9112/ldp/\",rdare:\"http://rdaregistry.info/termList/RDARegionalEncoding/\",vsearch:\"http://vocab.sti2.at/vsearch#\",lcsh:\"http://id.loc.gov/authorities/subjects/\",da:\"https://www.wowman.org/index.php?id=1&type=get#\",nih:\"http://ncicb.nci.nih.gov/xml/owl/EVS/Thesaurus.owl#\",valueflows:\"https://w3id.org/valueflows/\",frappe:\"http://streamreasoning.org/ontologies/frappe#\",edg:\"http://edg.topbraid.solutions/model/\",cubeont:\"http://ontology.cube.global/\",besluit:\"http://data.vlaanderen.be/ns/besluit#\",tsnchange:\"http://purl.org/net/tsnchange#\",bob:\"http://good.dad/meaning/bob#\",shui:\"https://vocab.eccenca.com/shui/\",gt:\"https://vocab.eccenca.com/geniustex/\",ppn:\"http://parliament.uk/ontologies/person-name/\",dpla:\"http://dp.la/info/developers/map/\",rimmf:\"http://rimmf.com/vocab/\",bdr:\"http://purl.bdrc.io/resource/\",bci:\"https://w3id.org/BCI-ontology#\",fssp:\"http://linkeddata.fssprus.ru/resource/\",pop:\"http://wiki.dbpedia.org/\",fnml:\"http://semweb.mmlab.be/ns/fnml#\",imas:\"https://sparql.crssnky.xyz/imasrdf/URIs/imas-schema.ttl#\",lido:\"http://www.lido-schema.org/\",nrv:\"http://ns.inria.fr/nrv#\",docker:\"http://www.w3.org/ns/bde/docker/\",decprov:\"http://promsns.org/def/decprov#\",iotlite:\"http://purl.oclc.org/NET/UNIS/fiware/iot-lite#\",datacron:\"http://www.datacron-project.eu/datAcron#\",sylld:\"http://www.semanticweb.org/syllabus/data/\",bl:\"https://w3id.org/biolink/vocab/\",mandaat:\"http://data.vlaanderen.be/ns/mandaat#\",seokoeln:\"http://rankrage.de/\",dead:\"http://utpl.edu.ec/sbc/data/\",cocoon:\"https://w3id.org/cocoon/v1.0#\",mml:\"http://www.w3.org/1998/Math/MathML/\",literature:\"http://purl.org/net/cnyt-literature#\",dcx:\"http://dublincore.org/dcx/\",gbol:\"http://gbol.life/0.1#\",iab:\"https://www.iab.com/guidelines/taxonomy/\",isaterms:\"http://purl.org/isaterms/\",s4bldg:\"https://w3id.org/def/saref4bldg#\",led:\"http://led.kmi.open.ac.uk/term/\",plg:\"http://parliament.uk/ontologies/legislation/\",theme:\"http://voc.odw.tw/theme/\",seo:\"http://sda.tech/SEOontology/SEO/\",snac:\"http://socialarchive.iath.virginia.edu/\",nosql:\"http://purl.org/db/nosql#\",numbers:\"http://km.aifb.kit.edu/projects/numbers/\",loupe:\"http://ont-loupe.linkeddata.es/def/core/\",ids:\"https://w3id.org/idsa/core/\",ddb:\"http://www.deutsche-digitale-bibliothek.de/edm/\",mydb:\"http://mydb.org/\",mdont:\"http://ont.matchdeck.com/\",gdpr:\"https://vocab.eccenca.com/gdpr/\",logies:\"https://data.vlaanderen.be/ns/logies#\",linkrel:\"https://www.w3.org/ns/iana/link-relations/relation#\",medred:\"http://w3id.org/medred/medred#\",ecowlim:\"http://ecowlim.tfri.gov.tw/lode/resource/\",ecore:\"http://www.eclipse.org/emf/2002/Ecore#\",foam:\"https://www.koerperfettwaage-test.de/\",geo7:\"https://www.geo7.ch/\",foaffff:\"http://gogl.com/\",timex:\"http://data.wu.ac.at/ns/timex#\",legal:\"http://www.w3.org/ns/legal#\",number:\"http://km.aifb.kit.edu/projects/numbers/number#\",vehman:\"http://deductions.github.io/vehicule-management.owl.ttl#\",agrovoc:\"http://aims.fao.org/aos/agrovoc/\",cwlgit:\"https://w3id.org/cwl/view/git/\",m3:\"http://sensormeasurement.appspot.com/m3#\",fog:\"https://w3id.org/fog#\",cdao:\"http://purl.obolibrary.org/obo/\",kmgeo:\"http://km.aifb.kit.edu/services/geo/ontology#\",sirene:\"https://sireneld.io/vocab/sirene#\",faostat:\"http://reference.eionet.europa.eu/faostat/schema/\",atlasterms:\"http://rdf.ebi.ac.uk/terms/atlas/\",mobivoc:\"http://schema.mobivoc.org/\",az:\"https://w3id.org/people/az/\",ontoneo:\"http://purl.obolibrary.org/obo/ontoneo/\",smartapi:\"http://smart-api.io/ontology/1.0/smartapi#\",prof:\"http://www.w3.org/ns/dx/prof/\",dnbt:\"http://d-nb.info/standards/elementset/dnb#\",cwlprov:\"https://w3id.org/cwl/prov#\",lmo:\"http://linkedmultimedia.org/sparql-mm/ns/2.0.0/ontology#\",vss:\"http://automotive.eurecom.fr/vsso#\",radar:\"http://www.radar-projekt.org/display/\",tikag:\"https://www.tikag.com/\",r3d:\"http://www.re3data.org/schema/3-0#\",swrc2:\"https://www.cs.vu.nl/~mcaklein/onto/swrc_ext/2005/05#\",frbroo:\"http://iflastandards.info/ns/fr/frbr/frbroo/\",pcdmuse:\"http://pcdm.org/use#\",eepsa:\"https://w3id.org/eepsa#\",rvz:\"http://rdfvizler.dyreriket.xyz/vocabulary/core#\",dot:\"https://w3id.org/dot#\",hico:\"http://purl.org/emmedi/hico/\",physics:\"http://www.astro.umd.edu/~eshaya/astro-onto/owl/physics.owl#\",ldt:\"https://www.w3.org/ns/ldt#\",brick:\"https://brickschema.org/schema/1.1/Brick#\",omg:\"https://w3id.org/omg#\",munc:\"http://ns.inria.fr/munc#\",lovc:\"https://w3id.org/lovcube/ns/lovcube#\",afr:\"http://purl.allotrope.org/ontologies/result#\",mem:\"http://mementoweb.org/ns#\",goaf:\"http://goaf.fr/goaf#\",cbim:\"http://www.coinsweb.nl/cbim-2.0.rdf#\",fred:\"http://www.ontologydesignpatterns.org/ont/fred/domain.owl#\",rls:\"https://w3id.org/lovcube/ns/relovstats#\",scho:\"http://www.scholarlydata.org/ontology/conference-ontology.owl#\",ln:\"https://w3id.org/ln#\",pfeepsa:\"https://w3id.org/pfeepsa#\",bioentity:\"http://bioentity.io/vocab/\",aksw:\"http://aksw.org/\",yaco:\"https://www.irit.fr/recherches/MELODI/ontologies/cinema#\",iati:\"http://purl.org/collections/iati/\",drk:\"http://drakon.su/\",genre:\"http://sparql.cwrc.ca/ontologies/genre#\",mwapi:\"https://www.mediawiki.org/ontology#API/\",lmu:\"https://w3id.org/laas-iot/lmu#\",adf:\"http://purl.allotrope.org/ontologies/datapackage#\",bpo:\"https://w3id.org/bpo#\",url:\"http://schema.org/\",afm:\"http://purl.allotrope.org/ontologies/material/\",vir:\"http://w3id.org/vir#\",chear:\"http://hadatac.org/ont/chear#\",roar:\"https://w3id.org/roar#\",odf:\"http://docs.oasis-open.org/ns/office/1.2/meta/odf#\",refexo:\"http://purl.jp/bio/01/refexo#\",reg:\"http://purl.org/linked-data/registry#\",ul:\"http://underlay.mit.edu/ns/\",fnom:\"https://w3id.org/function/vocabulary/mapping#\",devuan:\"https://devuan.net.br/\",nno:\"https://w3id.org/nno/ontology#\",beer:\"http://beer.com/\",dpv:\"http://www.w3.org/ns/dpv#\",one:\"https://bioportal.bioontology.org/ontologies/ONE/\",conference:\"https://w3id.org/scholarlydata/ontology/conference-ontology.owl#\",cim:\"http://iec.ch/TC57/2013/CIM-schema-cim16#\",county:\"http://myexample.org/county#\",ucum:\"http://purl.oclc.org/NET/muo/ucum/\",alg:\"http://drakon.su/ADF#\",edr:\"https://w3id.org/laas-iot/edr#\",swa:\"http://topbraid.org/swa#\",obws:\"http://delicias.dia.fi.upm.es/ontologies/ObjectWithStates.owl#\",roc:\"https://w3id.org/ro/curate#\",trao:\"http://linkeddata.finki.ukim.mk/lod/ontology/tao#\",pham:\"https://w3id.org/skgo/pham#\",semsur:\"http://purl.org/SemSur/\",nas:\"https://data.nasa.gov/ontologies/atmonto/NAS#\",crmeh:\"http://purl.org/crmeh#\",sohukd:\"http://sweetontology.net/humanKnowledgeDomain/\",summa:\"http://purl.org/voc/summa/\",ocds:\"http://purl.org/onto-ocds/ocds#\",noise:\"http://vocab.linkeddata.es/datosabiertos/def/medio-ambiente/contaminacion-acustica#\",rami:\"http://iais.fraunhofer.de/vocabs/rami#\",idot:\"http://identifiers.org/idot/\",ca:\"http://complyadvantage.com/\",esservicio:\"http://vocab.linkeddata.es/datosabiertos/def/sector-publico/servicio#\",esdbpr:\"http://es.dbpedia.org/resource/\",s4ee:\"https://w3id.org/saref4ee#\",sirext:\"https://sireneld.io/vocab/sirext#\",tb:\"https://w3id.org/timebank#\",rsctx:\"http://softeng.polito.it/rsctx#\",otl:\"https://w3id.org/opentrafficlights#\",cog:\"http://purl.org/ontology/cco/core#\",powla:\"http://purl.org/powla/powla.owl#\",spvqa:\"https://bmake.th-brandenburg.de/spv#\",ermrk:\"http://www.essepuntato.it/2008/12/earmark#\",vocals:\"http://w3id.org/rsp/vocals#\",conll:\"http://ufal.mff.cuni.cz/conll2009-st/task-description.html#\",qkdv:\"http://qudt.org/vocab/dimensionvector/\",phy:\"https://w3id.org/skgo/phy#\",mus:\"http://data.doremus.org/ontology#\",dby:\"http://dbpedia.org/class/yago/\",veo:\"http://linkeddata.finki.ukim.mk/lod/ontology/veo#\",ctrl:\"https://w3id.org/ibp/CTRLont#\",cbb:\"https://data.cbb.omgeving.vlaanderen.be/ns/cbb#\",ksam:\"http://kulturarvsdata.se/ksamsok#\",dbms:\"http://www.openlinksw.com/ontology/dbms-app-ontology#\",gdprov:\"https://w3id.org/GDPRov#\",occ:\"http://w3id.org/occ#\",bkb:\"https://budayakb.cs.ui.ac.id/ns#\",m3lite:\"http://purl.org/iot/vocab/m3-lite#\",oop:\"http://w3id.org/oop#\",cska:\"http://pfclitex.com/\",gdprtext:\"https://w3id.org/GDPRtEXT#\",xbrll:\"https://w3id.org/vocab/xbrll#\",omnlc:\"http://open-multinet.info/ontology/omn-lifecycle#\",s4syst:\"https://saref.etsi.org/saref4syst/\",bld:\"http://biglinkeddata.com/\",lg:\"https://purl.org/lg/\",loci:\"http://linked.data.gov.au/def/loci#\",rdb:\"http://www.dbs.cs.uni-duesseldorf.de/RDF/relational#\",ii:\"http://sparql.cwrc.ca/ontologies/ii#\",oup:\"http://purl.org/ontology-use-patterns#\",gnaf:\"http://linked.data.gov.au/def/gnaf#\",crminf:\"http://www.cidoc-crm.org/cidoc-crm/CRMinf/\",wdtn:\"http://www.wikidata.org/prop/direct-normalized/\",geofabric:\"http://linked.data.gov.au/def/geofabric#\",imjv:\"https://data.imjv.omgeving.vlaanderen.be/ns/imjv#\",iospress:\"http://ld.iospress.nl/rdf/ontology/\",isoadr:\"http://reference.data.gov.au/def/ont/iso19160-1-address#\",lblodlg:\"http://data.lblod.info/vocabularies/leidinggevenden/\",hosp:\"http://health.data.gov/def/hospital/\",jup:\"http://w3id.org/charta77/jup/\",tree:\"https://w3id.org/tree#\",losp:\"http://sparql.sstu.ru:3030/speciality/\",eproc:\"http://10.0.3.120/download/eproc_FORN_v02.owl#\",dm:\"http://datamusee.givingsense.eu/onto/\",terms:\"http://purl.org/dc/terms/\",earth:\"http://linked.earth/ontology#\",gmo:\"http://purl.jp/bio/10/gmo/\",foio:\"https://w3id.org/seas/FeatureOfInterestOntology/\",manto:\"http://com.vortic3.MANTO/\",esagen:\"http://vocab.ciudadesabiertas.es/def/sector-publico/agenda-municipal#\",dave:\"http://theme-e.adaptcentre.ie/dave#\",gcon:\"https://w3id.org/GConsent#\",constant:\"http://qudt.org/vocab/constant/\",eqp:\"https://data.nasa.gov/ontologies/atmonto/equipment#\",fel:\"http://w3id.org/vcb/fel#\",dprov:\"http://promsns.org/def/do#\",asgs:\"http://linked.data.gov.au/def/asgs#\",sopropsp:\"http://sweetontology.net/propSpeed/\",daap:\"http://daap.eu/wiki/\",eppl:\"https://w3id.org/ep-plan#\",bitl:\"http://lib.bit.edu.cn/ontology/1.0/\",biolink:\"https://w3id.org/biolink/vocab/\",sopropsh:\"http://sweetontology.net/propSpaceHeight/\",eproc2:\"http://10.0.3.120/download/eproc_FORN_v04.owl#\",lesa:\"http://hadatac.org/ont/lesa#\",eupont:\"http://elite.polito.it/ontologies/eupont.owl#\",modsci:\"https://w3id.org/skgo/modsci#\",sophatmowm:\"https://sweetontology.net/phenAtmoWindMesoscale/\",sopropsl:\"http://sweetontology.net/propSpaceLocation/\",sopropr:\"http://sweetontology.net/propRotation/\",soma:\"http://sweetontology.net/matr/\",sopropsdis:\"http://sweetontology.net/propSpaceDistance/\",esgs:\"https://w3id.org/edwin/ontology/\",sfl:\"http://data.finlex.fi/schema/sfl/\",ods:\"http://lod.xdams.org/ontologies/ods/\",donto:\"http://reference.data.gov.au/def/ont/dataset#\",bsh:\"https://brickschema.org/schema/1.1.0/BrickShape#\",sopropsdir:\"http://sweetontology.net/propSpaceDirection/\",sorealc:\"http://sweetontology.net/realmLandCoastal/\",sohues:\"http://sweetontology.net/humanEnvirStandards/\",istex:\"https://data.istex.fr/ontology/istex#\",sopropti:\"http://sweetontology.net/propTime/\",cwmo:\"http://purl.org/cwmo/#\",soproptg:\"http://sweetontology.net/propTemperatureGradient/\",osys:\"http://purl.org/olia/system.owl#\",iaph:\"http://www.juntadeandalucia.es/datosabiertos/portal/iaph/dataset/dataset/6c199ca2-8d2e-4c12-833c-f28\",sohur:\"http://sweetontology.net/humanResearch/\",somaae:\"http://sweetontology.net/matrAerosol/\",skoslex:\"https://bp4mc2.org/def/skos-lex#\",soreaa:\"http://sweetontology.net/realmAtmo/\",soreao:\"http://sweetontology.net/realmOcean/\",sostso:\"http://sweetontology.net/stateSolid/\",sohut:\"http://sweetontology.net/humanTransportation/\",eccf:\"http://data.europa.eu/54i/\",apb:\"http://www.analysispartners.org/businessmodel/\",wild:\"http://purl.org/wild/vocab#\",sorelt:\"http://sweetontology.net/relaTime/\",sopropi:\"http://sweetontology.net/propIndex/\",ei2a:\"http://opendata.aragon.es/def/ei2a#\",edupro:\"http://ns.inria.fr/semed/eduprogression#\",qk:\"http://qudt.org/vocab/quantitykind/\",epplan:\"https://w3id.org/ep-plan#\",sosttg:\"http://sweetontology.net/stateTimeGeologic/\",sopropmf:\"http://sweetontology.net/propMassFlux/\",sopropsm:\"http://sweetontology.net/propSpaceMultidimensional/\",sostst:\"http://sweetontology.net/stateStorm/\",sostv:\"http://sweetontology.net/stateVisibility/\",sorelh:\"http://sweetontology.net/relaHuman/\",twitter:\"http://stocktwits.com/\",sohutr:\"http://sweetontology.net/humanTechReadiness/\",sosttc:\"http://sweetontology.net/stateTimeCycle/\",somaoc:\"http://sweetontology.net/matrOrganicCompound/\",somarock:\"http://sweetontology.net/matrRock/\",sopropo:\"http://sweetontology.net/propOrdinal/\",sopropp:\"http://sweetontology.net/propPressure/\",somamin:\"http://sweetontology.net/matrMineral/\",sostth:\"http://sweetontology.net/stateThermodynamic/\",sopropq:\"http://sweetontology.net/propQuantity/\",sopropst:\"http://sweetontology.net/propSpaceThickness/\",sopropt:\"http://sweetontology.net/propTemperature/\",sophatmopc:\"http://sweetontology.net/phenAtmoPrecipitation/\",dentsci:\"https://w3id.org/skgo/dentsci#\",inchikey:\"https://identifiers.org/inchikey:\",shema:\"http://schema.org/\",sosttf:\"http://sweetontology.net/stateTimeFrequency/\",sorear:\"http://sweetontology.net/realmRegion/\",soprops:\"http://sweetontology.net/propSpace/\",stencila:\"http://schema.stenci.la/\",extech:\"https://w3id.org/executionTechnique/ontology/\",sohuj:\"http://sweetontology.net/humanJurisdiction/\",sorelm:\"http://sweetontology.net/relaMath/\",sorelsp:\"http://sweetontology.net/relaSpace/\",sostsy:\"http://sweetontology.net/stateSystem/\",soreaas:\"http://sweetontology.net/realmAstroStar/\",sostri:\"http://sweetontology.net/stateRoleImpact/\",somaen:\"http://sweetontology.net/matrEnergy/\",sopropcha:\"http://sweetontology.net/propCharge/\",sorelpr:\"http://sweetontology.net/relaProvenance/\",esagm:\"http://vocab.ciudadesabiertas.es/def/sector-publico/agenda-municipal#\",soproptf:\"http://sweetontology.net/propTimeFrequency/\",sorelch:\"http://sweetontology.net/relaChemical/\",probont:\"http://www.probonto.org/ontology#\",sorepmo:\"http://sweetontology.net/reprMathOperation/\",dbm:\"http://purl.org/net/dbm/ontology#\",sorepsc:\"http://sweetontology.net/reprSciComponent/\",soreac:\"http://sweetontology.net/realmCryo/\",sopropb:\"http://sweetontology.net/propBinary/\",sorel:\"http://sweetontology.net/rela/\",soreabb:\"http://sweetontology.net/realmBiolBiome/\",sophcr:\"http://sweetontology.net/phenCryo/\",ci:\"https://privatealpha.com/ontology/content-inventory/1#\",somaem:\"http://sweetontology.net/matrElementalMolecule/\",sohuecons:\"http://sweetontology.net/humanEnvirConservation/\",sostrr:\"http://sweetontology.net/stateRoleRepresentative/\",sophst:\"http://sweetontology.net/phenStar/\",sostrt:\"http://sweetontology.net/stateRoleTrust/\",soprocsc:\"http://sweetontology.net/procStateChange/\",somael:\"http://sweetontology.net/matrElement/\",sopropdifu:\"http://sweetontology.net/propDiffusivity/\",mccv:\"http://purl.jp/bio/10/mccv#\",soprocc:\"http://sweetontology.net/procChemical/\",pplan:\"http://purl.org/net/p-plan#\",cfrl:\"http://linkeddata.finki.ukim.mk/lod/ontology/cfrl#\",sorepdsg:\"http://sweetontology.net/reprDataServiceGeospatial/\",sorealp:\"http://sweetontology.net/realmLandProtected/\",sorepdm:\"http://sweetontology.net/reprDataModel/\",soproc:\"http://sweetontology.net/proc/\",somais:\"http://sweetontology.net/matrIsotope/\",sorepdsv:\"http://sweetontology.net/reprDataServiceValidation/\",sorepmso:\"http://sweetontology.net/reprMathSolution/\",sophsy:\"http://sweetontology.net/phenSystem/\",sorepsl:\"http://sweetontology.net/reprSciLaw/\",soreaofe:\"http://sweetontology.net/realmOceanFeature/\",pineapple:\"http://hexananas.com/pineapple#\",soreas:\"http://sweetontology.net/realmSoil/\",somapl:\"http://sweetontology.net/matrPlant/\",lib:\"http://purl.org/library/\",sophec:\"http://sweetontology.net/phenEcology/\",atts:\"https://data.nasa.gov/ontologies/atmonto/general#\",chemsci:\"https://w3id.org/skgo/chemsci#\",cci:\"http://cookingbigdata.com/linkeddata/ccinstances#\",sophatmofr:\"http://sweetontology.net/phenAtmoFront/\",wotsec:\"https://www.w3.org/2019/wot/security#\",soreacz:\"http://sweetontology.net/realmClimateZone/\",sophatmow:\"http://sweetontology.net/phenAtmoWind/\",somaind:\"http://sweetontology.net/matrIndustrial/\",sopropm:\"http://sweetontology.net/propMass/\",soreahb:\"http://sweetontology.net/realmHydroBody/\",sorepdp:\"http://sweetontology.net/reprDataProduct/\",ccp:\"http://cookingbigdata.com/linkeddata/ccpricing#\",sorepscd:\"http://sweetontology.net/reprSpaceCoordinate/\",sohueccont:\"http://sweetontology.net/humanEnvirControl/\",sorelsc:\"http://sweetontology.net/relaSci/\",soreaaw:\"http://sweetontology.net/realmAtmoWeather/\",soman:\"http://sweetontology.net/matrAnimal/\",yandex:\"http://yandex.ru/\",somas:\"http://sweetontology.net/matrSediment/\",soprope:\"http://sweetontology.net/propEnergy/\",soreaabl:\"http://sweetontology.net/realmAtmoBoundaryLayer/\",sostti:\"http://sweetontology.net/stateTime/\",sophatmofo:\"http://sweetontology.net/phenAtmoFog/\",sopropdr:\"http://sweetontology.net/propDimensionlessRatio/\",sorelph:\"http://sweetontology.net/relaPhysical/\",somab:\"http://sweetontology.net/matrBiomass/\",sorelcl:\"http://sweetontology.net/relaClimate/\",soreaofl:\"http://sweetontology.net/realmOceanFloor/\",somanr:\"http://sweetontology.net/matrNaturalResource/\",sopropfr:\"http://sweetontology.net/propFraction/\",sorepmg:\"http://sweetontology.net/reprMathGraph/\",soprocp:\"http://sweetontology.net/procPhysical/\",soph:\"http://sweetontology.net/phen/\",sophel:\"http://sweetontology.net/phenElecMag/\",sorepmfo:\"http://sweetontology.net/reprMathFunctionOrthogonal/\",pq:\"http://www.wikidata.org/prop/qualifier/\",sorepm:\"http://sweetontology.net/reprMath/\",sorepmst:\"http://sweetontology.net/reprMathStatistics/\",soreaah:\"http://sweetontology.net/realmAstroHelio/\",somarocki:\"http://sweetontology.net/matrRockIgneous/\",sorepsrs:\"http://sweetontology.net/reprSpaceReferenceSystem/\",sorepdsa:\"http://sweetontology.net/reprDataServiceAnalysis/\",sophatmot:\"http://sweetontology.net/phenAtmoTransport/\",sopropcap:\"http://sweetontology.net/propCapacity/\",sorep:\"http://sweetontology.net/repr/\",dmp:\"http://www.sysresearch.org/rda-common-dmp#\",sophod:\"http://sweetontology.net/phenOceanDynamics/\",sopropcon:\"http://sweetontology.net/propConductivity/\",sopropef:\"http://sweetontology.net/propEnergyFlux/\",sophatmol:\"http://sweetontology.net/phenAtmoLightning/\",sost:\"http://sweetontology.net/state/\",sorepts:\"http://sweetontology.net/reprTimeSeason/\",sophm:\"http://sweetontology.net/phenMixing/\",misp:\"http://purl.org/cyber/misp#\",sorealo:\"http://sweetontology.net/realmLandOrographic/\",sorepds:\"http://sweetontology.net/reprDataService/\",sorept:\"http://sweetontology.net/reprTime/\",somaf:\"http://sweetontology.net/matrFacility/\",d2s:\"https://w3id.org/d2s/\",sophatmoc:\"http://sweetontology.net/phenAtmoCloud/\",sweet:\"http://sweetontology.net/\",sorepdsr:\"http://sweetontology.net/reprDataServiceReduction/\",soprop:\"http://sweetontology.net/prop/\",sophatmo:\"http://sweetontology.net/phenAtmo/\",hctl:\"https://www.w3.org/2019/wot/hypermedia#\",sophr:\"http://sweetontology.net/phenReaction/\",sopropdife:\"http://sweetontology.net/propDifference/\",sopropcou:\"http://sweetontology.net/propCount/\",arp:\"http://www.arpenteur.org/ontology/Arpenteur.owl#\",somains:\"http://sweetontology.net/matrInstrument/\",somaw:\"http://sweetontology.net/matrWater/\",sophso:\"http://sweetontology.net/phenSolid/\",sopropcat:\"http://sweetontology.net/propCategorical/\",sophcy:\"http://sweetontology.net/phenCycle/\",sophsyc:\"http://sweetontology.net/phenSystemComplexity/\",sopropfu:\"http://sweetontology.net/propFunction/\",somac:\"http://sweetontology.net/matrCompound/\",sophoc:\"http://sweetontology.net/phenOceanCoastal/\",sophpc:\"http://sweetontology.net/phenPlanetClimate/\",sopropche:\"http://sweetontology.net/propChemical/\",sophhy:\"http://sweetontology.net/phenHydro/\",sophatmos:\"http://sweetontology.net/phenAtmoSky/\",sorepdf:\"http://sweetontology.net/reprDataFormat/\",somaio:\"http://sweetontology.net/matrIon/\",sophei:\"http://sweetontology.net/phenEnvirImpact/\",sorepsd:\"http://sweetontology.net/reprSpaceDirection/\",somaeq:\"http://sweetontology.net/matrEquipment/\",sophfi:\"http://sweetontology.net/phenFluidInstability/\",ccr:\"http://cookingbigdata.com/linkeddata/ccregions#\",atd:\"https://data.nasa.gov/ontologies/atmonto/data#\",sophcm:\"http://sweetontology.net/phenCycleMaterial/\",atm:\"https://data.nasa.gov/ontologies/atmonto/ATM#\",cbs:\"http://betalinkeddata.cbs.nl/def/cbs#\",ccsla:\"http://cookingbigdata.com/linkeddata/ccsla#\",sorepmf:\"http://sweetontology.net/reprMathFunction/\",sophb:\"http://sweetontology.net/phenBiol/\",soprocw:\"http://sweetontology.net/procWave/\",sopho:\"http://sweetontology.net/phenOcean/\",sorepsu:\"http://sweetontology.net/reprSciUnits/\",sophhe:\"http://sweetontology.net/phenHelio/\",sorepsf:\"http://sweetontology.net/reprSciFunction/\",sorepsme:\"http://sweetontology.net/reprSciMethodology/\",rico:\"https://www.ica.org/standards/RiC/ontology#\",sophfd:\"http://sweetontology.net/phenFluidDynamics/\",sophft:\"http://sweetontology.net/phenFluidTransport/\",sorepsg3:\"http://sweetontology.net/reprSpaceGeometry3D/\",soreps:\"http://sweetontology.net/reprSpace/\",sophwn:\"http://sweetontology.net/phenWaveNoise/\",soreptd:\"http://sweetontology.net/reprTimeDay/\",sophen:\"http://sweetontology.net/phenEnergy/\",sophw:\"http://sweetontology.net/phenWave/\",soreal:\"http://sweetontology.net/realmLandform/\",somapa:\"http://sweetontology.net/matrParticle/\",sosto:\"http://sweetontology.net/stateOrdinal/\",stx:\"http://purl.org/cyber/stix#\",sophatmops:\"http://sweetontology.net/phenAtmoPressure/\",sostc:\"http://sweetontology.net/stateChemical/\",jsonschema:\"https://www.w3.org/2019/wot/json-schema#\",somamic:\"http://sweetontology.net/matrMicrobiota/\",proton:\"http://www.ontotext.com/proton/\",sostrg:\"http://sweetontology.net/stateRoleGeographic/\",sohua:\"http://sweetontology.net/humanAgriculture/\",bperson:\"http://data.vlaanderen.be/ns/persoon#\",trek:\"https://w3id.org/trek/\",sostrb:\"http://sweetontology.net/stateRoleBiological/\",sostb:\"http://sweetontology.net/stateBiological/\",sostro:\"http://sweetontology.net/stateRole/\",phto:\"http://rhizomik.net/ontologies/PlantHealthThreats.owl.ttl#\",sostre:\"http://sweetontology.net/stateRealm/\",snomedct:\"http://purl.bioontology.org/ontology/SNOMEDCT/\",sorepsp:\"http://sweetontology.net/reprSciProvenance/\",exo:\"https://w3id.org/example#\",ciao:\"http://ciao.it/\",sostf:\"http://sweetontology.net/stateFluid/\",sostef:\"http://sweetontology.net/stateEnergyFlux/\",sostdp:\"http://sweetontology.net/stateDataProcessing/\",sostrc:\"http://sweetontology.net/stateRoleChemical/\",sohu:\"http://sweetontology.net/human/\",ldc:\"https://tac.nist.gov/tracks/SM-KBP/2018/ontologies/SeedlingOntology#\",sorealv:\"http://sweetontology.net/realmLandVolcanic/\",ocsw:\"http://data.diekb.org/def/ocsw#\",malaka:\"http://george.gr/\",skosthes:\"http://purl.org/iso25964/skos-thes#\",ingredient:\"http://www.owl-ontologies.com/test.owl/ingredient/\",omop:\"http://api.ohdsi.org/WebAPI/vocabulary/concept/\",mbkeys:\"https://pastebin.com/ThBfphb8#\",sorepsmo:\"http://sweetontology.net/reprSciModel/\",sostp:\"http://sweetontology.net/statePhysical/\",sostss:\"http://sweetontology.net/stateSpaceScale/\",sohuea:\"http://sweetontology.net/humanEnvirAssessment/\",sohud:\"http://sweetontology.net/humanDecision/\",pnv:\"https://w3id.org/pnv#\",lv2:\"http://lv2plug.in/ns/lv2core/\",beo:\"http://pi.pauwel.be/voc/buildingelement#\",lprov:\"http://id.learning-provider.data.ac.uk/terms#\",soall:\"http://sweetontology.net/sweetAll/\",sostsb:\"http://sweetontology.net/stateSpectralBand/\",capes:\"http://vocab.capes.gov.br/def/vcav#\",soreaab:\"http://sweetontology.net/realmAstroBody/\",ccomid:\"http://www.ontologyrepository.com/CommonCoreOntologies/Mid/\",sorealg:\"http://sweetontology.net/realmLandGlacial/\",sorealt:\"http://sweetontology.net/realmLandTectonic/\",sophgt:\"http://sweetontology.net/phenGeolTectonic/\",soreaer:\"http://sweetontology.net/realmEarthReference/\",mmms:\"http://ldf.fi/schema/mmm/\",sophg:\"http://sweetontology.net/phenGeol/\",ordo:\"http://www.orpha.net/ORDO/\",sorealf:\"http://sweetontology.net/realmLandFluvial/\",esbici:\"http://vocab.ciudadesabiertas.es/def/transporte/bicicleta-publica#\",sophgv:\"http://sweetontology.net/phenGeolVolcano/\",wds:\"http://www.wikidata.org/entity/statement/\",soreala:\"http://sweetontology.net/realmLandAeolian/\",gleio:\"http://lei.info/gleio/\",sostsl:\"http://sweetontology.net/stateSpectralLine/\",bldont:\"http://ont.biglinkeddata.com/\",sophgg:\"http://sweetontology.net/phenGeolGeomorphology/\",matvoc:\"http://stream-ontology.com/matvoc/\",sostsp:\"http://sweetontology.net/stateSpace/\",sophgs:\"http://sweetontology.net/phenGeolSeismicity/\",ggbn:\"http://data.ggbn.org/schemas/ggbn/terms/\",sophgf:\"http://sweetontology.net/phenGeolFault/\",sostsc:\"http://sweetontology.net/stateSpaceConfiguration/\",dfcb:\"http://datafoodconsortium.org/ontologies/DFC_BusinessOntology.owl#\",sohuc:\"http://sweetontology.net/humanCommerce/\",schoi:\"https://w3id.org/scholarlydata/ontology/indicators-ontology.owl#\",birthdate:\"http://schema.org/birthDate/\",hdgi:\"https://w3id.org/hdgi#\",idsc:\"https://w3id.org/idsa/code/\",sorea:\"http://sweetontology.net/realm/\",biogrid:\"http://thebiogrid.org/\",dfc:\"http://datafoodconsortium.org/ontologies/DFC_FullModel.owl#\",she:\"http://shacleditor.org/\",compub:\"https://sireneld.io/vocab/compub#\",mpg123:\"https://devuan.net.br/wiki/mpg123/\",omim:\"http://purl.bioontology.org/ontology/OMIM/\",docam:\"https://www.docam.ca/glossaurus/\",taxref:\"http://taxref.mnhn.fr/lod/taxon/\",oplsoft:\"http://www.openlinksw.com/ontology/software#\",rank:\"http://www.ontotext.com/owlim/RDFRank#\",brot:\"https://w3id.org/brot#\",gx:\"https://graphite.synaptica.net/extension/\",mobiliteit:\"https://data.vlaanderen.be/ns/mobiliteit#\",wasa:\"http://vocab.sti2.at/wasa/\",country:\"http://eulersharp.sourceforge.net/2003/03swap/countries#\",uimo:\"http://vocab.sti2.at/uimo/\",saref4envi:\"https://saref.etsi.org/saref4envi/\",fernanda:\"http://fernanda.nl/\",dd:\"http://example.org/dummydata/\",say:\"http://example.org/say/\",osmm:\"https://www.openstreetmap.org/meta/\",s4city:\"https://saref.etsi.org/saref4city/\",wotc:\"http://purl.org/wot-catalogue#\",mgv:\"http://mangaview.fr/mgv#\",s4agri:\"https://saref.etsi.org/saref4agri/\",s4ener:\"https://saref.etsi.org/saref4ener/\",osmrel:\"https://www.openstreetmap.org/relation/\",iaco:\"https://iaco.me/\",osmway:\"https://www.openstreetmap.org/way/\",io:\"https://iaco.me/\",osmt:\"https://wiki.openstreetmap.org/wiki/Key:\",asio:\"http://purl.org/hercules/asio/core#\",knows:\"http://semantic.komc/usu/2020/knows#\",gas:\"http://www.bigdata.com/rdf/gas#\",osmnode:\"https://www.openstreetmap.org/node/\",taxrefprop:\"http://taxref.mnhn.fr/lod/property/\",lexicog:\"http://www.w3.org/ns/lemon/lexicog#\",oplfeat:\"http://www.openlinksw.com/ontology/features#\",dbonto:\"http://dbepedia.org/ontology/\",ld:\"http://linkeddata.ru/\",cts:\"http://rdf.cdisc.org/sdtm-terminology#\",gco:\"http://purl.jp/bio/12/glyco/conjugate#\",persoon:\"http://data.vlaanderen.be/ns/persoon#\",esconv:\"http://vocab.ciudadesabiertas.es/def/sector-publico/convenio#\",rl:\"http://rl.com/resources/\",bao:\"http://www.bioassayontology.org/bao#\",srv:\"http://www.daml.org/services/owl-s/1.2/Service.owl#\",movieo:\"http://movie.com/ontology/\",pgxo:\"http://pgxo.loria.fr/\",toaru:\"https://metadata.moe/toaru-sparql/elements/\",jur:\"http://sweet.jpl.nasa.gov/2.3/humanJurisdiction.owl#\",kko:\"http://kbpedia.org/kko/rc/\",mltd:\"https://mltd.pikopikopla.net/mltd-schema#\",bs:\"https://w3id.org/def/basicsemantics-owl#\",prismdb:\"https://prismdb.takanakahiko.me/prism-schema.ttl#\",ogura:\"https://sparql.crssnky.xyz/Ogura_Hyakunin_Isshu_LinkedRDF/URIs/Ogura_Hyakunin_Isshu_schema.ttl#\",estraf:\"http://vocab.ciudadesabiertas.es/def/transporte/trafico#\",vlueprint:\"https://vlueprint.org/schema/\",hola:\"https://moodle.insa-lyon.fr/course/view.php?id=\",ebg:\"http://data.businessgraph.io/ontology#\",eppo:\"https://gd.eppo.int/taxon/\",oco:\"https://w3id.org/oc/ontology/#\",esautob:\"http://vocab.ciudadesabiertas.es/def/transporte/autobus#\",maroc:\"http://fr.dbpedia.org/page/Maroc/\",trak:\"https://trakmetamodel.sourceforge.io/vocab/rdf-schema.rdf#\",karstlink:\"https://ontology.uis-speleo.org/ontology/#\",marcgt:\"https://id.loc.gov/vocabulary/marcgt/\",melding:\"http://lblod.data.gift/vocabularies/automatische-melding/\",accid:\"http://pid.accurids.com/\",ibeacon:\"http://vocab.rapidthings.eu/ns/apple/ibeacon.ttl#\",mr:\"http://marineregions.org/mrgid/\",ams:\"http://data.amadeus.com/\",ble:\"http://vocab.rapidthings.eu/ns/ble.ttl#\",motogp:\"http://www.motogp.com/\",nsg:\"https://neuroshapes.org/\",fibo:\"https://spec.edmcouncil.org/fibo/ontology/master/latest/\",ssnx:\"http://purl.oclc.org/NET/ssnx/ssn#\",w3geo:\"http://www.w3.org/2003/01/geo/wgs84_pos#\",i18n:\"https://www.w3.org/ns/i18n#\",contry:\"http://dbpedia.org/resource/Lyon#\",w3id:\"https://w3id.org/\",contax:\"https://w3id.org/con-tax#\",bleadapter:\"http://vocab.rapidthings.eu/ns/ble/adapter.ttl#\",esempleo:\"http://vocab.ciudadesabiertas.es/def/sector-publico/empleo#\",mnx:\"https://rdf.metanetx.org/schema/\",cso:\"http://cso.kmi.open.ac.uk/schema/cso/\"}};","/**\n * Created by pheyvaer on 18.04.17.\n */\n\nlet data = require('./data.json')[\"@context\"];\n\nfunction getPrefixes(){\n  return Object.keys(data);\n}\n\nfunction asMap() {\n  return data;\n}\n\nfunction getNamespaceViaPrefix(prefix) {\n  return data[prefix];\n}\n\nfunction getPrefixViaNamespace(namespace) {\n  let prefixes = Object.keys(data);\n  let i = 0;\n\n  while (i < prefixes.length && data[prefixes[i]] !== namespace) {\n    i ++;\n  }\n\n  if (i < prefixes.length) {\n    return prefixes[i];\n  } else {\n    return null;\n  }\n}\n\nmodule.exports = {\n  getPrefixes: getPrefixes,\n  getNamespaceViaPrefix: getNamespaceViaPrefix,\n  getPrefixViaNamespace: getPrefixViaNamespace,\n  asMap: asMap\n};","// Generated by CoffeeScript 1.12.4\nvar Pattern;\n\nPattern = (function() {\n  Pattern.prototype.regex = null;\n\n  Pattern.prototype.rawRegex = null;\n\n  Pattern.prototype.cleanedRegex = null;\n\n  Pattern.prototype.mapping = null;\n\n  function Pattern(rawRegex, modifiers) {\n    var _char, capturingBracketNumber, cleanedRegex, i, len, mapping, name, part, subChar;\n    if (modifiers == null) {\n      modifiers = '';\n    }\n    cleanedRegex = '';\n    len = rawRegex.length;\n    mapping = null;\n    capturingBracketNumber = 0;\n    i = 0;\n    while (i < len) {\n      _char = rawRegex.charAt(i);\n      if (_char === '\\\\') {\n        cleanedRegex += rawRegex.slice(i, +(i + 1) + 1 || 9e9);\n        i++;\n      } else if (_char === '(') {\n        if (i < len - 2) {\n          part = rawRegex.slice(i, +(i + 2) + 1 || 9e9);\n          if (part === '(?:') {\n            i += 2;\n            cleanedRegex += part;\n          } else if (part === '(?<') {\n            capturingBracketNumber++;\n            i += 2;\n            name = '';\n            while (i + 1 < len) {\n              subChar = rawRegex.charAt(i + 1);\n              if (subChar === '>') {\n                cleanedRegex += '(';\n                i++;\n                if (name.length > 0) {\n                  if (mapping == null) {\n                    mapping = {};\n                  }\n                  mapping[name] = capturingBracketNumber;\n                }\n                break;\n              } else {\n                name += subChar;\n              }\n              i++;\n            }\n          } else {\n            cleanedRegex += _char;\n            capturingBracketNumber++;\n          }\n        } else {\n          cleanedRegex += _char;\n        }\n      } else {\n        cleanedRegex += _char;\n      }\n      i++;\n    }\n    this.rawRegex = rawRegex;\n    this.cleanedRegex = cleanedRegex;\n    this.regex = new RegExp(this.cleanedRegex, 'g' + modifiers.replace('g', ''));\n    this.mapping = mapping;\n  }\n\n  Pattern.prototype.exec = function(str) {\n    var index, matches, name, ref;\n    this.regex.lastIndex = 0;\n    matches = this.regex.exec(str);\n    if (matches == null) {\n      return null;\n    }\n    if (this.mapping != null) {\n      ref = this.mapping;\n      for (name in ref) {\n        index = ref[name];\n        matches[name] = matches[index];\n      }\n    }\n    return matches;\n  };\n\n  Pattern.prototype.test = function(str) {\n    this.regex.lastIndex = 0;\n    return this.regex.test(str);\n  };\n\n  Pattern.prototype.replace = function(str, replacement) {\n    this.regex.lastIndex = 0;\n    return str.replace(this.regex, replacement);\n  };\n\n  Pattern.prototype.replaceAll = function(str, replacement, limit) {\n    var count;\n    if (limit == null) {\n      limit = 0;\n    }\n    this.regex.lastIndex = 0;\n    count = 0;\n    while (this.regex.test(str) && (limit === 0 || count < limit)) {\n      this.regex.lastIndex = 0;\n      str = str.replace(this.regex, replacement);\n      count++;\n    }\n    return [str, count];\n  };\n\n  return Pattern;\n\n})();\n\nmodule.exports = Pattern;\n","// Generated by CoffeeScript 1.12.4\nvar Pattern, Utils,\n  hasProp = {}.hasOwnProperty;\n\nPattern = require('./Pattern');\n\nUtils = (function() {\n  function Utils() {}\n\n  Utils.REGEX_LEFT_TRIM_BY_CHAR = {};\n\n  Utils.REGEX_RIGHT_TRIM_BY_CHAR = {};\n\n  Utils.REGEX_SPACES = /\\s+/g;\n\n  Utils.REGEX_DIGITS = /^\\d+$/;\n\n  Utils.REGEX_OCTAL = /[^0-7]/gi;\n\n  Utils.REGEX_HEXADECIMAL = /[^a-f0-9]/gi;\n\n  Utils.PATTERN_DATE = new Pattern('^' + '(?<year>[0-9][0-9][0-9][0-9])' + '-(?<month>[0-9][0-9]?)' + '-(?<day>[0-9][0-9]?)' + '(?:(?:[Tt]|[ \\t]+)' + '(?<hour>[0-9][0-9]?)' + ':(?<minute>[0-9][0-9])' + ':(?<second>[0-9][0-9])' + '(?:\\.(?<fraction>[0-9]*))?' + '(?:[ \\t]*(?<tz>Z|(?<tz_sign>[-+])(?<tz_hour>[0-9][0-9]?)' + '(?::(?<tz_minute>[0-9][0-9]))?))?)?' + '$', 'i');\n\n  Utils.LOCAL_TIMEZONE_OFFSET = new Date().getTimezoneOffset() * 60 * 1000;\n\n  Utils.trim = function(str, _char) {\n    var regexLeft, regexRight;\n    if (_char == null) {\n      _char = '\\\\s';\n    }\n    regexLeft = this.REGEX_LEFT_TRIM_BY_CHAR[_char];\n    if (regexLeft == null) {\n      this.REGEX_LEFT_TRIM_BY_CHAR[_char] = regexLeft = new RegExp('^' + _char + '' + _char + '*');\n    }\n    regexLeft.lastIndex = 0;\n    regexRight = this.REGEX_RIGHT_TRIM_BY_CHAR[_char];\n    if (regexRight == null) {\n      this.REGEX_RIGHT_TRIM_BY_CHAR[_char] = regexRight = new RegExp(_char + '' + _char + '*$');\n    }\n    regexRight.lastIndex = 0;\n    return str.replace(regexLeft, '').replace(regexRight, '');\n  };\n\n  Utils.ltrim = function(str, _char) {\n    var regexLeft;\n    if (_char == null) {\n      _char = '\\\\s';\n    }\n    regexLeft = this.REGEX_LEFT_TRIM_BY_CHAR[_char];\n    if (regexLeft == null) {\n      this.REGEX_LEFT_TRIM_BY_CHAR[_char] = regexLeft = new RegExp('^' + _char + '' + _char + '*');\n    }\n    regexLeft.lastIndex = 0;\n    return str.replace(regexLeft, '');\n  };\n\n  Utils.rtrim = function(str, _char) {\n    var regexRight;\n    if (_char == null) {\n      _char = '\\\\s';\n    }\n    regexRight = this.REGEX_RIGHT_TRIM_BY_CHAR[_char];\n    if (regexRight == null) {\n      this.REGEX_RIGHT_TRIM_BY_CHAR[_char] = regexRight = new RegExp(_char + '' + _char + '*$');\n    }\n    regexRight.lastIndex = 0;\n    return str.replace(regexRight, '');\n  };\n\n  Utils.isEmpty = function(value) {\n    return !value || value === '' || value === '0' || (value instanceof Array && value.length === 0) || this.isEmptyObject(value);\n  };\n\n  Utils.isEmptyObject = function(value) {\n    var k;\n    return value instanceof Object && ((function() {\n      var results;\n      results = [];\n      for (k in value) {\n        if (!hasProp.call(value, k)) continue;\n        results.push(k);\n      }\n      return results;\n    })()).length === 0;\n  };\n\n  Utils.subStrCount = function(string, subString, start, length) {\n    var c, i, j, len, ref, sublen;\n    c = 0;\n    string = '' + string;\n    subString = '' + subString;\n    if (start != null) {\n      string = string.slice(start);\n    }\n    if (length != null) {\n      string = string.slice(0, length);\n    }\n    len = string.length;\n    sublen = subString.length;\n    for (i = j = 0, ref = len; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n      if (subString === string.slice(i, sublen)) {\n        c++;\n        i += sublen - 1;\n      }\n    }\n    return c;\n  };\n\n  Utils.isDigits = function(input) {\n    this.REGEX_DIGITS.lastIndex = 0;\n    return this.REGEX_DIGITS.test(input);\n  };\n\n  Utils.octDec = function(input) {\n    this.REGEX_OCTAL.lastIndex = 0;\n    return parseInt((input + '').replace(this.REGEX_OCTAL, ''), 8);\n  };\n\n  Utils.hexDec = function(input) {\n    this.REGEX_HEXADECIMAL.lastIndex = 0;\n    input = this.trim(input);\n    if ((input + '').slice(0, 2) === '0x') {\n      input = (input + '').slice(2);\n    }\n    return parseInt((input + '').replace(this.REGEX_HEXADECIMAL, ''), 16);\n  };\n\n  Utils.utf8chr = function(c) {\n    var ch;\n    ch = String.fromCharCode;\n    if (0x80 > (c %= 0x200000)) {\n      return ch(c);\n    }\n    if (0x800 > c) {\n      return ch(0xC0 | c >> 6) + ch(0x80 | c & 0x3F);\n    }\n    if (0x10000 > c) {\n      return ch(0xE0 | c >> 12) + ch(0x80 | c >> 6 & 0x3F) + ch(0x80 | c & 0x3F);\n    }\n    return ch(0xF0 | c >> 18) + ch(0x80 | c >> 12 & 0x3F) + ch(0x80 | c >> 6 & 0x3F) + ch(0x80 | c & 0x3F);\n  };\n\n  Utils.parseBoolean = function(input, strict) {\n    var lowerInput;\n    if (strict == null) {\n      strict = true;\n    }\n    if (typeof input === 'string') {\n      lowerInput = input.toLowerCase();\n      if (!strict) {\n        if (lowerInput === 'no') {\n          return false;\n        }\n      }\n      if (lowerInput === '0') {\n        return false;\n      }\n      if (lowerInput === 'false') {\n        return false;\n      }\n      if (lowerInput === '') {\n        return false;\n      }\n      return true;\n    }\n    return !!input;\n  };\n\n  Utils.isNumeric = function(input) {\n    this.REGEX_SPACES.lastIndex = 0;\n    return typeof input === 'number' || typeof input === 'string' && !isNaN(input) && input.replace(this.REGEX_SPACES, '') !== '';\n  };\n\n  Utils.stringToDate = function(str) {\n    var date, day, fraction, hour, info, minute, month, second, tz_hour, tz_minute, tz_offset, year;\n    if (!(str != null ? str.length : void 0)) {\n      return null;\n    }\n    info = this.PATTERN_DATE.exec(str);\n    if (!info) {\n      return null;\n    }\n    year = parseInt(info.year, 10);\n    month = parseInt(info.month, 10) - 1;\n    day = parseInt(info.day, 10);\n    if (info.hour == null) {\n      date = new Date(Date.UTC(year, month, day));\n      return date;\n    }\n    hour = parseInt(info.hour, 10);\n    minute = parseInt(info.minute, 10);\n    second = parseInt(info.second, 10);\n    if (info.fraction != null) {\n      fraction = info.fraction.slice(0, 3);\n      while (fraction.length < 3) {\n        fraction += '0';\n      }\n      fraction = parseInt(fraction, 10);\n    } else {\n      fraction = 0;\n    }\n    if (info.tz != null) {\n      tz_hour = parseInt(info.tz_hour, 10);\n      if (info.tz_minute != null) {\n        tz_minute = parseInt(info.tz_minute, 10);\n      } else {\n        tz_minute = 0;\n      }\n      tz_offset = (tz_hour * 60 + tz_minute) * 60000;\n      if ('-' === info.tz_sign) {\n        tz_offset *= -1;\n      }\n    }\n    date = new Date(Date.UTC(year, month, day, hour, minute, second, fraction));\n    if (tz_offset) {\n      date.setTime(date.getTime() - tz_offset);\n    }\n    return date;\n  };\n\n  Utils.strRepeat = function(str, number) {\n    var i, res;\n    res = '';\n    i = 0;\n    while (i < number) {\n      res += str;\n      i++;\n    }\n    return res;\n  };\n\n  Utils.getStringFromFile = function(path, callback) {\n    var data, fs, j, len1, name, ref, req, xhr;\n    if (callback == null) {\n      callback = null;\n    }\n    xhr = null;\n    if (typeof window !== \"undefined\" && window !== null) {\n      if (window.XMLHttpRequest) {\n        xhr = new XMLHttpRequest();\n      } else if (window.ActiveXObject) {\n        ref = [\"Msxml2.XMLHTTP.6.0\", \"Msxml2.XMLHTTP.3.0\", \"Msxml2.XMLHTTP\", \"Microsoft.XMLHTTP\"];\n        for (j = 0, len1 = ref.length; j < len1; j++) {\n          name = ref[j];\n          try {\n            xhr = new ActiveXObject(name);\n          } catch (error) {}\n        }\n      }\n    }\n    if (xhr != null) {\n      if (callback != null) {\n        xhr.onreadystatechange = function() {\n          if (xhr.readyState === 4) {\n            if (xhr.status === 200 || xhr.status === 0) {\n              return callback(xhr.responseText);\n            } else {\n              return callback(null);\n            }\n          }\n        };\n        xhr.open('GET', path, true);\n        return xhr.send(null);\n      } else {\n        xhr.open('GET', path, false);\n        xhr.send(null);\n        if (xhr.status === 200 || xhr.status === 0) {\n          return xhr.responseText;\n        }\n        return null;\n      }\n    } else {\n      req = require;\n      fs = req('fs');\n      if (callback != null) {\n        return fs.readFile(path, function(err, data) {\n          if (err) {\n            return callback(null);\n          } else {\n            return callback(String(data));\n          }\n        });\n      } else {\n        data = fs.readFileSync(path);\n        if (data != null) {\n          return String(data);\n        }\n        return null;\n      }\n    }\n  };\n\n  return Utils;\n\n})();\n\nmodule.exports = Utils;\n","// Generated by CoffeeScript 1.12.4\nvar Pattern, Unescaper, Utils;\n\nUtils = require('./Utils');\n\nPattern = require('./Pattern');\n\nUnescaper = (function() {\n  function Unescaper() {}\n\n  Unescaper.PATTERN_ESCAPED_CHARACTER = new Pattern('\\\\\\\\([0abt\\tnvfre \"\\\\/\\\\\\\\N_LP]|x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|U[0-9a-fA-F]{8})');\n\n  Unescaper.unescapeSingleQuotedString = function(value) {\n    return value.replace(/\\'\\'/g, '\\'');\n  };\n\n  Unescaper.unescapeDoubleQuotedString = function(value) {\n    if (this._unescapeCallback == null) {\n      this._unescapeCallback = (function(_this) {\n        return function(str) {\n          return _this.unescapeCharacter(str);\n        };\n      })(this);\n    }\n    return this.PATTERN_ESCAPED_CHARACTER.replace(value, this._unescapeCallback);\n  };\n\n  Unescaper.unescapeCharacter = function(value) {\n    var ch;\n    ch = String.fromCharCode;\n    switch (value.charAt(1)) {\n      case '0':\n        return ch(0);\n      case 'a':\n        return ch(7);\n      case 'b':\n        return ch(8);\n      case 't':\n        return \"\\t\";\n      case \"\\t\":\n        return \"\\t\";\n      case 'n':\n        return \"\\n\";\n      case 'v':\n        return ch(11);\n      case 'f':\n        return ch(12);\n      case 'r':\n        return ch(13);\n      case 'e':\n        return ch(27);\n      case ' ':\n        return ' ';\n      case '\"':\n        return '\"';\n      case '/':\n        return '/';\n      case '\\\\':\n        return '\\\\';\n      case 'N':\n        return ch(0x0085);\n      case '_':\n        return ch(0x00A0);\n      case 'L':\n        return ch(0x2028);\n      case 'P':\n        return ch(0x2029);\n      case 'x':\n        return Utils.utf8chr(Utils.hexDec(value.substr(2, 2)));\n      case 'u':\n        return Utils.utf8chr(Utils.hexDec(value.substr(2, 4)));\n      case 'U':\n        return Utils.utf8chr(Utils.hexDec(value.substr(2, 8)));\n      default:\n        return '';\n    }\n  };\n\n  return Unescaper;\n\n})();\n\nmodule.exports = Unescaper;\n","// Generated by CoffeeScript 1.12.4\nvar Escaper, Pattern;\n\nPattern = require('./Pattern');\n\nEscaper = (function() {\n  var ch;\n\n  function Escaper() {}\n\n  Escaper.LIST_ESCAPEES = ['\\\\', '\\\\\\\\', '\\\\\"', '\"', \"\\x00\", \"\\x01\", \"\\x02\", \"\\x03\", \"\\x04\", \"\\x05\", \"\\x06\", \"\\x07\", \"\\x08\", \"\\x09\", \"\\x0a\", \"\\x0b\", \"\\x0c\", \"\\x0d\", \"\\x0e\", \"\\x0f\", \"\\x10\", \"\\x11\", \"\\x12\", \"\\x13\", \"\\x14\", \"\\x15\", \"\\x16\", \"\\x17\", \"\\x18\", \"\\x19\", \"\\x1a\", \"\\x1b\", \"\\x1c\", \"\\x1d\", \"\\x1e\", \"\\x1f\", (ch = String.fromCharCode)(0x0085), ch(0x00A0), ch(0x2028), ch(0x2029)];\n\n  Escaper.LIST_ESCAPED = ['\\\\\\\\', '\\\\\"', '\\\\\"', '\\\\\"', \"\\\\0\", \"\\\\x01\", \"\\\\x02\", \"\\\\x03\", \"\\\\x04\", \"\\\\x05\", \"\\\\x06\", \"\\\\a\", \"\\\\b\", \"\\\\t\", \"\\\\n\", \"\\\\v\", \"\\\\f\", \"\\\\r\", \"\\\\x0e\", \"\\\\x0f\", \"\\\\x10\", \"\\\\x11\", \"\\\\x12\", \"\\\\x13\", \"\\\\x14\", \"\\\\x15\", \"\\\\x16\", \"\\\\x17\", \"\\\\x18\", \"\\\\x19\", \"\\\\x1a\", \"\\\\e\", \"\\\\x1c\", \"\\\\x1d\", \"\\\\x1e\", \"\\\\x1f\", \"\\\\N\", \"\\\\_\", \"\\\\L\", \"\\\\P\"];\n\n  Escaper.MAPPING_ESCAPEES_TO_ESCAPED = (function() {\n    var i, j, mapping, ref;\n    mapping = {};\n    for (i = j = 0, ref = Escaper.LIST_ESCAPEES.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n      mapping[Escaper.LIST_ESCAPEES[i]] = Escaper.LIST_ESCAPED[i];\n    }\n    return mapping;\n  })();\n\n  Escaper.PATTERN_CHARACTERS_TO_ESCAPE = new Pattern('[\\\\x00-\\\\x1f]|\\xc2\\x85|\\xc2\\xa0|\\xe2\\x80\\xa8|\\xe2\\x80\\xa9');\n\n  Escaper.PATTERN_MAPPING_ESCAPEES = new Pattern(Escaper.LIST_ESCAPEES.join('|').split('\\\\').join('\\\\\\\\'));\n\n  Escaper.PATTERN_SINGLE_QUOTING = new Pattern('[\\\\s\\'\":{}[\\\\],&*#?]|^[-?|<>=!%@`]');\n\n  Escaper.requiresDoubleQuoting = function(value) {\n    return this.PATTERN_CHARACTERS_TO_ESCAPE.test(value);\n  };\n\n  Escaper.escapeWithDoubleQuotes = function(value) {\n    var result;\n    result = this.PATTERN_MAPPING_ESCAPEES.replace(value, (function(_this) {\n      return function(str) {\n        return _this.MAPPING_ESCAPEES_TO_ESCAPED[str];\n      };\n    })(this));\n    return '\"' + result + '\"';\n  };\n\n  Escaper.requiresSingleQuoting = function(value) {\n    return this.PATTERN_SINGLE_QUOTING.test(value);\n  };\n\n  Escaper.escapeWithSingleQuotes = function(value) {\n    return \"'\" + value.replace(/'/g, \"''\") + \"'\";\n  };\n\n  return Escaper;\n\n})();\n\nmodule.exports = Escaper;\n","// Generated by CoffeeScript 1.12.4\nvar ParseException,\n  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;\n\nParseException = (function(superClass) {\n  extend(ParseException, superClass);\n\n  function ParseException(message, parsedLine, snippet) {\n    this.message = message;\n    this.parsedLine = parsedLine;\n    this.snippet = snippet;\n  }\n\n  ParseException.prototype.toString = function() {\n    if ((this.parsedLine != null) && (this.snippet != null)) {\n      return '<ParseException> ' + this.message + ' (line ' + this.parsedLine + ': \\'' + this.snippet + '\\')';\n    } else {\n      return '<ParseException> ' + this.message;\n    }\n  };\n\n  return ParseException;\n\n})(Error);\n\nmodule.exports = ParseException;\n","// Generated by CoffeeScript 1.12.4\nvar ParseMore,\n  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;\n\nParseMore = (function(superClass) {\n  extend(ParseMore, superClass);\n\n  function ParseMore(message, parsedLine, snippet) {\n    this.message = message;\n    this.parsedLine = parsedLine;\n    this.snippet = snippet;\n  }\n\n  ParseMore.prototype.toString = function() {\n    if ((this.parsedLine != null) && (this.snippet != null)) {\n      return '<ParseMore> ' + this.message + ' (line ' + this.parsedLine + ': \\'' + this.snippet + '\\')';\n    } else {\n      return '<ParseMore> ' + this.message;\n    }\n  };\n\n  return ParseMore;\n\n})(Error);\n\nmodule.exports = ParseMore;\n","// Generated by CoffeeScript 1.12.4\nvar DumpException,\n  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;\n\nDumpException = (function(superClass) {\n  extend(DumpException, superClass);\n\n  function DumpException(message, parsedLine, snippet) {\n    this.message = message;\n    this.parsedLine = parsedLine;\n    this.snippet = snippet;\n  }\n\n  DumpException.prototype.toString = function() {\n    if ((this.parsedLine != null) && (this.snippet != null)) {\n      return '<DumpException> ' + this.message + ' (line ' + this.parsedLine + ': \\'' + this.snippet + '\\')';\n    } else {\n      return '<DumpException> ' + this.message;\n    }\n  };\n\n  return DumpException;\n\n})(Error);\n\nmodule.exports = DumpException;\n","// Generated by CoffeeScript 1.12.4\nvar DumpException, Escaper, Inline, ParseException, ParseMore, Pattern, Unescaper, Utils,\n  indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };\n\nPattern = require('./Pattern');\n\nUnescaper = require('./Unescaper');\n\nEscaper = require('./Escaper');\n\nUtils = require('./Utils');\n\nParseException = require('./Exception/ParseException');\n\nParseMore = require('./Exception/ParseMore');\n\nDumpException = require('./Exception/DumpException');\n\nInline = (function() {\n  function Inline() {}\n\n  Inline.REGEX_QUOTED_STRING = '(?:\"(?:[^\"\\\\\\\\]*(?:\\\\\\\\.[^\"\\\\\\\\]*)*)\"|\\'(?:[^\\']*(?:\\'\\'[^\\']*)*)\\')';\n\n  Inline.PATTERN_TRAILING_COMMENTS = new Pattern('^\\\\s*#.*$');\n\n  Inline.PATTERN_QUOTED_SCALAR = new Pattern('^' + Inline.REGEX_QUOTED_STRING);\n\n  Inline.PATTERN_THOUSAND_NUMERIC_SCALAR = new Pattern('^(-|\\\\+)?[0-9,]+(\\\\.[0-9]+)?$');\n\n  Inline.PATTERN_SCALAR_BY_DELIMITERS = {};\n\n  Inline.settings = {};\n\n  Inline.configure = function(exceptionOnInvalidType, objectDecoder) {\n    if (exceptionOnInvalidType == null) {\n      exceptionOnInvalidType = null;\n    }\n    if (objectDecoder == null) {\n      objectDecoder = null;\n    }\n    this.settings.exceptionOnInvalidType = exceptionOnInvalidType;\n    this.settings.objectDecoder = objectDecoder;\n  };\n\n  Inline.parse = function(value, exceptionOnInvalidType, objectDecoder) {\n    var context, result;\n    if (exceptionOnInvalidType == null) {\n      exceptionOnInvalidType = false;\n    }\n    if (objectDecoder == null) {\n      objectDecoder = null;\n    }\n    this.settings.exceptionOnInvalidType = exceptionOnInvalidType;\n    this.settings.objectDecoder = objectDecoder;\n    if (value == null) {\n      return '';\n    }\n    value = Utils.trim(value);\n    if (0 === value.length) {\n      return '';\n    }\n    context = {\n      exceptionOnInvalidType: exceptionOnInvalidType,\n      objectDecoder: objectDecoder,\n      i: 0\n    };\n    switch (value.charAt(0)) {\n      case '[':\n        result = this.parseSequence(value, context);\n        ++context.i;\n        break;\n      case '{':\n        result = this.parseMapping(value, context);\n        ++context.i;\n        break;\n      default:\n        result = this.parseScalar(value, null, ['\"', \"'\"], context);\n    }\n    if (this.PATTERN_TRAILING_COMMENTS.replace(value.slice(context.i), '') !== '') {\n      throw new ParseException('Unexpected characters near \"' + value.slice(context.i) + '\".');\n    }\n    return result;\n  };\n\n  Inline.dump = function(value, exceptionOnInvalidType, objectEncoder) {\n    var ref, result, type;\n    if (exceptionOnInvalidType == null) {\n      exceptionOnInvalidType = false;\n    }\n    if (objectEncoder == null) {\n      objectEncoder = null;\n    }\n    if (value == null) {\n      return 'null';\n    }\n    type = typeof value;\n    if (type === 'object') {\n      if (value instanceof Date) {\n        return value.toISOString();\n      } else if (objectEncoder != null) {\n        result = objectEncoder(value);\n        if (typeof result === 'string' || (result != null)) {\n          return result;\n        }\n      }\n      return this.dumpObject(value);\n    }\n    if (type === 'boolean') {\n      return (value ? 'true' : 'false');\n    }\n    if (Utils.isDigits(value)) {\n      return (type === 'string' ? \"'\" + value + \"'\" : String(parseInt(value)));\n    }\n    if (Utils.isNumeric(value)) {\n      return (type === 'string' ? \"'\" + value + \"'\" : String(parseFloat(value)));\n    }\n    if (type === 'number') {\n      return (value === 2e308 ? '.Inf' : (value === -2e308 ? '-.Inf' : (isNaN(value) ? '.NaN' : value)));\n    }\n    if (Escaper.requiresDoubleQuoting(value)) {\n      return Escaper.escapeWithDoubleQuotes(value);\n    }\n    if (Escaper.requiresSingleQuoting(value)) {\n      return Escaper.escapeWithSingleQuotes(value);\n    }\n    if ('' === value) {\n      return '\"\"';\n    }\n    if (Utils.PATTERN_DATE.test(value)) {\n      return \"'\" + value + \"'\";\n    }\n    if ((ref = value.toLowerCase()) === 'null' || ref === '~' || ref === 'true' || ref === 'false') {\n      return \"'\" + value + \"'\";\n    }\n    return value;\n  };\n\n  Inline.dumpObject = function(value, exceptionOnInvalidType, objectSupport) {\n    var j, key, len1, output, val;\n    if (objectSupport == null) {\n      objectSupport = null;\n    }\n    if (value instanceof Array) {\n      output = [];\n      for (j = 0, len1 = value.length; j < len1; j++) {\n        val = value[j];\n        output.push(this.dump(val));\n      }\n      return '[' + output.join(', ') + ']';\n    } else {\n      output = [];\n      for (key in value) {\n        val = value[key];\n        output.push(this.dump(key) + ': ' + this.dump(val));\n      }\n      return '{' + output.join(', ') + '}';\n    }\n  };\n\n  Inline.parseScalar = function(scalar, delimiters, stringDelimiters, context, evaluate) {\n    var i, joinedDelimiters, match, output, pattern, ref, ref1, strpos, tmp;\n    if (delimiters == null) {\n      delimiters = null;\n    }\n    if (stringDelimiters == null) {\n      stringDelimiters = ['\"', \"'\"];\n    }\n    if (context == null) {\n      context = null;\n    }\n    if (evaluate == null) {\n      evaluate = true;\n    }\n    if (context == null) {\n      context = {\n        exceptionOnInvalidType: this.settings.exceptionOnInvalidType,\n        objectDecoder: this.settings.objectDecoder,\n        i: 0\n      };\n    }\n    i = context.i;\n    if (ref = scalar.charAt(i), indexOf.call(stringDelimiters, ref) >= 0) {\n      output = this.parseQuotedScalar(scalar, context);\n      i = context.i;\n      if (delimiters != null) {\n        tmp = Utils.ltrim(scalar.slice(i), ' ');\n        if (!(ref1 = tmp.charAt(0), indexOf.call(delimiters, ref1) >= 0)) {\n          throw new ParseException('Unexpected characters (' + scalar.slice(i) + ').');\n        }\n      }\n    } else {\n      if (!delimiters) {\n        output = scalar.slice(i);\n        i += output.length;\n        strpos = output.indexOf(' #');\n        if (strpos !== -1) {\n          output = Utils.rtrim(output.slice(0, strpos));\n        }\n      } else {\n        joinedDelimiters = delimiters.join('|');\n        pattern = this.PATTERN_SCALAR_BY_DELIMITERS[joinedDelimiters];\n        if (pattern == null) {\n          pattern = new Pattern('^(.+?)(' + joinedDelimiters + ')');\n          this.PATTERN_SCALAR_BY_DELIMITERS[joinedDelimiters] = pattern;\n        }\n        if (match = pattern.exec(scalar.slice(i))) {\n          output = match[1];\n          i += output.length;\n        } else {\n          throw new ParseException('Malformed inline YAML string (' + scalar + ').');\n        }\n      }\n      if (evaluate) {\n        output = this.evaluateScalar(output, context);\n      }\n    }\n    context.i = i;\n    return output;\n  };\n\n  Inline.parseQuotedScalar = function(scalar, context) {\n    var i, match, output;\n    i = context.i;\n    if (!(match = this.PATTERN_QUOTED_SCALAR.exec(scalar.slice(i)))) {\n      throw new ParseMore('Malformed inline YAML string (' + scalar.slice(i) + ').');\n    }\n    output = match[0].substr(1, match[0].length - 2);\n    if ('\"' === scalar.charAt(i)) {\n      output = Unescaper.unescapeDoubleQuotedString(output);\n    } else {\n      output = Unescaper.unescapeSingleQuotedString(output);\n    }\n    i += match[0].length;\n    context.i = i;\n    return output;\n  };\n\n  Inline.parseSequence = function(sequence, context) {\n    var e, i, isQuoted, len, output, ref, value;\n    output = [];\n    len = sequence.length;\n    i = context.i;\n    i += 1;\n    while (i < len) {\n      context.i = i;\n      switch (sequence.charAt(i)) {\n        case '[':\n          output.push(this.parseSequence(sequence, context));\n          i = context.i;\n          break;\n        case '{':\n          output.push(this.parseMapping(sequence, context));\n          i = context.i;\n          break;\n        case ']':\n          return output;\n        case ',':\n        case ' ':\n        case \"\\n\":\n          break;\n        default:\n          isQuoted = ((ref = sequence.charAt(i)) === '\"' || ref === \"'\");\n          value = this.parseScalar(sequence, [',', ']'], ['\"', \"'\"], context);\n          i = context.i;\n          if (!isQuoted && typeof value === 'string' && (value.indexOf(': ') !== -1 || value.indexOf(\":\\n\") !== -1)) {\n            try {\n              value = this.parseMapping('{' + value + '}');\n            } catch (error) {\n              e = error;\n            }\n          }\n          output.push(value);\n          --i;\n      }\n      ++i;\n    }\n    throw new ParseMore('Malformed inline YAML string ' + sequence);\n  };\n\n  Inline.parseMapping = function(mapping, context) {\n    var done, i, key, len, output, shouldContinueWhileLoop, value;\n    output = {};\n    len = mapping.length;\n    i = context.i;\n    i += 1;\n    shouldContinueWhileLoop = false;\n    while (i < len) {\n      context.i = i;\n      switch (mapping.charAt(i)) {\n        case ' ':\n        case ',':\n        case \"\\n\":\n          ++i;\n          context.i = i;\n          shouldContinueWhileLoop = true;\n          break;\n        case '}':\n          return output;\n      }\n      if (shouldContinueWhileLoop) {\n        shouldContinueWhileLoop = false;\n        continue;\n      }\n      key = this.parseScalar(mapping, [':', ' ', \"\\n\"], ['\"', \"'\"], context, false);\n      i = context.i;\n      done = false;\n      while (i < len) {\n        context.i = i;\n        switch (mapping.charAt(i)) {\n          case '[':\n            value = this.parseSequence(mapping, context);\n            i = context.i;\n            if (output[key] === void 0) {\n              output[key] = value;\n            }\n            done = true;\n            break;\n          case '{':\n            value = this.parseMapping(mapping, context);\n            i = context.i;\n            if (output[key] === void 0) {\n              output[key] = value;\n            }\n            done = true;\n            break;\n          case ':':\n          case ' ':\n          case \"\\n\":\n            break;\n          default:\n            value = this.parseScalar(mapping, [',', '}'], ['\"', \"'\"], context);\n            i = context.i;\n            if (output[key] === void 0) {\n              output[key] = value;\n            }\n            done = true;\n            --i;\n        }\n        ++i;\n        if (done) {\n          break;\n        }\n      }\n    }\n    throw new ParseMore('Malformed inline YAML string ' + mapping);\n  };\n\n  Inline.evaluateScalar = function(scalar, context) {\n    var cast, date, exceptionOnInvalidType, firstChar, firstSpace, firstWord, objectDecoder, raw, scalarLower, subValue, trimmedScalar;\n    scalar = Utils.trim(scalar);\n    scalarLower = scalar.toLowerCase();\n    switch (scalarLower) {\n      case 'null':\n      case '':\n      case '~':\n        return null;\n      case 'true':\n        return true;\n      case 'false':\n        return false;\n      case '.inf':\n        return 2e308;\n      case '.nan':\n        return 0/0;\n      case '-.inf':\n        return 2e308;\n      default:\n        firstChar = scalarLower.charAt(0);\n        switch (firstChar) {\n          case '!':\n            firstSpace = scalar.indexOf(' ');\n            if (firstSpace === -1) {\n              firstWord = scalarLower;\n            } else {\n              firstWord = scalarLower.slice(0, firstSpace);\n            }\n            switch (firstWord) {\n              case '!':\n                if (firstSpace !== -1) {\n                  return parseInt(this.parseScalar(scalar.slice(2)));\n                }\n                return null;\n              case '!str':\n                return Utils.ltrim(scalar.slice(4));\n              case '!!str':\n                return Utils.ltrim(scalar.slice(5));\n              case '!!int':\n                return parseInt(this.parseScalar(scalar.slice(5)));\n              case '!!bool':\n                return Utils.parseBoolean(this.parseScalar(scalar.slice(6)), false);\n              case '!!float':\n                return parseFloat(this.parseScalar(scalar.slice(7)));\n              case '!!timestamp':\n                return Utils.stringToDate(Utils.ltrim(scalar.slice(11)));\n              default:\n                if (context == null) {\n                  context = {\n                    exceptionOnInvalidType: this.settings.exceptionOnInvalidType,\n                    objectDecoder: this.settings.objectDecoder,\n                    i: 0\n                  };\n                }\n                objectDecoder = context.objectDecoder, exceptionOnInvalidType = context.exceptionOnInvalidType;\n                if (objectDecoder) {\n                  trimmedScalar = Utils.rtrim(scalar);\n                  firstSpace = trimmedScalar.indexOf(' ');\n                  if (firstSpace === -1) {\n                    return objectDecoder(trimmedScalar, null);\n                  } else {\n                    subValue = Utils.ltrim(trimmedScalar.slice(firstSpace + 1));\n                    if (!(subValue.length > 0)) {\n                      subValue = null;\n                    }\n                    return objectDecoder(trimmedScalar.slice(0, firstSpace), subValue);\n                  }\n                }\n                if (exceptionOnInvalidType) {\n                  throw new ParseException('Custom object support when parsing a YAML file has been disabled.');\n                }\n                return null;\n            }\n            break;\n          case '0':\n            if ('0x' === scalar.slice(0, 2)) {\n              return Utils.hexDec(scalar);\n            } else if (Utils.isDigits(scalar)) {\n              return Utils.octDec(scalar);\n            } else if (Utils.isNumeric(scalar)) {\n              return parseFloat(scalar);\n            } else {\n              return scalar;\n            }\n            break;\n          case '+':\n            if (Utils.isDigits(scalar)) {\n              raw = scalar;\n              cast = parseInt(raw);\n              if (raw === String(cast)) {\n                return cast;\n              } else {\n                return raw;\n              }\n            } else if (Utils.isNumeric(scalar)) {\n              return parseFloat(scalar);\n            } else if (this.PATTERN_THOUSAND_NUMERIC_SCALAR.test(scalar)) {\n              return parseFloat(scalar.replace(',', ''));\n            }\n            return scalar;\n          case '-':\n            if (Utils.isDigits(scalar.slice(1))) {\n              if ('0' === scalar.charAt(1)) {\n                return -Utils.octDec(scalar.slice(1));\n              } else {\n                raw = scalar.slice(1);\n                cast = parseInt(raw);\n                if (raw === String(cast)) {\n                  return -cast;\n                } else {\n                  return -raw;\n                }\n              }\n            } else if (Utils.isNumeric(scalar)) {\n              return parseFloat(scalar);\n            } else if (this.PATTERN_THOUSAND_NUMERIC_SCALAR.test(scalar)) {\n              return parseFloat(scalar.replace(',', ''));\n            }\n            return scalar;\n          default:\n            if (date = Utils.stringToDate(scalar)) {\n              return date;\n            } else if (Utils.isNumeric(scalar)) {\n              return parseFloat(scalar);\n            } else if (this.PATTERN_THOUSAND_NUMERIC_SCALAR.test(scalar)) {\n              return parseFloat(scalar.replace(',', ''));\n            }\n            return scalar;\n        }\n    }\n  };\n\n  return Inline;\n\n})();\n\nmodule.exports = Inline;\n","// Generated by CoffeeScript 1.12.4\nvar Inline, ParseException, ParseMore, Parser, Pattern, Utils;\n\nInline = require('./Inline');\n\nPattern = require('./Pattern');\n\nUtils = require('./Utils');\n\nParseException = require('./Exception/ParseException');\n\nParseMore = require('./Exception/ParseMore');\n\nParser = (function() {\n  Parser.prototype.PATTERN_FOLDED_SCALAR_ALL = new Pattern('^(?:(?<type>![^\\\\|>]*)\\\\s+)?(?<separator>\\\\||>)(?<modifiers>\\\\+|\\\\-|\\\\d+|\\\\+\\\\d+|\\\\-\\\\d+|\\\\d+\\\\+|\\\\d+\\\\-)?(?<comments> +#.*)?$');\n\n  Parser.prototype.PATTERN_FOLDED_SCALAR_END = new Pattern('(?<separator>\\\\||>)(?<modifiers>\\\\+|\\\\-|\\\\d+|\\\\+\\\\d+|\\\\-\\\\d+|\\\\d+\\\\+|\\\\d+\\\\-)?(?<comments> +#.*)?$');\n\n  Parser.prototype.PATTERN_SEQUENCE_ITEM = new Pattern('^\\\\-((?<leadspaces>\\\\s+)(?<value>.+?))?\\\\s*$');\n\n  Parser.prototype.PATTERN_ANCHOR_VALUE = new Pattern('^&(?<ref>[^ ]+) *(?<value>.*)');\n\n  Parser.prototype.PATTERN_COMPACT_NOTATION = new Pattern('^(?<key>' + Inline.REGEX_QUOTED_STRING + '|[^ \\'\"\\\\{\\\\[].*?) *\\\\:(\\\\s+(?<value>.+?))?\\\\s*$');\n\n  Parser.prototype.PATTERN_MAPPING_ITEM = new Pattern('^(?<key>' + Inline.REGEX_QUOTED_STRING + '|[^ \\'\"\\\\[\\\\{].*?) *\\\\:(\\\\s+(?<value>.+?))?\\\\s*$');\n\n  Parser.prototype.PATTERN_DECIMAL = new Pattern('\\\\d+');\n\n  Parser.prototype.PATTERN_INDENT_SPACES = new Pattern('^ +');\n\n  Parser.prototype.PATTERN_TRAILING_LINES = new Pattern('(\\n*)$');\n\n  Parser.prototype.PATTERN_YAML_HEADER = new Pattern('^\\\\%YAML[: ][\\\\d\\\\.]+.*\\n', 'm');\n\n  Parser.prototype.PATTERN_LEADING_COMMENTS = new Pattern('^(\\\\#.*?\\n)+', 'm');\n\n  Parser.prototype.PATTERN_DOCUMENT_MARKER_START = new Pattern('^\\\\-\\\\-\\\\-.*?\\n', 'm');\n\n  Parser.prototype.PATTERN_DOCUMENT_MARKER_END = new Pattern('^\\\\.\\\\.\\\\.\\\\s*$', 'm');\n\n  Parser.prototype.PATTERN_FOLDED_SCALAR_BY_INDENTATION = {};\n\n  Parser.prototype.CONTEXT_NONE = 0;\n\n  Parser.prototype.CONTEXT_SEQUENCE = 1;\n\n  Parser.prototype.CONTEXT_MAPPING = 2;\n\n  function Parser(offset) {\n    this.offset = offset != null ? offset : 0;\n    this.lines = [];\n    this.currentLineNb = -1;\n    this.currentLine = '';\n    this.refs = {};\n  }\n\n  Parser.prototype.parse = function(value, exceptionOnInvalidType, objectDecoder) {\n    var alias, allowOverwrite, block, c, context, data, e, first, i, indent, isRef, j, k, key, l, lastKey, len, len1, len2, len3, lineCount, m, matches, mergeNode, n, name, parsed, parsedItem, parser, ref, ref1, ref2, refName, refValue, val, values;\n    if (exceptionOnInvalidType == null) {\n      exceptionOnInvalidType = false;\n    }\n    if (objectDecoder == null) {\n      objectDecoder = null;\n    }\n    this.currentLineNb = -1;\n    this.currentLine = '';\n    this.lines = this.cleanup(value).split(\"\\n\");\n    data = null;\n    context = this.CONTEXT_NONE;\n    allowOverwrite = false;\n    while (this.moveToNextLine()) {\n      if (this.isCurrentLineEmpty()) {\n        continue;\n      }\n      if (\"\\t\" === this.currentLine[0]) {\n        throw new ParseException('A YAML file cannot contain tabs as indentation.', this.getRealCurrentLineNb() + 1, this.currentLine);\n      }\n      isRef = mergeNode = false;\n      if (values = this.PATTERN_SEQUENCE_ITEM.exec(this.currentLine)) {\n        if (this.CONTEXT_MAPPING === context) {\n          throw new ParseException('You cannot define a sequence item when in a mapping');\n        }\n        context = this.CONTEXT_SEQUENCE;\n        if (data == null) {\n          data = [];\n        }\n        if ((values.value != null) && (matches = this.PATTERN_ANCHOR_VALUE.exec(values.value))) {\n          isRef = matches.ref;\n          values.value = matches.value;\n        }\n        if (!(values.value != null) || '' === Utils.trim(values.value, ' ') || Utils.ltrim(values.value, ' ').indexOf('#') === 0) {\n          if (this.currentLineNb < this.lines.length - 1 && !this.isNextLineUnIndentedCollection()) {\n            c = this.getRealCurrentLineNb() + 1;\n            parser = new Parser(c);\n            parser.refs = this.refs;\n            data.push(parser.parse(this.getNextEmbedBlock(null, true), exceptionOnInvalidType, objectDecoder));\n          } else {\n            data.push(null);\n          }\n        } else {\n          if (((ref = values.leadspaces) != null ? ref.length : void 0) && (matches = this.PATTERN_COMPACT_NOTATION.exec(values.value))) {\n            c = this.getRealCurrentLineNb();\n            parser = new Parser(c);\n            parser.refs = this.refs;\n            block = values.value;\n            indent = this.getCurrentLineIndentation();\n            if (this.isNextLineIndented(false)) {\n              block += \"\\n\" + this.getNextEmbedBlock(indent + values.leadspaces.length + 1, true);\n            }\n            data.push(parser.parse(block, exceptionOnInvalidType, objectDecoder));\n          } else {\n            data.push(this.parseValue(values.value, exceptionOnInvalidType, objectDecoder));\n          }\n        }\n      } else if ((values = this.PATTERN_MAPPING_ITEM.exec(this.currentLine)) && values.key.indexOf(' #') === -1) {\n        if (this.CONTEXT_SEQUENCE === context) {\n          throw new ParseException('You cannot define a mapping item when in a sequence');\n        }\n        context = this.CONTEXT_MAPPING;\n        if (data == null) {\n          data = {};\n        }\n        Inline.configure(exceptionOnInvalidType, objectDecoder);\n        try {\n          key = Inline.parseScalar(values.key);\n        } catch (error) {\n          e = error;\n          e.parsedLine = this.getRealCurrentLineNb() + 1;\n          e.snippet = this.currentLine;\n          throw e;\n        }\n        if ('<<' === key) {\n          mergeNode = true;\n          allowOverwrite = true;\n          if (((ref1 = values.value) != null ? ref1.indexOf('*') : void 0) === 0) {\n            refName = values.value.slice(1);\n            if (this.refs[refName] == null) {\n              throw new ParseException('Reference \"' + refName + '\" does not exist.', this.getRealCurrentLineNb() + 1, this.currentLine);\n            }\n            refValue = this.refs[refName];\n            if (typeof refValue !== 'object') {\n              throw new ParseException('YAML merge keys used with a scalar value instead of an object.', this.getRealCurrentLineNb() + 1, this.currentLine);\n            }\n            if (refValue instanceof Array) {\n              for (i = j = 0, len = refValue.length; j < len; i = ++j) {\n                value = refValue[i];\n                if (data[name = String(i)] == null) {\n                  data[name] = value;\n                }\n              }\n            } else {\n              for (key in refValue) {\n                value = refValue[key];\n                if (data[key] == null) {\n                  data[key] = value;\n                }\n              }\n            }\n          } else {\n            if ((values.value != null) && values.value !== '') {\n              value = values.value;\n            } else {\n              value = this.getNextEmbedBlock();\n            }\n            c = this.getRealCurrentLineNb() + 1;\n            parser = new Parser(c);\n            parser.refs = this.refs;\n            parsed = parser.parse(value, exceptionOnInvalidType);\n            if (typeof parsed !== 'object') {\n              throw new ParseException('YAML merge keys used with a scalar value instead of an object.', this.getRealCurrentLineNb() + 1, this.currentLine);\n            }\n            if (parsed instanceof Array) {\n              for (l = 0, len1 = parsed.length; l < len1; l++) {\n                parsedItem = parsed[l];\n                if (typeof parsedItem !== 'object') {\n                  throw new ParseException('Merge items must be objects.', this.getRealCurrentLineNb() + 1, parsedItem);\n                }\n                if (parsedItem instanceof Array) {\n                  for (i = m = 0, len2 = parsedItem.length; m < len2; i = ++m) {\n                    value = parsedItem[i];\n                    k = String(i);\n                    if (!data.hasOwnProperty(k)) {\n                      data[k] = value;\n                    }\n                  }\n                } else {\n                  for (key in parsedItem) {\n                    value = parsedItem[key];\n                    if (!data.hasOwnProperty(key)) {\n                      data[key] = value;\n                    }\n                  }\n                }\n              }\n            } else {\n              for (key in parsed) {\n                value = parsed[key];\n                if (!data.hasOwnProperty(key)) {\n                  data[key] = value;\n                }\n              }\n            }\n          }\n        } else if ((values.value != null) && (matches = this.PATTERN_ANCHOR_VALUE.exec(values.value))) {\n          isRef = matches.ref;\n          values.value = matches.value;\n        }\n        if (mergeNode) {\n\n        } else if (!(values.value != null) || '' === Utils.trim(values.value, ' ') || Utils.ltrim(values.value, ' ').indexOf('#') === 0) {\n          if (!(this.isNextLineIndented()) && !(this.isNextLineUnIndentedCollection())) {\n            if (allowOverwrite || data[key] === void 0) {\n              data[key] = null;\n            }\n          } else {\n            c = this.getRealCurrentLineNb() + 1;\n            parser = new Parser(c);\n            parser.refs = this.refs;\n            val = parser.parse(this.getNextEmbedBlock(), exceptionOnInvalidType, objectDecoder);\n            if (allowOverwrite || data[key] === void 0) {\n              data[key] = val;\n            }\n          }\n        } else {\n          val = this.parseValue(values.value, exceptionOnInvalidType, objectDecoder);\n          if (allowOverwrite || data[key] === void 0) {\n            data[key] = val;\n          }\n        }\n      } else {\n        lineCount = this.lines.length;\n        if (1 === lineCount || (2 === lineCount && Utils.isEmpty(this.lines[1]))) {\n          try {\n            value = Inline.parse(this.lines[0], exceptionOnInvalidType, objectDecoder);\n          } catch (error) {\n            e = error;\n            e.parsedLine = this.getRealCurrentLineNb() + 1;\n            e.snippet = this.currentLine;\n            throw e;\n          }\n          if (typeof value === 'object') {\n            if (value instanceof Array) {\n              first = value[0];\n            } else {\n              for (key in value) {\n                first = value[key];\n                break;\n              }\n            }\n            if (typeof first === 'string' && first.indexOf('*') === 0) {\n              data = [];\n              for (n = 0, len3 = value.length; n < len3; n++) {\n                alias = value[n];\n                data.push(this.refs[alias.slice(1)]);\n              }\n              value = data;\n            }\n          }\n          return value;\n        } else if ((ref2 = Utils.ltrim(value).charAt(0)) === '[' || ref2 === '{') {\n          try {\n            return Inline.parse(value, exceptionOnInvalidType, objectDecoder);\n          } catch (error) {\n            e = error;\n            e.parsedLine = this.getRealCurrentLineNb() + 1;\n            e.snippet = this.currentLine;\n            throw e;\n          }\n        }\n        throw new ParseException('Unable to parse.', this.getRealCurrentLineNb() + 1, this.currentLine);\n      }\n      if (isRef) {\n        if (data instanceof Array) {\n          this.refs[isRef] = data[data.length - 1];\n        } else {\n          lastKey = null;\n          for (key in data) {\n            lastKey = key;\n          }\n          this.refs[isRef] = data[lastKey];\n        }\n      }\n    }\n    if (Utils.isEmpty(data)) {\n      return null;\n    } else {\n      return data;\n    }\n  };\n\n  Parser.prototype.getRealCurrentLineNb = function() {\n    return this.currentLineNb + this.offset;\n  };\n\n  Parser.prototype.getCurrentLineIndentation = function() {\n    return this.currentLine.length - Utils.ltrim(this.currentLine, ' ').length;\n  };\n\n  Parser.prototype.getNextEmbedBlock = function(indentation, includeUnindentedCollection) {\n    var data, indent, isItUnindentedCollection, newIndent, removeComments, removeCommentsPattern, unindentedEmbedBlock;\n    if (indentation == null) {\n      indentation = null;\n    }\n    if (includeUnindentedCollection == null) {\n      includeUnindentedCollection = false;\n    }\n    this.moveToNextLine();\n    if (indentation == null) {\n      newIndent = this.getCurrentLineIndentation();\n      unindentedEmbedBlock = this.isStringUnIndentedCollectionItem(this.currentLine);\n      if (!(this.isCurrentLineEmpty()) && 0 === newIndent && !unindentedEmbedBlock) {\n        throw new ParseException('Indentation problem.', this.getRealCurrentLineNb() + 1, this.currentLine);\n      }\n    } else {\n      newIndent = indentation;\n    }\n    data = [this.currentLine.slice(newIndent)];\n    if (!includeUnindentedCollection) {\n      isItUnindentedCollection = this.isStringUnIndentedCollectionItem(this.currentLine);\n    }\n    removeCommentsPattern = this.PATTERN_FOLDED_SCALAR_END;\n    removeComments = !removeCommentsPattern.test(this.currentLine);\n    while (this.moveToNextLine()) {\n      indent = this.getCurrentLineIndentation();\n      if (indent === newIndent) {\n        removeComments = !removeCommentsPattern.test(this.currentLine);\n      }\n      if (removeComments && this.isCurrentLineComment()) {\n        continue;\n      }\n      if (this.isCurrentLineBlank()) {\n        data.push(this.currentLine.slice(newIndent));\n        continue;\n      }\n      if (isItUnindentedCollection && !this.isStringUnIndentedCollectionItem(this.currentLine) && indent === newIndent) {\n        this.moveToPreviousLine();\n        break;\n      }\n      if (indent >= newIndent) {\n        data.push(this.currentLine.slice(newIndent));\n      } else if (Utils.ltrim(this.currentLine).charAt(0) === '#') {\n\n      } else if (0 === indent) {\n        this.moveToPreviousLine();\n        break;\n      } else {\n        throw new ParseException('Indentation problem.', this.getRealCurrentLineNb() + 1, this.currentLine);\n      }\n    }\n    return data.join(\"\\n\");\n  };\n\n  Parser.prototype.moveToNextLine = function() {\n    if (this.currentLineNb >= this.lines.length - 1) {\n      return false;\n    }\n    this.currentLine = this.lines[++this.currentLineNb];\n    return true;\n  };\n\n  Parser.prototype.moveToPreviousLine = function() {\n    this.currentLine = this.lines[--this.currentLineNb];\n  };\n\n  Parser.prototype.parseValue = function(value, exceptionOnInvalidType, objectDecoder) {\n    var e, foldedIndent, matches, modifiers, pos, ref, ref1, val;\n    if (0 === value.indexOf('*')) {\n      pos = value.indexOf('#');\n      if (pos !== -1) {\n        value = value.substr(1, pos - 2);\n      } else {\n        value = value.slice(1);\n      }\n      if (this.refs[value] === void 0) {\n        throw new ParseException('Reference \"' + value + '\" does not exist.', this.currentLine);\n      }\n      return this.refs[value];\n    }\n    if (matches = this.PATTERN_FOLDED_SCALAR_ALL.exec(value)) {\n      modifiers = (ref = matches.modifiers) != null ? ref : '';\n      foldedIndent = Math.abs(parseInt(modifiers));\n      if (isNaN(foldedIndent)) {\n        foldedIndent = 0;\n      }\n      val = this.parseFoldedScalar(matches.separator, this.PATTERN_DECIMAL.replace(modifiers, ''), foldedIndent);\n      if (matches.type != null) {\n        Inline.configure(exceptionOnInvalidType, objectDecoder);\n        return Inline.parseScalar(matches.type + ' ' + val);\n      } else {\n        return val;\n      }\n    }\n    if ((ref1 = value.charAt(0)) === '[' || ref1 === '{' || ref1 === '\"' || ref1 === \"'\") {\n      while (true) {\n        try {\n          return Inline.parse(value, exceptionOnInvalidType, objectDecoder);\n        } catch (error) {\n          e = error;\n          if (e instanceof ParseMore && this.moveToNextLine()) {\n            value += \"\\n\" + Utils.trim(this.currentLine, ' ');\n          } else {\n            e.parsedLine = this.getRealCurrentLineNb() + 1;\n            e.snippet = this.currentLine;\n            throw e;\n          }\n        }\n      }\n    } else {\n      if (this.isNextLineIndented()) {\n        value += \"\\n\" + this.getNextEmbedBlock();\n      }\n      return Inline.parse(value, exceptionOnInvalidType, objectDecoder);\n    }\n  };\n\n  Parser.prototype.parseFoldedScalar = function(separator, indicator, indentation) {\n    var isCurrentLineBlank, j, len, line, matches, newText, notEOF, pattern, ref, text;\n    if (indicator == null) {\n      indicator = '';\n    }\n    if (indentation == null) {\n      indentation = 0;\n    }\n    notEOF = this.moveToNextLine();\n    if (!notEOF) {\n      return '';\n    }\n    isCurrentLineBlank = this.isCurrentLineBlank();\n    text = '';\n    while (notEOF && isCurrentLineBlank) {\n      if (notEOF = this.moveToNextLine()) {\n        text += \"\\n\";\n        isCurrentLineBlank = this.isCurrentLineBlank();\n      }\n    }\n    if (0 === indentation) {\n      if (matches = this.PATTERN_INDENT_SPACES.exec(this.currentLine)) {\n        indentation = matches[0].length;\n      }\n    }\n    if (indentation > 0) {\n      pattern = this.PATTERN_FOLDED_SCALAR_BY_INDENTATION[indentation];\n      if (pattern == null) {\n        pattern = new Pattern('^ {' + indentation + '}(.*)$');\n        Parser.prototype.PATTERN_FOLDED_SCALAR_BY_INDENTATION[indentation] = pattern;\n      }\n      while (notEOF && (isCurrentLineBlank || (matches = pattern.exec(this.currentLine)))) {\n        if (isCurrentLineBlank) {\n          text += this.currentLine.slice(indentation);\n        } else {\n          text += matches[1];\n        }\n        if (notEOF = this.moveToNextLine()) {\n          text += \"\\n\";\n          isCurrentLineBlank = this.isCurrentLineBlank();\n        }\n      }\n    } else if (notEOF) {\n      text += \"\\n\";\n    }\n    if (notEOF) {\n      this.moveToPreviousLine();\n    }\n    if ('>' === separator) {\n      newText = '';\n      ref = text.split(\"\\n\");\n      for (j = 0, len = ref.length; j < len; j++) {\n        line = ref[j];\n        if (line.length === 0 || line.charAt(0) === ' ') {\n          newText = Utils.rtrim(newText, ' ') + line + \"\\n\";\n        } else {\n          newText += line + ' ';\n        }\n      }\n      text = newText;\n    }\n    if ('+' !== indicator) {\n      text = Utils.rtrim(text);\n    }\n    if ('' === indicator) {\n      text = this.PATTERN_TRAILING_LINES.replace(text, \"\\n\");\n    } else if ('-' === indicator) {\n      text = this.PATTERN_TRAILING_LINES.replace(text, '');\n    }\n    return text;\n  };\n\n  Parser.prototype.isNextLineIndented = function(ignoreComments) {\n    var EOF, currentIndentation, ret;\n    if (ignoreComments == null) {\n      ignoreComments = true;\n    }\n    currentIndentation = this.getCurrentLineIndentation();\n    EOF = !this.moveToNextLine();\n    if (ignoreComments) {\n      while (!EOF && this.isCurrentLineEmpty()) {\n        EOF = !this.moveToNextLine();\n      }\n    } else {\n      while (!EOF && this.isCurrentLineBlank()) {\n        EOF = !this.moveToNextLine();\n      }\n    }\n    if (EOF) {\n      return false;\n    }\n    ret = false;\n    if (this.getCurrentLineIndentation() > currentIndentation) {\n      ret = true;\n    }\n    this.moveToPreviousLine();\n    return ret;\n  };\n\n  Parser.prototype.isCurrentLineEmpty = function() {\n    var trimmedLine;\n    trimmedLine = Utils.trim(this.currentLine, ' ');\n    return trimmedLine.length === 0 || trimmedLine.charAt(0) === '#';\n  };\n\n  Parser.prototype.isCurrentLineBlank = function() {\n    return '' === Utils.trim(this.currentLine, ' ');\n  };\n\n  Parser.prototype.isCurrentLineComment = function() {\n    var ltrimmedLine;\n    ltrimmedLine = Utils.ltrim(this.currentLine, ' ');\n    return ltrimmedLine.charAt(0) === '#';\n  };\n\n  Parser.prototype.cleanup = function(value) {\n    var count, i, indent, j, l, len, len1, line, lines, ref, ref1, ref2, smallestIndent, trimmedValue;\n    if (value.indexOf(\"\\r\") !== -1) {\n      value = value.split(\"\\r\\n\").join(\"\\n\").split(\"\\r\").join(\"\\n\");\n    }\n    count = 0;\n    ref = this.PATTERN_YAML_HEADER.replaceAll(value, ''), value = ref[0], count = ref[1];\n    this.offset += count;\n    ref1 = this.PATTERN_LEADING_COMMENTS.replaceAll(value, '', 1), trimmedValue = ref1[0], count = ref1[1];\n    if (count === 1) {\n      this.offset += Utils.subStrCount(value, \"\\n\") - Utils.subStrCount(trimmedValue, \"\\n\");\n      value = trimmedValue;\n    }\n    ref2 = this.PATTERN_DOCUMENT_MARKER_START.replaceAll(value, '', 1), trimmedValue = ref2[0], count = ref2[1];\n    if (count === 1) {\n      this.offset += Utils.subStrCount(value, \"\\n\") - Utils.subStrCount(trimmedValue, \"\\n\");\n      value = trimmedValue;\n      value = this.PATTERN_DOCUMENT_MARKER_END.replace(value, '');\n    }\n    lines = value.split(\"\\n\");\n    smallestIndent = -1;\n    for (j = 0, len = lines.length; j < len; j++) {\n      line = lines[j];\n      if (Utils.trim(line, ' ').length === 0) {\n        continue;\n      }\n      indent = line.length - Utils.ltrim(line).length;\n      if (smallestIndent === -1 || indent < smallestIndent) {\n        smallestIndent = indent;\n      }\n    }\n    if (smallestIndent > 0) {\n      for (i = l = 0, len1 = lines.length; l < len1; i = ++l) {\n        line = lines[i];\n        lines[i] = line.slice(smallestIndent);\n      }\n      value = lines.join(\"\\n\");\n    }\n    return value;\n  };\n\n  Parser.prototype.isNextLineUnIndentedCollection = function(currentIndentation) {\n    var notEOF, ret;\n    if (currentIndentation == null) {\n      currentIndentation = null;\n    }\n    if (currentIndentation == null) {\n      currentIndentation = this.getCurrentLineIndentation();\n    }\n    notEOF = this.moveToNextLine();\n    while (notEOF && this.isCurrentLineEmpty()) {\n      notEOF = this.moveToNextLine();\n    }\n    if (false === notEOF) {\n      return false;\n    }\n    ret = false;\n    if (this.getCurrentLineIndentation() === currentIndentation && this.isStringUnIndentedCollectionItem(this.currentLine)) {\n      ret = true;\n    }\n    this.moveToPreviousLine();\n    return ret;\n  };\n\n  Parser.prototype.isStringUnIndentedCollectionItem = function() {\n    return this.currentLine === '-' || this.currentLine.slice(0, 2) === '- ';\n  };\n\n  return Parser;\n\n})();\n\nmodule.exports = Parser;\n","// Generated by CoffeeScript 1.12.4\nvar Dumper, Inline, Utils;\n\nUtils = require('./Utils');\n\nInline = require('./Inline');\n\nDumper = (function() {\n  function Dumper() {}\n\n  Dumper.indentation = 4;\n\n  Dumper.prototype.dump = function(input, inline, indent, exceptionOnInvalidType, objectEncoder) {\n    var i, key, len, output, prefix, value, willBeInlined;\n    if (inline == null) {\n      inline = 0;\n    }\n    if (indent == null) {\n      indent = 0;\n    }\n    if (exceptionOnInvalidType == null) {\n      exceptionOnInvalidType = false;\n    }\n    if (objectEncoder == null) {\n      objectEncoder = null;\n    }\n    output = '';\n    prefix = (indent ? Utils.strRepeat(' ', indent) : '');\n    if (inline <= 0 || typeof input !== 'object' || input instanceof Date || Utils.isEmpty(input)) {\n      output += prefix + Inline.dump(input, exceptionOnInvalidType, objectEncoder);\n    } else {\n      if (input instanceof Array) {\n        for (i = 0, len = input.length; i < len; i++) {\n          value = input[i];\n          willBeInlined = inline - 1 <= 0 || typeof value !== 'object' || Utils.isEmpty(value);\n          output += prefix + '-' + (willBeInlined ? ' ' : \"\\n\") + this.dump(value, inline - 1, (willBeInlined ? 0 : indent + this.indentation), exceptionOnInvalidType, objectEncoder) + (willBeInlined ? \"\\n\" : '');\n        }\n      } else {\n        for (key in input) {\n          value = input[key];\n          willBeInlined = inline - 1 <= 0 || typeof value !== 'object' || Utils.isEmpty(value);\n          output += prefix + Inline.dump(key, exceptionOnInvalidType, objectEncoder) + ':' + (willBeInlined ? ' ' : \"\\n\") + this.dump(value, inline - 1, (willBeInlined ? 0 : indent + this.indentation), exceptionOnInvalidType, objectEncoder) + (willBeInlined ? \"\\n\" : '');\n        }\n      }\n    }\n    return output;\n  };\n\n  return Dumper;\n\n})();\n\nmodule.exports = Dumper;\n","// Generated by CoffeeScript 1.12.4\nvar Dumper, Parser, Utils, Yaml;\n\nParser = require('./Parser');\n\nDumper = require('./Dumper');\n\nUtils = require('./Utils');\n\nYaml = (function() {\n  function Yaml() {}\n\n  Yaml.parse = function(input, exceptionOnInvalidType, objectDecoder) {\n    if (exceptionOnInvalidType == null) {\n      exceptionOnInvalidType = false;\n    }\n    if (objectDecoder == null) {\n      objectDecoder = null;\n    }\n    return new Parser().parse(input, exceptionOnInvalidType, objectDecoder);\n  };\n\n  Yaml.parseFile = function(path, callback, exceptionOnInvalidType, objectDecoder) {\n    var input;\n    if (callback == null) {\n      callback = null;\n    }\n    if (exceptionOnInvalidType == null) {\n      exceptionOnInvalidType = false;\n    }\n    if (objectDecoder == null) {\n      objectDecoder = null;\n    }\n    if (callback != null) {\n      return Utils.getStringFromFile(path, (function(_this) {\n        return function(input) {\n          var result;\n          result = null;\n          if (input != null) {\n            result = _this.parse(input, exceptionOnInvalidType, objectDecoder);\n          }\n          callback(result);\n        };\n      })(this));\n    } else {\n      input = Utils.getStringFromFile(path);\n      if (input != null) {\n        return this.parse(input, exceptionOnInvalidType, objectDecoder);\n      }\n      return null;\n    }\n  };\n\n  Yaml.dump = function(input, inline, indent, exceptionOnInvalidType, objectEncoder) {\n    var yaml;\n    if (inline == null) {\n      inline = 2;\n    }\n    if (indent == null) {\n      indent = 4;\n    }\n    if (exceptionOnInvalidType == null) {\n      exceptionOnInvalidType = false;\n    }\n    if (objectEncoder == null) {\n      objectEncoder = null;\n    }\n    yaml = new Dumper();\n    yaml.indentation = indent;\n    return yaml.dump(input, inline, 0, exceptionOnInvalidType, objectEncoder);\n  };\n\n  Yaml.stringify = function(input, inline, indent, exceptionOnInvalidType, objectEncoder) {\n    return this.dump(input, inline, indent, exceptionOnInvalidType, objectEncoder);\n  };\n\n  Yaml.load = function(path, callback, exceptionOnInvalidType, objectDecoder) {\n    return this.parseFile(path, callback, exceptionOnInvalidType, objectDecoder);\n  };\n\n  return Yaml;\n\n})();\n\nif (typeof window !== \"undefined\" && window !== null) {\n  window.YAML = Yaml;\n}\n\nif (typeof window === \"undefined\" || window === null) {\n  this.YAML = Yaml;\n}\n\nmodule.exports = Yaml;\n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","/*!\n * author-regex <https://github.com/jonschlinkert/author-regex>\n *\n * Copyright (c) 2014, 2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nmodule.exports = function() {\n  return /^\\s*([^<(]*?)\\s*([<(]([^>)]*?)[>)])?\\s*([<(]([^>)]*?)[>)])*\\s*$/;\n};\n\n","/*!\n * parse-author <https://github.com/jonschlinkert/parse-author>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nvar regex = require('author-regex');\n\nmodule.exports = function(str) {\n  if (typeof str !== 'string') {\n    throw new TypeError('expected author to be a string');\n  }\n\n  if (!str || !/\\w/.test(str)) {\n    return {};\n  }\n\n  var match = [].concat.apply([], regex().exec(str));\n  var author = {};\n\n  if (match[1]) {\n    author.name = match[1];\n  }\n\n  for (var i = 2; i < match.length; i++) {\n    var val = match[i];\n\n    if (i % 2 === 0 && val && match[i + 1]) {\n      if (val.charAt(0) === '<') {\n        author.email = match[i + 1];\n        i++;\n\n      } else if (val.charAt(0) === '(') {\n        author.url = match[i + 1];\n        i++;\n      }\n    }\n  }\n  return author;\n};\n","/**\n * author: Pieter Heyvaert (pheyvaer.heyvaert@ugent.be)\n * Ghent University - imec - IDLab\n */\n\nconst extend = require('extend');\nconst parseAuthor = require('parse-author');\n\nconst shortcuts = {\n  subjects: ['s', 'subject'],\n  predicates: ['p', 'predicate'],\n  objects: ['o', 'object'],\n  predicateobjects: ['po', 'predicateobject'],\n  inversepredicates: ['iv', 'inversepredicate'],\n  value: ['v'],\n  function: ['f', 'fn'],\n  parameters: ['pms'],\n  parameter: ['pm'],\n  sources: ['source', 's'],\n  conditions: ['c', 'condition'],\n  graphs: ['g', 'graph'],\n  mappings: ['m', 'mapping']\n};\n\nconst idlabfn = 'http://example.com/idlab/function/';\n\n\nfunction expand(input) {\n  const output = {};\n\n  extend(true, output, input);\n\n  replaceAll('mappings', output);\n  expandMappings(output);\n  expandAuthors(output);\n  expandSourcesInDocument(output);\n\n  return output;\n}\n\nfunction expandMappings(input) {\n  if (input.mappings) {\n    const mappings = Object.keys(input.mappings);\n\n    for (let i = 0; i < mappings.length; i++) {\n      const mappingKey = mappings[i];\n      const mapping = input.mappings[mappingKey];\n\n      if (mapping) {\n        expandSubjects(mapping, mappingKey);\n        expandSourcesInMapping(mapping, mappingKey);\n        expandPredicateObjects(mapping, mappingKey);\n        expandGraphs(mapping);\n      } else {\n        console.error(`mapping \"${mappingKey}\": no rules are provided. Skipping.`);\n        delete input.mappings[mappingKey];\n      }\n    }\n  } else {\n    console.error('A YARRRML document should have at least the key \"mappings\".');\n  }\n}\n\nfunction expandSubjects(mapping, mappingKey) {\n  replaceAll('subjects', mapping);\n\n  if (mapping.subjects) {\n    if (typeof mapping.subjects === 'string') {\n      mapping.subjects = [mapping.subjects]\n    } else if (Array.isArray(mapping.subjects)) {\n      for (let i = 0; i < mapping.subjects.length; i++) {\n        if (typeof mapping.subjects[i] === 'object') {\n          expandFunction(mapping.subjects[i]);\n\n          if (!mapping.subjects[i].type) {\n            mapping.subjects[i].type = 'iri'\n          }\n        }\n      }\n    } else {\n      expandFunction(mapping.subjects);\n\n      if (!mapping.subjects.type) {\n        mapping.subjects.type = 'iri'\n      }\n\n      mapping.subjects = [mapping.subjects];\n    }\n  } else {\n    mapping.subjects = [{type: 'blank'}];\n  }\n\n  replaceAll('conditions', mapping);\n\n  if (mapping.conditions) {\n    expandFunction(mapping.conditions);\n\n    for (let i = 0; i < mapping.subjects.length; i++) {\n      const subject = mapping.subjects[i];\n      mapping.subjects[i] = {\n        function: idlabfn + 'trueCondition',\n        parameters: [\n          {\n            parameter: idlabfn + 'strBoolean',\n            value: mapping.conditions,\n            from: 'function'\n          }, {\n            parameter: idlabfn + 'str',\n            value: subject.type === 'blank' ? null : subject,\n            from: subject.function !== undefined ? 'function' : 'subject',\n            type: subject.type ? subject.type : 'iri'\n          }\n        ],\n        type: subject.type ? subject.type : 'iri'\n      };\n      delete mapping.conditions;\n    }\n  }\n}\n\nfunction expandSourcesInMapping(mapping, mappingKey) {\n  replaceAll('sources', mapping);\n\n  if (mapping.sources) {\n    if (Array.isArray(mapping.sources)) {\n      for (let i = 0; i < mapping.sources.length; i++) {\n        const source = mapping.sources[i];\n\n        if (Array.isArray(source)) {\n          mapping.sources[i] = convertArraySourceInObject(source);\n        }\n      }\n    } else if (typeof mapping.sources === \"string\") {\n      mapping.sources = [mapping.sources];\n    } else {\n      console.error(`mapping \"${mappingKey}\": no (valid) source is defined.`);\n    }\n  } else {\n    console.error(`mapping \"${mappingKey}\": no source is defined.`);\n  }\n}\n\nfunction expandSourcesInDocument(document) {\n  replaceAll('sources', document);\n\n  if (document.sources) {\n    const sourceKeys = Object.keys(document.sources);\n\n    for (let i = 0; i < sourceKeys.length; i++) {\n      const source = document.sources[sourceKeys[i]];\n\n      if (Array.isArray(source)) {\n        document.sources[sourceKeys[i]] = convertArraySourceInObject(source);\n      }\n    }\n  }\n}\n\nfunction expandPredicateObjects(mapping, mappingKey) {\n  replaceAll('predicateobjects', mapping);\n\n  if (mapping.predicateobjects) {\n    for (let i = 0; i < mapping.predicateobjects.length; i++) {\n      const po = mapping.predicateobjects[i];\n\n      if (Array.isArray(po)) {\n        const newPO = {\n          predicates: po[0],\n          objects: po[1],\n        };\n\n        if (po.length === 3) {\n          if (po[2].indexOf('~lang') !== -1) {\n            newPO.language = po[2].replace('~lang', '');\n          } else {\n            newPO.datatype = po[2];\n          }\n        }\n\n        mapping.predicateobjects[i] = newPO;\n      }\n    }\n\n    mapping.predicateobjects.forEach(po => {\n      expandGraphs(po);\n    });\n\n    expandPredicates(mapping.predicateobjects);\n    expandObjects(mapping.predicateobjects, mappingKey);\n    expandConditionsOfPOs(mapping.predicateobjects);\n  } else {\n    console.error(`mapping \"${mappingKey}\": no pos are defined.`)\n  }\n}\n\nfunction expandPredicates(predicateobjects) {\n  predicateobjects.forEach(po => {\n    replaceAll('predicates', po);\n\n    if (typeof po.predicates === 'string') {\n      po.predicates = [po.predicates];\n    }\n  });\n}\n\nfunction expandObjects(predicateobjects, mappingKey) {\n  for (let i = 0; i < predicateobjects.length; i++) {\n    const po = predicateobjects[i];\n    replaceAll('objects', po);\n\n    if (typeof po.objects === 'string' || typeof po.objects === 'number') {\n      po.objects = ['' + po.objects];\n    } else if (typeof po.objects === 'object' && !Array.isArray(po.objects)) {\n      po.objects = [po.objects]\n    }\n\n    if (!po.objects || po.objects.length === 0) {\n      console.error(`mapping \"${mappingKey}\": po with predicate(s) \"${po.predicates}\" does not have an object defined. Skipping.`);\n      predicateobjects.splice(i, 1);\n      i--;\n    } else {\n      for (let j = 0; j < po.objects.length; j++) {\n        if (typeof po.objects[j] === 'string') {\n          if (po.predicates.indexOf('a') === -1 && po.objects[j].indexOf('~iri') === -1) {\n            po.objects[j] = {\n              value: po.objects[j],\n              type: 'literal'\n            }\n          } else {\n            po.objects[j] = {\n              value: po.objects[j].replace('~iri', ''),\n              type: 'iri'\n            }\n          }\n        } else if (Array.isArray(po.objects[j])) {\n          let newPO;\n          if (po.objects[j][0].indexOf('~iri') === -1) {\n            newPO = {\n              value: po.objects[j][0],\n              type: 'literal'\n            }\n          } else {\n            newPO = {\n              value: po.objects[j][0].replace('~iri', ''),\n              type: 'iri'\n            }\n          }\n\n          if (po.objects[j].length > 1) {\n            if (po.objects[j][1].indexOf('~lang') === -1) {\n              newPO.datatype = po.objects[j][1];\n            } else {\n              newPO.language = po.objects[j][1].replace('~lang', '');\n            }\n          }\n\n          po.objects[j] = newPO;\n        }\n\n        if (!po.objects[j].datatype && po.datatype) {\n          po.objects[j].datatype = po.datatype;\n        }\n\n        if (!po.objects[j].language && po.language) {\n          po.objects[j].language = po.language;\n        }\n\n        replaceAll('value', po.objects[j]);\n        replaceAll('inversepredicates', po.objects[j]);\n\n        expandFunction(po.objects[j]);\n\n        //condition\n        replaceAll('conditions', po.objects[j]);\n\n        if (po.objects[j].conditions) {\n\n          if (typeof po.objects[j].conditions === 'object' && !Array.isArray(po.objects[j].conditions)) {\n            po.objects[j].conditions = [po.objects[j].conditions];\n          }\n\n          po.objects[j].conditions.forEach(c => {\n            expandFunction(c);\n          });\n\n          if (po.objects[j].value && !po.objects[j].mapping) {\n            po.objects[j] = expandConditionsOfObject(po.objects[j]);\n          }\n        }\n\n        if (po.objects[j].mapping && Array.isArray(po.objects[j].mapping)) {\n          po.objects[j].mapping.forEach(m => {\n            const anotherObject = JSON.parse(JSON.stringify(po.objects[j]));\n            anotherObject.mapping = m;\n            po.objects.push(anotherObject);\n          });\n\n          po.objects.splice(j, 1);\n        }\n      }\n\n      delete po.datatype;\n      delete po.language;\n    }\n  }\n}\n\nfunction expandFunction(input) {\n  replaceAll('function', input);\n  replaceAll('parameters', input);\n\n  if (input.function && isFunctionShortcut(input.function)) {\n    const result = expandFunctionShortcut(input.function);\n    input.function = result.function;\n    input.parameters = result.parameters;\n  }\n\n  if (input.parameters) {\n    for (let i = 0; i < input.parameters.length; i++) {\n      const e = input.parameters[i];\n\n      if (Array.isArray(e)) {\n        input.parameters[i] = {\n          parameter: e[0],\n          value: '' + e[1] // turn ints into strings\n        };\n\n        if (input.parameters[i].value.indexOf('~iri') === -1) {\n          input.parameters[i].type = 'literal';\n        } else {\n          input.parameters[i].type = 'iri';\n          input.parameters[i].value = input.parameters[i].value.replace('~iri', '');\n        }\n\n        if (e.length > 2) {\n          if (e[2] === \"s\") {\n            e[2] = \"subject\";\n          } else if (e[2] === \"o\") {\n            e[2] = \"object\";\n          }\n\n          if (e[2] === \"subject\" || e[2] === \"object\") {\n            input.parameters[i].from = e[2];\n          } else {\n            const e = new Error(`\\`from\\` has to have the value \"s\", \"subject\", \"o\", or \"object`);\n            e.code = 'INVALID_YAML';\n            throw e;\n          }\n        } else {\n          input.parameters[i].from = \"subject\"\n        }\n      } else {\n        replaceAll('parameter', e);\n        replaceAll('value', e);\n      }\n\n      if (e.value instanceof Object) {\n        expandFunction(e.value);\n        e.from = 'function';\n      }\n    }\n  }\n}\n\nfunction isFunctionShortcut(str) {\n  return str.indexOf('(') !== -1 && str.indexOf(')') > str.indexOf('(');\n}\n\nfunction expandFunctionShortcut(functionStr) {\n  const fn = functionStr.substr(0, functionStr.indexOf('('));\n  const prefix = fn.substr(0, fn.indexOf(':'));\n  const parameterStr = functionStr.substr(functionStr.indexOf('(')+1, functionStr.length -  functionStr.indexOf('(') - 2);\n  const parameters = parameterStr.split(',');\n  const temp = [];\n\n  parameters.forEach(p => {\n    const split = p.split('=');\n    let parameter = split[0].trim();\n    if (parameter.indexOf(':') === -1) {\n      parameter = prefix + ':' + parameter;\n    }\n\n    let value = split[1].trim();\n\n    if (value[0] === '\"' && value[value.length - 1] === '\"') {\n      value = value.substr(1, value.length - 2);\n    }\n\n    temp.push({value, parameter, from: 'subject', type: 'literal'});\n  });\n\n  return {function: fn, parameters: temp};\n}\n\nfunction expandGraphs(mapping) {\n  replaceAll('graphs', mapping);\n\n  if (mapping.graphs) {\n    if (typeof mapping.graphs === 'string') {\n      mapping.graphs = [mapping.graphs]\n    } else if (Array.isArray(mapping.graphs)) {\n      for (let i = 0; i < mapping.graphs.length; i++) {\n        if (typeof mapping.graphs[i] === 'object') {\n          expandFunction(mapping.graphs[i]);\n        }\n      }\n    }\n  }\n}\n\nfunction expandConditionsOfPOs(predicateobjects) {\n  for (let i = 0; i < predicateobjects.length; i++) {\n    const po = predicateobjects[i];\n    replaceAll('conditions', po);\n\n    if (po.conditions) {\n      expandFunction(po.conditions);\n\n      for (let j = 0; j < po.objects.length; j++) {\n        const o = po.objects[j];\n        // TODO same as in expandSubjects function\n        po.objects[j] = {\n          function: idlabfn + 'trueCondition',\n          parameters: [\n            {\n              parameter: idlabfn + 'strBoolean',\n              value: po.conditions,\n              from: 'function'\n            }, {\n              parameter: idlabfn + 'str',\n              value: o.function ? o : o.value,\n              type: o.type,\n              from: o.function ? 'function' : 'subject'\n            }\n          ],\n          type: o.type\n        };\n\n        if (o.datatype) {\n          po.objects[j].datatype = o.datatype;\n        }\n      }\n\n      delete po.conditions;\n    }\n  }\n}\n\n/**\n * This method returns a new object with the conditions expanded.\n * @param o An object of a Predicate Object.\n */\nfunction expandConditionsOfObject(o) {\n  if (o.conditions) {\n\n    // TODO same as in expandSubjects function\n    const newObj = {\n      function: idlabfn + 'trueCondition',\n      parameters: [\n        {\n          parameter: idlabfn + 'strBoolean',\n          value: o.conditions[0],\n          from: 'function'\n        }, {\n          parameter: idlabfn + 'str',\n          value: o.function ? o : o.value,\n          type: o.type,\n          from: o.function ? 'function' : 'subject'\n        }\n      ],\n      type: o.type\n    };\n\n    if (o.datatype) {\n      newObj.datatype = o.datatype;\n    }\n\n    return newObj;\n  } else {\n    return o;\n  }\n}\n\nfunction convertArraySourceInObject(source) {\n  const splits = source[0].split('~');\n  let result;\n\n  if (splits.length > 1) {\n    result = {\n      access: splits[0],\n      referenceFormulation: splits[1],\n      iterator: source[1]\n    };\n  } else {\n    console.log('reference formulation not specified');\n  }\n\n  return result;\n}\n\nfunction replaceAll(wanted, value) {\n  //console.log(wanted);\n  shortcuts[wanted].forEach(shortcut => {\n    //console.log(shortcut);\n\n    if (value[shortcut]) {\n      replace(shortcut, wanted, value);\n    }\n  });\n}\n\nfunction replace(oldName, newName, value) {\n  value[newName] = value[oldName];\n  delete value[oldName];\n}\n\n/**\n * This method expands authors.\n * @param input - The JSON object of the YARRRML rules.\n */\nfunction expandAuthors(input) {\n  if (input.authors) {\n    let authors = input.authors;\n\n    if (typeof authors === 'string' || authors instanceof String) {\n      authors = [authors];\n      input.authors = authors;\n    }\n\n    for (let i = 0; i < authors.length; i ++) {\n      const author = authors[i];\n\n      if (typeof author === 'string' || author instanceof String) {\n        const parsedAuthor = parseAuthor(author);\n\n        // This is a WebID.\n        if (parsedAuthor.name && parsedAuthor.name.includes('://')) {\n          authors[i] = {webid: author};\n        } else {\n          if (parsedAuthor.url) {\n            parsedAuthor.website = parsedAuthor.url;\n          }\n\n          delete parsedAuthor.url;\n          authors[i] = parsedAuthor;\n        }\n      }\n    }\n  }\n}\n\nmodule.exports = expand;\n","module.exports={\"@context\":{as:\"https://www.w3.org/ns/activitystreams#\",dqv:\"http://www.w3.org/ns/dqv#\",duv:\"https://www.w3.org/TR/vocab-duv#\",cat:\"http://www.w3.org/ns/dcat#\",qb:\"http://purl.org/linked-data/cube#\",grddl:\"http://www.w3.org/2003/g/data-view#\",ldp:\"http://www.w3.org/ns/ldp#\",oa:\"http://www.w3.org/ns/oa#\",ma:\"http://www.w3.org/ns/ma-ont#\",owl:\"http://www.w3.org/2002/07/owl#\",rdf:\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\",rdfa:\"http://www.w3.org/ns/rdfa#\",rdfs:\"http://www.w3.org/2000/01/rdf-schema#\",rif:\"http://www.w3.org/2007/rif#\",rr:\"http://www.w3.org/ns/r2rml#\",skos:\"http://www.w3.org/2004/02/skos/core#\",skosxl:\"http://www.w3.org/2008/05/skos-xl#\",wdr:\"http://www.w3.org/2007/05/powder#\",void:\"http://rdfs.org/ns/void#\",wdrs:\"http://www.w3.org/2007/05/powder-s#\",xhv:\"http://www.w3.org/1999/xhtml/vocab#\",xml:\"http://www.w3.org/XML/1998/namespace\",xsd:\"http://www.w3.org/2001/XMLSchema#\",prov:\"http://www.w3.org/ns/prov#\",sd:\"http://www.w3.org/ns/sparql-service-description#\",org:\"http://www.w3.org/ns/org#\",gldp:\"http://www.w3.org/ns/people#\",cnt:\"http://www.w3.org/2008/content#\",dcat:\"http://www.w3.org/ns/dcat#\",earl:\"http://www.w3.org/ns/earl#\",ht:\"http://www.w3.org/2006/http#\",ptr:\"http://www.w3.org/2009/pointers#\",cc:\"http://creativecommons.org/ns#\",ctag:\"http://commontag.org/ns#\",dc:\"http://purl.org/dc/terms/\",dc11:\"http://purl.org/dc/elements/1.1/\",dcterms:\"http://purl.org/dc/terms/\",foaf:\"http://xmlns.com/foaf/0.1/\",gr:\"http://purl.org/goodrelations/v1#\",ical:\"http://www.w3.org/2002/12/cal/icaltzd#\",og:\"http://ogp.me/ns#\",rev:\"http://purl.org/stuff/rev#\",sioc:\"http://rdfs.org/sioc/ns#\",v:\"http://rdf.data-vocabulary.org/#\",vcard:\"http://www.w3.org/2006/vcard/ns#\",schema:\"http://schema.org/\",describedby:\"http://www.w3.org/2007/05/powder-s#describedby\",license:\"http://www.w3.org/1999/xhtml/vocab#license\",role:\"http://www.w3.org/1999/xhtml/vocab#role\",ssn:\"http://www.w3.org/ns/ssn/\",sosa:\"http://www.w3.org/ns/sosa/\",time:\"http://www.w3.org/2006/time#\"}};","const RDF  = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#',\n    XSD  = 'http://www.w3.org/2001/XMLSchema#',\n    SWAP = 'http://www.w3.org/2000/10/swap/';\n\nexport default {\n  xsd: {\n    decimal: `${XSD}decimal`,\n    boolean: `${XSD}boolean`,\n    double:  `${XSD}double`,\n    integer: `${XSD}integer`,\n    string:  `${XSD}string`,\n  },\n  rdf: {\n    type:       `${RDF}type`,\n    nil:        `${RDF}nil`,\n    first:      `${RDF}first`,\n    rest:       `${RDF}rest`,\n    langString: `${RDF}langString`,\n  },\n  owl: {\n    sameAs: 'http://www.w3.org/2002/07/owl#sameAs',\n  },\n  r: {\n    forSome: `${SWAP}reify#forSome`,\n    forAll:  `${SWAP}reify#forAll`,\n  },\n  log: {\n    implies: `${SWAP}log#implies`,\n  },\n};\n","/*! queue-microtask. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nlet promise\n\nmodule.exports = typeof queueMicrotask === 'function'\n  ? queueMicrotask.bind(globalThis)\n  // reuse resolved promise, and allocate it lazily\n  : cb => (promise || (promise = Promise.resolve()))\n    .then(cb)\n    .catch(err => setTimeout(() => { throw err }, 0))\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","// **N3Lexer** tokenizes N3 documents.\nimport namespaces from './IRIs';\nimport queueMicrotask from 'queue-microtask';\n\nconst { xsd } = namespaces;\n\n// Regular expression and replacement string to escape N3 strings\nconst escapeSequence = /\\\\u([a-fA-F0-9]{4})|\\\\U([a-fA-F0-9]{8})|\\\\([^])/g;\nconst escapeReplacements = {\n  '\\\\': '\\\\', \"'\": \"'\", '\"': '\"',\n  'n': '\\n', 'r': '\\r', 't': '\\t', 'f': '\\f', 'b': '\\b',\n  '_': '_', '~': '~', '.': '.', '-': '-', '!': '!', '$': '$', '&': '&',\n  '(': '(', ')': ')', '*': '*', '+': '+', ',': ',', ';': ';', '=': '=',\n  '/': '/', '?': '?', '#': '#', '@': '@', '%': '%',\n};\nconst illegalIriChars = /[\\x00-\\x20<>\\\\\"\\{\\}\\|\\^\\`]/;\n\nconst lineModeRegExps = {\n  _iri: true,\n  _unescapedIri: true,\n  _simpleQuotedString: true,\n  _langcode: true,\n  _blank: true,\n  _newline: true,\n  _comment: true,\n  _whitespace: true,\n  _endOfFile: true,\n};\nconst invalidRegExp = /$0^/;\n\n// ## Constructor\nexport default class N3Lexer {\n  constructor(options) {\n    // ## Regular expressions\n    // It's slightly faster to have these as properties than as in-scope variables\n    this._iri = /^<((?:[^ <>{}\\\\]|\\\\[uU])+)>[ \\t]*/; // IRI with escape sequences; needs sanity check after unescaping\n    this._unescapedIri = /^<([^\\x00-\\x20<>\\\\\"\\{\\}\\|\\^\\`]*)>[ \\t]*/; // IRI without escape sequences; no unescaping\n    this._simpleQuotedString = /^\"([^\"\\\\\\r\\n]*)\"(?=[^\"])/; // string without escape sequences\n    this._simpleApostropheString = /^'([^'\\\\\\r\\n]*)'(?=[^'])/;\n    this._langcode = /^@([a-z]+(?:-[a-z0-9]+)*)(?=[^a-z0-9\\-])/i;\n    this._prefix = /^((?:[A-Za-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])(?:\\.?[\\-0-9A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])*)?:(?=[#\\s<])/;\n    this._prefixed = /^((?:[A-Za-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])(?:\\.?[\\-0-9A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])*)?:((?:(?:[0-:A-Z_a-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff]|%[0-9a-fA-F]{2}|\\\\[!#-\\/;=?\\-@_~])(?:(?:[\\.\\-0-:A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff]|%[0-9a-fA-F]{2}|\\\\[!#-\\/;=?\\-@_~])*(?:[\\-0-:A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff]|%[0-9a-fA-F]{2}|\\\\[!#-\\/;=?\\-@_~]))?)?)(?:[ \\t]+|(?=\\.?[,;!\\^\\s#()\\[\\]\\{\\}\"'<>]))/;\n    this._variable = /^\\?(?:(?:[A-Z_a-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])(?:[\\-0-:A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])*)(?=[.,;!\\^\\s#()\\[\\]\\{\\}\"'<>])/;\n    this._blank = /^_:((?:[0-9A-Z_a-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])(?:\\.?[\\-0-9A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])*)(?:[ \\t]+|(?=\\.?[,;:\\s#()\\[\\]\\{\\}\"'<>]))/;\n    this._number = /^[\\-+]?(?:(\\d+\\.\\d*|\\.?\\d+)[eE][\\-+]?|\\d*(\\.)?)\\d+(?=\\.?[,;:\\s#()\\[\\]\\{\\}\"'<>])/;\n    this._boolean = /^(?:true|false)(?=[.,;\\s#()\\[\\]\\{\\}\"'<>])/;\n    this._keyword = /^@[a-z]+(?=[\\s#<:])/i;\n    this._sparqlKeyword = /^(?:PREFIX|BASE|GRAPH)(?=[\\s#<])/i;\n    this._shortPredicates = /^a(?=[\\s()\\[\\]\\{\\}\"'<>])/;\n    this._newline = /^[ \\t]*(?:#[^\\n\\r]*)?(?:\\r\\n|\\n|\\r)[ \\t]*/;\n    this._comment = /#([^\\n\\r]*)/;\n    this._whitespace = /^[ \\t]+/;\n    this._endOfFile = /^(?:#[^\\n\\r]*)?$/;\n    options = options || {};\n\n    // In line mode (N-Triples or N-Quads), only simple features may be parsed\n    if (this._lineMode = !!options.lineMode) {\n      this._n3Mode = false;\n      // Don't tokenize special literals\n      for (const key in this) {\n        if (!(key in lineModeRegExps) && this[key] instanceof RegExp)\n          this[key] = invalidRegExp;\n      }\n    }\n    // When not in line mode, enable N3 functionality by default\n    else {\n      this._n3Mode = options.n3 !== false;\n    }\n    // Don't output comment tokens by default\n    this._comments = !!options.comments;\n    // Cache the last tested closing position of long literals\n    this._literalClosingPos = 0;\n  }\n\n  // ## Private methods\n\n  // ### `_tokenizeToEnd` tokenizes as for as possible, emitting tokens through the callback\n  _tokenizeToEnd(callback, inputFinished) {\n    // Continue parsing as far as possible; the loop will return eventually\n    let input = this._input;\n    const outputComments = this._comments;\n    while (true) {\n      // Count and skip whitespace lines\n      let whiteSpaceMatch, comment;\n      while (whiteSpaceMatch = this._newline.exec(input)) {\n        // Try to find a comment\n        if (outputComments && (comment = this._comment.exec(whiteSpaceMatch[0])))\n          callback(null, { line: this._line, type: 'comment', value: comment[1], prefix: '' });\n        // Advance the input\n        input = input.substr(whiteSpaceMatch[0].length, input.length);\n        this._line++;\n      }\n      // Skip whitespace on current line\n      if (!whiteSpaceMatch && (whiteSpaceMatch = this._whitespace.exec(input)))\n        input = input.substr(whiteSpaceMatch[0].length, input.length);\n\n      // Stop for now if we're at the end\n      if (this._endOfFile.test(input)) {\n        // If the input is finished, emit EOF\n        if (inputFinished) {\n          // Try to find a final comment\n          if (outputComments && (comment = this._comment.exec(input)))\n            callback(null, { line: this._line, type: 'comment', value: comment[1], prefix: '' });\n          callback(input = null, { line: this._line, type: 'eof', value: '', prefix: '' });\n        }\n        return this._input = input;\n      }\n\n      // Look for specific token types based on the first character\n      const line = this._line, firstChar = input[0];\n      let type = '', value = '', prefix = '',\n          match = null, matchLength = 0, inconclusive = false;\n      switch (firstChar) {\n      case '^':\n        // We need at least 3 tokens lookahead to distinguish ^^<IRI> and ^^pre:fixed\n        if (input.length < 3)\n          break;\n        // Try to match a type\n        else if (input[1] === '^') {\n          this._previousMarker = '^^';\n          // Move to type IRI or prefixed name\n          input = input.substr(2);\n          if (input[0] !== '<') {\n            inconclusive = true;\n            break;\n          }\n        }\n        // If no type, it must be a path expression\n        else {\n          if (this._n3Mode) {\n            matchLength = 1;\n            type = '^';\n          }\n          break;\n        }\n        // Fall through in case the type is an IRI\n      case '<':\n        // Try to find a full IRI without escape sequences\n        if (match = this._unescapedIri.exec(input))\n          type = 'IRI', value = match[1];\n        // Try to find a full IRI with escape sequences\n        else if (match = this._iri.exec(input)) {\n          value = this._unescape(match[1]);\n          if (value === null || illegalIriChars.test(value))\n            return reportSyntaxError(this);\n          type = 'IRI';\n        }\n        // Try to find a nested triple\n        else if (input.length > 1 && input[1] === '<')\n          type = '<<', matchLength = 2;\n        // Try to find a backwards implication arrow\n        else if (this._n3Mode && input.length > 1 && input[1] === '=')\n          type = 'inverse', matchLength = 2, value = '>';\n        break;\n\n      case '>':\n        if (input.length > 1 && input[1] === '>')\n          type = '>>', matchLength = 2;\n        break;\n\n      case '_':\n        // Try to find a blank node. Since it can contain (but not end with) a dot,\n        // we always need a non-dot character before deciding it is a blank node.\n        // Therefore, try inserting a space if we're at the end of the input.\n        if ((match = this._blank.exec(input)) ||\n            inputFinished && (match = this._blank.exec(`${input} `)))\n          type = 'blank', prefix = '_', value = match[1];\n        break;\n\n      case '\"':\n        // Try to find a literal without escape sequences\n        if (match = this._simpleQuotedString.exec(input))\n          value = match[1];\n        // Try to find a literal wrapped in three pairs of quotes\n        else {\n          ({ value, matchLength } = this._parseLiteral(input));\n          if (value === null)\n            return reportSyntaxError(this);\n        }\n        if (match !== null || matchLength !== 0) {\n          type = 'literal';\n          this._literalClosingPos = 0;\n        }\n        break;\n\n      case \"'\":\n        if (!this._lineMode) {\n          // Try to find a literal without escape sequences\n          if (match = this._simpleApostropheString.exec(input))\n            value = match[1];\n          // Try to find a literal wrapped in three pairs of quotes\n          else {\n            ({ value, matchLength } = this._parseLiteral(input));\n            if (value === null)\n              return reportSyntaxError(this);\n          }\n          if (match !== null || matchLength !== 0) {\n            type = 'literal';\n            this._literalClosingPos = 0;\n          }\n        }\n        break;\n\n      case '?':\n        // Try to find a variable\n        if (this._n3Mode && (match = this._variable.exec(input)))\n          type = 'var', value = match[0];\n        break;\n\n      case '@':\n        // Try to find a language code\n        if (this._previousMarker === 'literal' && (match = this._langcode.exec(input)))\n          type = 'langcode', value = match[1];\n        // Try to find a keyword\n        else if (match = this._keyword.exec(input))\n          type = match[0];\n        break;\n\n      case '.':\n        // Try to find a dot as punctuation\n        if (input.length === 1 ? inputFinished : (input[1] < '0' || input[1] > '9')) {\n          type = '.';\n          matchLength = 1;\n          break;\n        }\n        // Fall through to numerical case (could be a decimal dot)\n\n      case '0':\n      case '1':\n      case '2':\n      case '3':\n      case '4':\n      case '5':\n      case '6':\n      case '7':\n      case '8':\n      case '9':\n      case '+':\n      case '-':\n        // Try to find a number. Since it can contain (but not end with) a dot,\n        // we always need a non-dot character before deciding it is a number.\n        // Therefore, try inserting a space if we're at the end of the input.\n        if (match = this._number.exec(input) ||\n            inputFinished && (match = this._number.exec(`${input} `))) {\n          type = 'literal', value = match[0];\n          prefix = (typeof match[1] === 'string' ? xsd.double :\n                    (typeof match[2] === 'string' ? xsd.decimal : xsd.integer));\n        }\n        break;\n\n      case 'B':\n      case 'b':\n      case 'p':\n      case 'P':\n      case 'G':\n      case 'g':\n        // Try to find a SPARQL-style keyword\n        if (match = this._sparqlKeyword.exec(input))\n          type = match[0].toUpperCase();\n        else\n          inconclusive = true;\n        break;\n\n      case 'f':\n      case 't':\n        // Try to match a boolean\n        if (match = this._boolean.exec(input))\n          type = 'literal', value = match[0], prefix = xsd.boolean;\n        else\n          inconclusive = true;\n        break;\n\n      case 'a':\n        // Try to find an abbreviated predicate\n        if (match = this._shortPredicates.exec(input))\n          type = 'abbreviation', value = 'a';\n        else\n          inconclusive = true;\n        break;\n\n      case '=':\n        // Try to find an implication arrow or equals sign\n        if (this._n3Mode && input.length > 1) {\n          type = 'abbreviation';\n          if (input[1] !== '>')\n            matchLength = 1, value = '=';\n          else\n            matchLength = 2, value = '>';\n        }\n        break;\n\n      case '!':\n        if (!this._n3Mode)\n          break;\n      case ',':\n      case ';':\n      case '[':\n      case ']':\n      case '(':\n      case ')':\n      case '{':\n      case '}':\n        if (!this._lineMode) {\n          matchLength = 1;\n          type = firstChar;\n        }\n        break;\n\n      default:\n        inconclusive = true;\n      }\n\n      // Some first characters do not allow an immediate decision, so inspect more\n      if (inconclusive) {\n        // Try to find a prefix\n        if ((this._previousMarker === '@prefix' || this._previousMarker === 'PREFIX') &&\n            (match = this._prefix.exec(input)))\n          type = 'prefix', value = match[1] || '';\n        // Try to find a prefixed name. Since it can contain (but not end with) a dot,\n        // we always need a non-dot character before deciding it is a prefixed name.\n        // Therefore, try inserting a space if we're at the end of the input.\n        else if ((match = this._prefixed.exec(input)) ||\n                 inputFinished && (match = this._prefixed.exec(`${input} `)))\n          type = 'prefixed', prefix = match[1] || '', value = this._unescape(match[2]);\n      }\n\n      // A type token is special: it can only be emitted after an IRI or prefixed name is read\n      if (this._previousMarker === '^^') {\n        switch (type) {\n        case 'prefixed': type = 'type';    break;\n        case 'IRI':      type = 'typeIRI'; break;\n        default:         type = '';\n        }\n      }\n\n      // What if nothing of the above was found?\n      if (!type) {\n        // We could be in streaming mode, and then we just wait for more input to arrive.\n        // Otherwise, a syntax error has occurred in the input.\n        // One exception: error on an unaccounted linebreak (= not inside a triple-quoted literal).\n        if (inputFinished || (!/^'''|^\"\"\"/.test(input) && /\\n|\\r/.test(input)))\n          return reportSyntaxError(this);\n        else\n          return this._input = input;\n      }\n\n      // Emit the parsed token\n      const token = { line: line, type: type, value: value, prefix: prefix };\n      callback(null, token);\n      this.previousToken = token;\n      this._previousMarker = type;\n      // Advance to next part to tokenize\n      input = input.substr(matchLength || match[0].length, input.length);\n    }\n\n    // Signals the syntax error through the callback\n    function reportSyntaxError(self) { callback(self._syntaxError(/^\\S*/.exec(input)[0])); }\n  }\n\n  // ### `_unescape` replaces N3 escape codes by their corresponding characters\n  _unescape(item) {\n    let invalid = false;\n    const replaced = item.replace(escapeSequence, (sequence, unicode4, unicode8, escapedChar) => {\n      // 4-digit unicode character\n      if (typeof unicode4 === 'string')\n        return String.fromCharCode(Number.parseInt(unicode4, 16));\n      // 8-digit unicode character\n      if (typeof unicode8 === 'string') {\n        let charCode = Number.parseInt(unicode8, 16);\n        return charCode <= 0xFFFF ? String.fromCharCode(Number.parseInt(unicode8, 16)) :\n          String.fromCharCode(0xD800 + ((charCode -= 0x10000) >> 10), 0xDC00 + (charCode & 0x3FF));\n      }\n      // fixed escape sequence\n      if (escapedChar in escapeReplacements)\n        return escapeReplacements[escapedChar];\n      // invalid escape sequence\n      invalid = true;\n      return '';\n    });\n    return invalid ? null : replaced;\n  }\n\n  // ### `_parseLiteral` parses a literal into an unescaped value\n  _parseLiteral(input) {\n    // Ensure we have enough lookahead to identify triple-quoted strings\n    if (input.length >= 3) {\n      // Identify the opening quote(s)\n      const opening = input.match(/^(?:\"\"\"|\"|'''|'|)/)[0];\n      const openingLength = opening.length;\n\n      // Find the next candidate closing quotes\n      let closingPos = Math.max(this._literalClosingPos, openingLength);\n      while ((closingPos = input.indexOf(opening, closingPos)) > 0) {\n        // Count backslashes right before the closing quotes\n        let backslashCount = 0;\n        while (input[closingPos - backslashCount - 1] === '\\\\')\n          backslashCount++;\n\n        // An even number of backslashes (in particular 0)\n        // means these are actual, non-escaped closing quotes\n        if (backslashCount % 2 === 0) {\n          // Extract and unescape the value\n          const raw = input.substring(openingLength, closingPos);\n          const lines = raw.split(/\\r\\n|\\r|\\n/).length - 1;\n          const matchLength = closingPos + openingLength;\n          // Only triple-quoted strings can be multi-line\n          if (openingLength === 1 && lines !== 0 ||\n              openingLength === 3 && this._lineMode)\n            break;\n          this._line += lines;\n          return { value: this._unescape(raw), matchLength };\n        }\n        closingPos++;\n      }\n      this._literalClosingPos = input.length - openingLength + 1;\n    }\n    return { value: '', matchLength: 0 };\n  }\n\n  // ### `_syntaxError` creates a syntax error for the given issue\n  _syntaxError(issue) {\n    this._input = null;\n    const err = new Error(`Unexpected \"${issue}\" on line ${this._line}.`);\n    err.context = {\n      token: undefined,\n      line: this._line,\n      previousToken: this.previousToken,\n    };\n    return err;\n  }\n\n  // ## Public methods\n\n  // ### `tokenize` starts the transformation of an N3 document into an array of tokens.\n  // The input can be a string or a stream.\n  tokenize(input, callback) {\n    this._line = 1;\n\n    // If the input is a string, continuously emit tokens through the callback until the end\n    if (typeof input === 'string') {\n      this._input = input;\n      // If a callback was passed, asynchronously call it\n      if (typeof callback === 'function')\n        queueMicrotask(() => this._tokenizeToEnd(callback, true));\n      // If no callback was passed, tokenize synchronously and return\n      else {\n        const tokens = [];\n        let error;\n        this._tokenizeToEnd((e, t) => e ? (error = e) : tokens.push(t), true);\n        if (error) throw error;\n        return tokens;\n      }\n    }\n    // Otherwise, the input must be a stream\n    else {\n      this._input = '';\n      this._pendingBuffer = null;\n      if (typeof input.setEncoding === 'function')\n        input.setEncoding('utf8');\n      // Adds the data chunk to the buffer and parses as far as possible\n      input.on('data', data => {\n        if (this._input !== null && data.length !== 0) {\n          // Prepend any previous pending writes\n          if (this._pendingBuffer) {\n            data = Buffer.concat([this._pendingBuffer, data]);\n            this._pendingBuffer = null;\n          }\n          // Hold if the buffer ends in an incomplete unicode sequence\n          if (data[data.length - 1] & 0x80) {\n            this._pendingBuffer = data;\n          }\n          // Otherwise, tokenize as far as possible\n          else {\n            this._input += data;\n            this._tokenizeToEnd(callback, false);\n          }\n        }\n      });\n      // Parses until the end\n      input.on('end', () => {\n        if (this._input !== null)\n          this._tokenizeToEnd(callback, true);\n      });\n      input.on('error', callback);\n    }\n  }\n}\n","// **N3Util** provides N3 utility functions.\n\nimport N3DataFactory from './N3DataFactory';\n\n// Tests whether the given term represents an IRI\nexport function isNamedNode(term) {\n  return !!term && term.termType === 'NamedNode';\n}\n\n// Tests whether the given term represents a blank node\nexport function isBlankNode(term) {\n  return !!term && term.termType === 'BlankNode';\n}\n\n// Tests whether the given term represents a literal\nexport function isLiteral(term) {\n  return !!term && term.termType === 'Literal';\n}\n\n// Tests whether the given term represents a variable\nexport function isVariable(term) {\n  return !!term && term.termType === 'Variable';\n}\n\n// Tests whether the given term represents the default graph\nexport function isDefaultGraph(term) {\n  return !!term && term.termType === 'DefaultGraph';\n}\n\n// Tests whether the given quad is in the default graph\nexport function inDefaultGraph(quad) {\n  return isDefaultGraph(quad.graph);\n}\n\n// Creates a function that prepends the given IRI to a local name\nexport function prefix(iri, factory) {\n  return prefixes({ '': iri }, factory)('');\n}\n\n// Creates a function that allows registering and expanding prefixes\nexport function prefixes(defaultPrefixes, factory) {\n  // Add all of the default prefixes\n  const prefixes = Object.create(null);\n  for (const prefix in defaultPrefixes)\n    processPrefix(prefix, defaultPrefixes[prefix]);\n  // Set the default factory if none was specified\n  factory = factory || N3DataFactory;\n\n  // Registers a new prefix (if an IRI was specified)\n  // or retrieves a function that expands an existing prefix (if no IRI was specified)\n  function processPrefix(prefix, iri) {\n    // Create a new prefix if an IRI is specified or the prefix doesn't exist\n    if (typeof iri === 'string') {\n      // Create a function that expands the prefix\n      const cache = Object.create(null);\n      prefixes[prefix] = local => {\n        return cache[local] || (cache[local] = factory.namedNode(iri + local));\n      };\n    }\n    else if (!(prefix in prefixes)) {\n      throw new Error(`Unknown prefix: ${prefix}`);\n    }\n    return prefixes[prefix];\n  }\n  return processPrefix;\n}\n","// N3.js implementations of the RDF/JS core data types\n// See https://github.com/rdfjs/representation-task-force/blob/master/interface-spec.md\n\nimport namespaces from './IRIs';\nimport { isDefaultGraph } from './N3Util';\nconst { rdf, xsd } = namespaces;\n\n// eslint-disable-next-line prefer-const\nlet DEFAULTGRAPH;\nlet _blankNodeCounter = 0;\n\nconst escapedLiteral = /^\"(.*\".*)(?=\"[^\"]*$)/;\nconst quadId = /^<<(\"(?:\"\"|[^\"])*\"[^ ]*|[^ ]+) (\"(?:\"\"|[^\"])*\"[^ ]*|[^ ]+) (\"(?:\"\"|[^\"])*\"[^ ]*|[^ ]+) ?(\"(?:\"\"|[^\"])*\"[^ ]*|[^ ]+)?>>$/;\n\n// ## DataFactory singleton\nconst DataFactory = {\n  namedNode,\n  blankNode,\n  variable,\n  literal,\n  defaultGraph,\n  quad,\n  triple: quad,\n};\nexport default DataFactory;\n\n// ## Term constructor\nexport class Term {\n  constructor(id) {\n    this.id = id;\n  }\n\n  // ### The value of this term\n  get value() {\n    return this.id;\n  }\n\n  // ### Returns whether this object represents the same term as the other\n  equals(other) {\n    // If both terms were created by this library,\n    // equality can be computed through ids\n    if (other instanceof Term)\n      return this.id === other.id;\n    // Otherwise, compare term type and value\n    return !!other && this.termType === other.termType &&\n                      this.value    === other.value;\n  }\n\n  // ### Returns a plain object representation of this term\n  toJSON() {\n    return {\n      termType: this.termType,\n      value:    this.value,\n    };\n  }\n}\n\n\n// ## NamedNode constructor\nexport class NamedNode extends Term {\n  // ### The term type of this term\n  get termType() {\n    return 'NamedNode';\n  }\n}\n\n// ## Literal constructor\nexport class Literal extends Term {\n  // ### The term type of this term\n  get termType() {\n    return 'Literal';\n  }\n\n  // ### The text value of this literal\n  get value() {\n    return this.id.substring(1, this.id.lastIndexOf('\"'));\n  }\n\n  // ### The language of this literal\n  get language() {\n    // Find the last quotation mark (e.g., '\"abc\"@en-us')\n    const id = this.id;\n    let atPos = id.lastIndexOf('\"') + 1;\n    // If \"@\" it follows, return the remaining substring; empty otherwise\n    return atPos < id.length && id[atPos++] === '@' ? id.substr(atPos).toLowerCase() : '';\n  }\n\n  // ### The datatype IRI of this literal\n  get datatype() {\n    return new NamedNode(this.datatypeString);\n  }\n\n  // ### The datatype string of this literal\n  get datatypeString() {\n    // Find the last quotation mark (e.g., '\"abc\"^^http://ex.org/types#t')\n    const id = this.id, dtPos = id.lastIndexOf('\"') + 1;\n    const char = dtPos < id.length ? id[dtPos] : '';\n    // If \"^\" it follows, return the remaining substring\n    return char === '^' ? id.substr(dtPos + 2) :\n           // If \"@\" follows, return rdf:langString; xsd:string otherwise\n           (char !== '@' ? xsd.string : rdf.langString);\n  }\n\n  // ### Returns whether this object represents the same term as the other\n  equals(other) {\n    // If both literals were created by this library,\n    // equality can be computed through ids\n    if (other instanceof Literal)\n      return this.id === other.id;\n    // Otherwise, compare term type, value, language, and datatype\n    return !!other && !!other.datatype &&\n                      this.termType === other.termType &&\n                      this.value    === other.value    &&\n                      this.language === other.language &&\n                      this.datatype.value === other.datatype.value;\n  }\n\n  toJSON() {\n    return {\n      termType: this.termType,\n      value:    this.value,\n      language: this.language,\n      datatype: { termType: 'NamedNode', value: this.datatypeString },\n    };\n  }\n}\n\n// ## BlankNode constructor\nexport class BlankNode extends Term {\n  constructor(name) {\n    super(`_:${name}`);\n  }\n\n  // ### The term type of this term\n  get termType() {\n    return 'BlankNode';\n  }\n\n  // ### The name of this blank node\n  get value() {\n    return this.id.substr(2);\n  }\n}\n\nexport class Variable extends Term {\n  constructor(name) {\n    super(`?${name}`);\n  }\n\n  // ### The term type of this term\n  get termType() {\n    return 'Variable';\n  }\n\n  // ### The name of this variable\n  get value() {\n    return this.id.substr(1);\n  }\n}\n\n// ## DefaultGraph constructor\nexport class DefaultGraph extends Term {\n  constructor() {\n    super('');\n    return DEFAULTGRAPH || this;\n  }\n\n  // ### The term type of this term\n  get termType() {\n    return 'DefaultGraph';\n  }\n\n  // ### Returns whether this object represents the same term as the other\n  equals(other) {\n    // If both terms were created by this library,\n    // equality can be computed through strict equality;\n    // otherwise, compare term types.\n    return (this === other) || (!!other && (this.termType === other.termType));\n  }\n}\n\n// ## DefaultGraph singleton\nDEFAULTGRAPH = new DefaultGraph();\n\n\n// ### Constructs a term from the given internal string ID\nexport function termFromId(id, factory) {\n  factory = factory || DataFactory;\n\n  // Falsy value or empty string indicate the default graph\n  if (!id)\n    return factory.defaultGraph();\n\n  // Identify the term type based on the first character\n  switch (id[0]) {\n  case '?':\n    return factory.variable(id.substr(1));\n  case '_':\n    return factory.blankNode(id.substr(2));\n  case '\"':\n    // Shortcut for internal literals\n    if (factory === DataFactory)\n      return new Literal(id);\n    // Literal without datatype or language\n    if (id[id.length - 1] === '\"')\n      return factory.literal(id.substr(1, id.length - 2));\n    // Literal with datatype or language\n    const endPos = id.lastIndexOf('\"', id.length - 1);\n    return factory.literal(id.substr(1, endPos - 1),\n            id[endPos + 1] === '@' ? id.substr(endPos + 2)\n                                   : factory.namedNode(id.substr(endPos + 3)));\n  case '<':\n    const components = quadId.exec(id);\n    return factory.quad(\n      termFromId(unescapeQuotes(components[1]), factory),\n      termFromId(unescapeQuotes(components[2]), factory),\n      termFromId(unescapeQuotes(components[3]), factory),\n      components[4] && termFromId(unescapeQuotes(components[4]), factory)\n    );\n  default:\n    return factory.namedNode(id);\n  }\n}\n\n// ### Constructs an internal string ID from the given term or ID string\nexport function termToId(term) {\n  if (typeof term === 'string')\n    return term;\n  if (term instanceof Term && term.termType !== 'Quad')\n    return term.id;\n  if (!term)\n    return DEFAULTGRAPH.id;\n\n  // Term instantiated with another library\n  switch (term.termType) {\n  case 'NamedNode':    return term.value;\n  case 'BlankNode':    return `_:${term.value}`;\n  case 'Variable':     return `?${term.value}`;\n  case 'DefaultGraph': return '';\n  case 'Literal':      return `\"${term.value}\"${\n    term.language ? `@${term.language}` :\n      (term.datatype && term.datatype.value !== xsd.string ? `^^${term.datatype.value}` : '')}`;\n  case 'Quad':\n    // To identify RDF* quad components, we escape quotes by doubling them.\n    // This avoids the overhead of backslash parsing of Turtle-like syntaxes.\n    return `<<${\n        escapeQuotes(termToId(term.subject))\n      } ${\n        escapeQuotes(termToId(term.predicate))\n      } ${\n        escapeQuotes(termToId(term.object))\n      }${\n        (isDefaultGraph(term.graph)) ? '' : ` ${termToId(term.graph)}`\n      }>>`;\n  default: throw new Error(`Unexpected termType: ${term.termType}`);\n  }\n}\n\n\n// ## Quad constructor\nexport class Quad extends Term {\n  constructor(subject, predicate, object, graph) {\n    super('');\n    this.subject   = subject;\n    this.predicate = predicate;\n    this.object    = object;\n    this.graph     = graph || DEFAULTGRAPH;\n  }\n\n  // ### The term type of this term\n  get termType() {\n    return 'Quad';\n  }\n\n  // ### Returns a plain object representation of this quad\n  toJSON() {\n    return {\n      termType:  this.termType,\n      subject:   this.subject.toJSON(),\n      predicate: this.predicate.toJSON(),\n      object:    this.object.toJSON(),\n      graph:     this.graph.toJSON(),\n    };\n  }\n\n  // ### Returns whether this object represents the same quad as the other\n  equals(other) {\n    return !!other && this.subject.equals(other.subject)     &&\n                      this.predicate.equals(other.predicate) &&\n                      this.object.equals(other.object)       &&\n                      this.graph.equals(other.graph);\n  }\n}\nexport { Quad as Triple };\n\n// ### Escapes the quotes within the given literal\nexport function escapeQuotes(id) {\n  return id.replace(escapedLiteral, (_, quoted) => `\"${quoted.replace(/\"/g, '\"\"')}`);\n}\n\n// ### Unescapes the quotes within the given literal\nexport function unescapeQuotes(id) {\n  return id.replace(escapedLiteral, (_, quoted) => `\"${quoted.replace(/\"\"/g, '\"')}`);\n}\n\n// ### Creates an IRI\nfunction namedNode(iri) {\n  return new NamedNode(iri);\n}\n\n// ### Creates a blank node\nfunction blankNode(name) {\n  return new BlankNode(name || `n3-${_blankNodeCounter++}`);\n}\n\n// ### Creates a literal\nfunction literal(value, languageOrDataType) {\n  // Create a language-tagged string\n  if (typeof languageOrDataType === 'string')\n    return new Literal(`\"${value}\"@${languageOrDataType.toLowerCase()}`);\n\n  // Automatically determine datatype for booleans and numbers\n  let datatype = languageOrDataType ? languageOrDataType.value : '';\n  if (datatype === '') {\n    // Convert a boolean\n    if (typeof value === 'boolean')\n      datatype = xsd.boolean;\n    // Convert an integer or double\n    else if (typeof value === 'number') {\n      if (Number.isFinite(value))\n        datatype = Number.isInteger(value) ? xsd.integer : xsd.double;\n      else {\n        datatype = xsd.double;\n        if (!Number.isNaN(value))\n          value = value > 0 ? 'INF' : '-INF';\n      }\n    }\n  }\n\n  // Create a datatyped literal\n  return (datatype === '' || datatype === xsd.string) ?\n    new Literal(`\"${value}\"`) :\n    new Literal(`\"${value}\"^^${datatype}`);\n}\n\n// ### Creates a variable\nfunction variable(name) {\n  return new Variable(name);\n}\n\n// ### Returns the default graph\nfunction defaultGraph() {\n  return DEFAULTGRAPH;\n}\n\n// ### Creates a quad\nfunction quad(subject, predicate, object, graph) {\n  return new Quad(subject, predicate, object, graph);\n}\n","// **N3Parser** parses N3 documents.\nimport N3Lexer from './N3Lexer';\nimport N3DataFactory from './N3DataFactory';\nimport namespaces from './IRIs';\n\nlet blankNodePrefix = 0;\n\n// ## Constructor\nexport default class N3Parser {\n  constructor(options) {\n    this._contextStack = [];\n    this._graph = null;\n\n    // Set the document IRI\n    options = options || {};\n    this._setBase(options.baseIRI);\n    options.factory && initDataFactory(this, options.factory);\n\n    // Set supported features depending on the format\n    const format = (typeof options.format === 'string') ?\n                 options.format.match(/\\w*$/)[0].toLowerCase() : '',\n        isTurtle = /turtle/.test(format), isTriG = /trig/.test(format),\n        isNTriples = /triple/.test(format), isNQuads = /quad/.test(format),\n        isN3 = this._n3Mode = /n3/.test(format),\n        isLineMode = isNTriples || isNQuads;\n    if (!(this._supportsNamedGraphs = !(isTurtle || isN3)))\n      this._readPredicateOrNamedGraph = this._readPredicate;\n    // Support triples in other graphs\n    this._supportsQuads = !(isTurtle || isTriG || isNTriples || isN3);\n    // Support nesting of triples\n    this._supportsRDFStar = format === '' || /star|\\*$/.test(format);\n    // Disable relative IRIs in N-Triples or N-Quads mode\n    if (isLineMode)\n      this._resolveRelativeIRI = iri => { return null; };\n    this._blankNodePrefix = typeof options.blankNodePrefix !== 'string' ? '' :\n                              options.blankNodePrefix.replace(/^(?!_:)/, '_:');\n    this._lexer = options.lexer || new N3Lexer({ lineMode: isLineMode, n3: isN3 });\n    // Disable explicit quantifiers by default\n    this._explicitQuantifiers = !!options.explicitQuantifiers;\n  }\n\n  // ## Static class methods\n\n  // ### `_resetBlankNodePrefix` restarts blank node prefix identification\n  static _resetBlankNodePrefix() {\n    blankNodePrefix = 0;\n  }\n\n  // ## Private methods\n\n  // ### `_setBase` sets the base IRI to resolve relative IRIs\n  _setBase(baseIRI) {\n    if (!baseIRI) {\n      this._base = '';\n      this._basePath = '';\n    }\n    else {\n      // Remove fragment if present\n      const fragmentPos = baseIRI.indexOf('#');\n      if (fragmentPos >= 0)\n        baseIRI = baseIRI.substr(0, fragmentPos);\n      // Set base IRI and its components\n      this._base = baseIRI;\n      this._basePath   = baseIRI.indexOf('/') < 0 ? baseIRI :\n                         baseIRI.replace(/[^\\/?]*(?:\\?.*)?$/, '');\n      baseIRI = baseIRI.match(/^(?:([a-z][a-z0-9+.-]*:))?(?:\\/\\/[^\\/]*)?/i);\n      this._baseRoot   = baseIRI[0];\n      this._baseScheme = baseIRI[1];\n    }\n  }\n\n  // ### `_saveContext` stores the current parsing context\n  // when entering a new scope (list, blank node, formula)\n  _saveContext(type, graph, subject, predicate, object) {\n    const n3Mode = this._n3Mode;\n    this._contextStack.push({\n      subject: subject, predicate: predicate, object: object,\n      graph: graph, type: type,\n      inverse: n3Mode ? this._inversePredicate : false,\n      blankPrefix: n3Mode ? this._prefixes._ : '',\n      quantified: n3Mode ? this._quantified : null,\n    });\n    // The settings below only apply to N3 streams\n    if (n3Mode) {\n      // Every new scope resets the predicate direction\n      this._inversePredicate = false;\n      // In N3, blank nodes are scoped to a formula\n      // (using a dot as separator, as a blank node label cannot start with it)\n      this._prefixes._ = (this._graph ? `${this._graph.id.substr(2)}.` : '.');\n      // Quantifiers are scoped to a formula\n      this._quantified = Object.create(this._quantified);\n    }\n  }\n\n  // ### `_restoreContext` restores the parent context\n  // when leaving a scope (list, blank node, formula)\n  _restoreContext() {\n    const context = this._contextStack.pop(), n3Mode = this._n3Mode;\n    this._subject   = context.subject;\n    this._predicate = context.predicate;\n    this._object    = context.object;\n    this._graph     = context.graph;\n    // The settings below only apply to N3 streams\n    if (n3Mode) {\n      this._inversePredicate = context.inverse;\n      this._prefixes._ = context.blankPrefix;\n      this._quantified = context.quantified;\n    }\n  }\n\n  // ### `_readInTopContext` reads a token when in the top context\n  _readInTopContext(token) {\n    switch (token.type) {\n    // If an EOF token arrives in the top context, signal that we're done\n    case 'eof':\n      if (this._graph !== null)\n        return this._error('Unclosed graph', token);\n      delete this._prefixes._;\n      return this._callback(null, null, this._prefixes);\n    // It could be a prefix declaration\n    case 'PREFIX':\n      this._sparqlStyle = true;\n    case '@prefix':\n      return this._readPrefix;\n    // It could be a base declaration\n    case 'BASE':\n      this._sparqlStyle = true;\n    case '@base':\n      return this._readBaseIRI;\n    // It could be a graph\n    case '{':\n      if (this._supportsNamedGraphs) {\n        this._graph = '';\n        this._subject = null;\n        return this._readSubject;\n      }\n    case 'GRAPH':\n      if (this._supportsNamedGraphs)\n        return this._readNamedGraphLabel;\n    // Otherwise, the next token must be a subject\n    default:\n      return this._readSubject(token);\n    }\n  }\n\n  // ### `_readEntity` reads an IRI, prefixed name, blank node, or variable\n  _readEntity(token, quantifier) {\n    let value;\n    switch (token.type) {\n    // Read a relative or absolute IRI\n    case 'IRI':\n    case 'typeIRI':\n      const iri = this._resolveIRI(token.value);\n      if (iri === null)\n        return this._error('Invalid IRI', token);\n      value = this._namedNode(iri);\n      break;\n    // Read a prefixed name\n    case 'type':\n    case 'prefixed':\n      const prefix = this._prefixes[token.prefix];\n      if (prefix === undefined)\n        return this._error(`Undefined prefix \"${token.prefix}:\"`, token);\n      value = this._namedNode(prefix + token.value);\n      break;\n    // Read a blank node\n    case 'blank':\n      value = this._blankNode(this._prefixes[token.prefix] + token.value);\n      break;\n    // Read a variable\n    case 'var':\n      value = this._variable(token.value.substr(1));\n      break;\n    // Everything else is not an entity\n    default:\n      return this._error(`Expected entity but got ${token.type}`, token);\n    }\n    // In N3 mode, replace the entity if it is quantified\n    if (!quantifier && this._n3Mode && (value.id in this._quantified))\n      value = this._quantified[value.id];\n    return value;\n  }\n\n  // ### `_readSubject` reads a quad's subject\n  _readSubject(token) {\n    this._predicate = null;\n    switch (token.type) {\n    case '[':\n      // Start a new quad with a new blank node as subject\n      this._saveContext('blank', this._graph,\n                        this._subject = this._blankNode(), null, null);\n      return this._readBlankNodeHead;\n    case '(':\n      // Start a new list\n      this._saveContext('list', this._graph, this.RDF_NIL, null, null);\n      this._subject = null;\n      return this._readListItem;\n    case '{':\n      // Start a new formula\n      if (!this._n3Mode)\n        return this._error('Unexpected graph', token);\n      this._saveContext('formula', this._graph,\n                        this._graph = this._blankNode(), null, null);\n      return this._readSubject;\n    case '}':\n       // No subject; the graph in which we are reading is closed instead\n      return this._readPunctuation(token);\n    case '@forSome':\n      if (!this._n3Mode)\n        return this._error('Unexpected \"@forSome\"', token);\n      this._subject = null;\n      this._predicate = this.N3_FORSOME;\n      this._quantifier = this._blankNode;\n      return this._readQuantifierList;\n    case '@forAll':\n      if (!this._n3Mode)\n        return this._error('Unexpected \"@forAll\"', token);\n      this._subject = null;\n      this._predicate = this.N3_FORALL;\n      this._quantifier = this._variable;\n      return this._readQuantifierList;\n    case 'literal':\n      if (!this._n3Mode)\n        return this._error('Unexpected literal', token);\n\n      if (token.prefix.length === 0) {\n        this._literalValue = token.value;\n        return this._completeSubjectLiteral;\n      }\n      else\n        this._subject = this._literal(token.value, this._namedNode(token.prefix));\n\n      break;\n    case '<<':\n      if (!this._supportsRDFStar)\n        return this._error('Unexpected RDF* syntax', token);\n      this._saveContext('<<', this._graph, null, null, null);\n      this._graph = null;\n      return this._readSubject;\n    default:\n      // Read the subject entity\n      if ((this._subject = this._readEntity(token)) === undefined)\n        return;\n      // In N3 mode, the subject might be a path\n      if (this._n3Mode)\n        return this._getPathReader(this._readPredicateOrNamedGraph);\n    }\n\n    // The next token must be a predicate,\n    // or, if the subject was actually a graph IRI, a named graph\n    return this._readPredicateOrNamedGraph;\n  }\n\n  // ### `_readPredicate` reads a quad's predicate\n  _readPredicate(token) {\n    const type = token.type;\n    switch (type) {\n    case 'inverse':\n      this._inversePredicate = true;\n    case 'abbreviation':\n      this._predicate = this.ABBREVIATIONS[token.value];\n      break;\n    case '.':\n    case ']':\n    case '}':\n      // Expected predicate didn't come, must have been trailing semicolon\n      if (this._predicate === null)\n        return this._error(`Unexpected ${type}`, token);\n      this._subject = null;\n      return type === ']' ? this._readBlankNodeTail(token) : this._readPunctuation(token);\n    case ';':\n      // Additional semicolons can be safely ignored\n      return this._predicate !== null ? this._readPredicate :\n             this._error('Expected predicate but got ;', token);\n    case 'blank':\n      if (!this._n3Mode)\n        return this._error('Disallowed blank node as predicate', token);\n    default:\n      if ((this._predicate = this._readEntity(token)) === undefined)\n        return;\n    }\n    // The next token must be an object\n    return this._readObject;\n  }\n\n  // ### `_readObject` reads a quad's object\n  _readObject(token) {\n    switch (token.type) {\n    case 'literal':\n      // Regular literal, can still get a datatype or language\n      if (token.prefix.length === 0) {\n        this._literalValue = token.value;\n        return this._readDataTypeOrLang;\n      }\n      // Pre-datatyped string literal (prefix stores the datatype)\n      else\n        this._object = this._literal(token.value, this._namedNode(token.prefix));\n      break;\n    case '[':\n      // Start a new quad with a new blank node as subject\n      this._saveContext('blank', this._graph, this._subject, this._predicate,\n                        this._subject = this._blankNode());\n      return this._readBlankNodeHead;\n    case '(':\n      // Start a new list\n      this._saveContext('list', this._graph, this._subject, this._predicate, this.RDF_NIL);\n      this._subject = null;\n      return this._readListItem;\n    case '{':\n      // Start a new formula\n      if (!this._n3Mode)\n        return this._error('Unexpected graph', token);\n      this._saveContext('formula', this._graph, this._subject, this._predicate,\n                        this._graph = this._blankNode());\n      return this._readSubject;\n    case '<<':\n      if (!this._supportsRDFStar)\n        return this._error('Unexpected RDF* syntax', token);\n      this._saveContext('<<', this._graph, this._subject, this._predicate, null);\n      this._graph = null;\n      return this._readSubject;\n    default:\n      // Read the object entity\n      if ((this._object = this._readEntity(token)) === undefined)\n        return;\n      // In N3 mode, the object might be a path\n      if (this._n3Mode)\n        return this._getPathReader(this._getContextEndReader());\n    }\n    return this._getContextEndReader();\n  }\n\n  // ### `_readPredicateOrNamedGraph` reads a quad's predicate, or a named graph\n  _readPredicateOrNamedGraph(token) {\n    return token.type === '{' ? this._readGraph(token) : this._readPredicate(token);\n  }\n\n  // ### `_readGraph` reads a graph\n  _readGraph(token) {\n    if (token.type !== '{')\n      return this._error(`Expected graph but got ${token.type}`, token);\n    // The \"subject\" we read is actually the GRAPH's label\n    this._graph = this._subject, this._subject = null;\n    return this._readSubject;\n  }\n\n  // ### `_readBlankNodeHead` reads the head of a blank node\n  _readBlankNodeHead(token) {\n    if (token.type === ']') {\n      this._subject = null;\n      return this._readBlankNodeTail(token);\n    }\n    else {\n      this._predicate = null;\n      return this._readPredicate(token);\n    }\n  }\n\n  // ### `_readBlankNodeTail` reads the end of a blank node\n  _readBlankNodeTail(token) {\n    if (token.type !== ']')\n      return this._readBlankNodePunctuation(token);\n\n    // Store blank node quad\n    if (this._subject !== null)\n      this._emit(this._subject, this._predicate, this._object, this._graph);\n\n    // Restore the parent context containing this blank node\n    const empty = this._predicate === null;\n    this._restoreContext();\n    // If the blank node was the subject, continue reading the predicate\n    if (this._object === null)\n      // If the blank node was empty, it could be a named graph label\n      return empty ? this._readPredicateOrNamedGraph : this._readPredicateAfterBlank;\n    // If the blank node was the object, restore previous context and read punctuation\n    else\n      return this._getContextEndReader();\n  }\n\n  // ### `_readPredicateAfterBlank` reads a predicate after an anonymous blank node\n  _readPredicateAfterBlank(token) {\n    switch (token.type) {\n    case '.':\n    case '}':\n      // No predicate is coming if the triple is terminated here\n      this._subject = null;\n      return this._readPunctuation(token);\n    default:\n      return this._readPredicate(token);\n    }\n  }\n\n  // ### `_readListItem` reads items from a list\n  _readListItem(token) {\n    let item = null,                      // The item of the list\n        list = null,                      // The list itself\n        next = this._readListItem;        // The next function to execute\n    const previousList = this._subject,   // The previous list that contains this list\n        stack = this._contextStack,       // The stack of parent contexts\n        parent = stack[stack.length - 1]; // The parent containing the current list\n\n    switch (token.type) {\n    case '[':\n      // Stack the current list quad and start a new quad with a blank node as subject\n      this._saveContext('blank', this._graph,\n                        list = this._blankNode(), this.RDF_FIRST,\n                        this._subject = item = this._blankNode());\n      next = this._readBlankNodeHead;\n      break;\n    case '(':\n      // Stack the current list quad and start a new list\n      this._saveContext('list', this._graph,\n                        list = this._blankNode(), this.RDF_FIRST, this.RDF_NIL);\n      this._subject = null;\n      break;\n    case ')':\n      // Closing the list; restore the parent context\n      this._restoreContext();\n      // If this list is contained within a parent list, return the membership quad here.\n      // This will be `<parent list element> rdf:first <this list>.`.\n      if (stack.length !== 0 && stack[stack.length - 1].type === 'list')\n        this._emit(this._subject, this._predicate, this._object, this._graph);\n      // Was this list the parent's subject?\n      if (this._predicate === null) {\n        // The next token is the predicate\n        next = this._readPredicate;\n        // No list tail if this was an empty list\n        if (this._subject === this.RDF_NIL)\n          return next;\n      }\n      // The list was in the parent context's object\n      else {\n        next = this._getContextEndReader();\n        // No list tail if this was an empty list\n        if (this._object === this.RDF_NIL)\n          return next;\n      }\n      // Close the list by making the head nil\n      list = this.RDF_NIL;\n      break;\n    case 'literal':\n      // Regular literal, can still get a datatype or language\n      if (token.prefix.length === 0) {\n        this._literalValue = token.value;\n        next = this._readListItemDataTypeOrLang;\n      }\n      // Pre-datatyped string literal (prefix stores the datatype)\n      else {\n        item = this._literal(token.value, this._namedNode(token.prefix));\n        next = this._getContextEndReader();\n      }\n      break;\n    case '{':\n      // Start a new formula\n      if (!this._n3Mode)\n        return this._error('Unexpected graph', token);\n      this._saveContext('formula', this._graph, this._subject, this._predicate,\n                        this._graph = this._blankNode());\n      return this._readSubject;\n    default:\n      if ((item = this._readEntity(token)) === undefined)\n        return;\n    }\n\n     // Create a new blank node if no item head was assigned yet\n    if (list === null)\n      this._subject = list = this._blankNode();\n\n    // Is this the first element of the list?\n    if (previousList === null) {\n      // This list is either the subject or the object of its parent\n      if (parent.predicate === null)\n        parent.subject = list;\n      else\n        parent.object = list;\n    }\n    else {\n      // Continue the previous list with the current list\n      this._emit(previousList, this.RDF_REST, list, this._graph);\n    }\n    // If an item was read, add it to the list\n    if (item !== null) {\n      // In N3 mode, the item might be a path\n      if (this._n3Mode && (token.type === 'IRI' || token.type === 'prefixed')) {\n        // Create a new context to add the item's path\n        this._saveContext('item', this._graph, list, this.RDF_FIRST, item);\n        this._subject = item, this._predicate = null;\n        // _readPath will restore the context and output the item\n        return this._getPathReader(this._readListItem);\n      }\n      // Output the item\n      this._emit(list, this.RDF_FIRST, item, this._graph);\n    }\n    return next;\n  }\n\n  // ### `_readDataTypeOrLang` reads an _optional_ datatype or language\n  _readDataTypeOrLang(token) {\n    return this._completeObjectLiteral(token, false);\n  }\n\n\n  // ### `_readListItemDataTypeOrLang` reads an _optional_ datatype or language in a list\n  _readListItemDataTypeOrLang(token) {\n    return this._completeObjectLiteral(token, true);\n  }\n\n  // ### `_completeLiteral` completes a literal with an optional datatype or language\n  _completeLiteral(token) {\n    // Create a simple string literal by default\n    let literal = this._literal(this._literalValue);\n\n    switch (token.type) {\n    // Create a datatyped literal\n    case 'type':\n    case 'typeIRI':\n      const datatype = this._readEntity(token);\n      if (datatype === undefined) return; // No datatype means an error occurred\n      literal = this._literal(this._literalValue, datatype);\n      token = null;\n      break;\n    // Create a language-tagged string\n    case 'langcode':\n      literal = this._literal(this._literalValue, token.value);\n      token = null;\n      break;\n    }\n\n    return { token, literal };\n  }\n\n  // Completes a literal in subject position\n  _completeSubjectLiteral(token) {\n    this._subject = this._completeLiteral(token).literal;\n    return this._readPredicateOrNamedGraph;\n  }\n\n  // Completes a literal in object position\n  _completeObjectLiteral(token, listItem) {\n    const completed = this._completeLiteral(token);\n    if (!completed)\n      return;\n    this._object = completed.literal;\n\n    // If this literal was part of a list, write the item\n    // (we could also check the context stack, but passing in a flag is faster)\n    if (listItem)\n      this._emit(this._subject, this.RDF_FIRST, this._object, this._graph);\n    // If the token was consumed, continue with the rest of the input\n    if (completed.token === null)\n      return this._getContextEndReader();\n    // Otherwise, consume the token now\n    else {\n      this._readCallback = this._getContextEndReader();\n      return this._readCallback(completed.token);\n    }\n  }\n\n  // ### `_readFormulaTail` reads the end of a formula\n  _readFormulaTail(token) {\n    if (token.type !== '}')\n      return this._readPunctuation(token);\n\n    // Store the last quad of the formula\n    if (this._subject !== null)\n      this._emit(this._subject, this._predicate, this._object, this._graph);\n\n    // Restore the parent context containing this formula\n    this._restoreContext();\n    // If the formula was the subject, continue reading the predicate.\n    // If the formula was the object, read punctuation.\n    return this._object === null ? this._readPredicate : this._getContextEndReader();\n  }\n\n  // ### `_readPunctuation` reads punctuation between quads or quad parts\n  _readPunctuation(token) {\n    let next, graph = this._graph;\n    const subject = this._subject, inversePredicate = this._inversePredicate;\n    switch (token.type) {\n    // A closing brace ends a graph\n    case '}':\n      if (this._graph === null)\n        return this._error('Unexpected graph closing', token);\n      if (this._n3Mode)\n        return this._readFormulaTail(token);\n      this._graph = null;\n    // A dot just ends the statement, without sharing anything with the next\n    case '.':\n      this._subject = null;\n      next = this._contextStack.length ? this._readSubject : this._readInTopContext;\n      if (inversePredicate) this._inversePredicate = false;\n      break;\n    // Semicolon means the subject is shared; predicate and object are different\n    case ';':\n      next = this._readPredicate;\n      break;\n    // Comma means both the subject and predicate are shared; the object is different\n    case ',':\n      next = this._readObject;\n      break;\n    default:\n      // An entity means this is a quad (only allowed if not already inside a graph)\n      if (this._supportsQuads && this._graph === null && (graph = this._readEntity(token)) !== undefined) {\n        next = this._readQuadPunctuation;\n        break;\n      }\n      return this._error(`Expected punctuation to follow \"${this._object.id}\"`, token);\n    }\n    // A quad has been completed now, so return it\n    if (subject !== null) {\n      const predicate = this._predicate, object = this._object;\n      if (!inversePredicate)\n        this._emit(subject, predicate, object,  graph);\n      else\n        this._emit(object,  predicate, subject, graph);\n    }\n    return next;\n  }\n\n    // ### `_readBlankNodePunctuation` reads punctuation in a blank node\n  _readBlankNodePunctuation(token) {\n    let next;\n    switch (token.type) {\n    // Semicolon means the subject is shared; predicate and object are different\n    case ';':\n      next = this._readPredicate;\n      break;\n    // Comma means both the subject and predicate are shared; the object is different\n    case ',':\n      next = this._readObject;\n      break;\n    default:\n      return this._error(`Expected punctuation to follow \"${this._object.id}\"`, token);\n    }\n    // A quad has been completed now, so return it\n    this._emit(this._subject, this._predicate, this._object, this._graph);\n    return next;\n  }\n\n  // ### `_readQuadPunctuation` reads punctuation after a quad\n  _readQuadPunctuation(token) {\n    if (token.type !== '.')\n      return this._error('Expected dot to follow quad', token);\n    return this._readInTopContext;\n  }\n\n  // ### `_readPrefix` reads the prefix of a prefix declaration\n  _readPrefix(token) {\n    if (token.type !== 'prefix')\n      return this._error('Expected prefix to follow @prefix', token);\n    this._prefix = token.value;\n    return this._readPrefixIRI;\n  }\n\n  // ### `_readPrefixIRI` reads the IRI of a prefix declaration\n  _readPrefixIRI(token) {\n    if (token.type !== 'IRI')\n      return this._error(`Expected IRI to follow prefix \"${this._prefix}:\"`, token);\n    const prefixNode = this._readEntity(token);\n    this._prefixes[this._prefix] = prefixNode.value;\n    this._prefixCallback(this._prefix, prefixNode);\n    return this._readDeclarationPunctuation;\n  }\n\n  // ### `_readBaseIRI` reads the IRI of a base declaration\n  _readBaseIRI(token) {\n    const iri = token.type === 'IRI' && this._resolveIRI(token.value);\n    if (!iri)\n      return this._error('Expected valid IRI to follow base declaration', token);\n    this._setBase(iri);\n    return this._readDeclarationPunctuation;\n  }\n\n  // ### `_readNamedGraphLabel` reads the label of a named graph\n  _readNamedGraphLabel(token) {\n    switch (token.type) {\n    case 'IRI':\n    case 'blank':\n    case 'prefixed':\n      return this._readSubject(token), this._readGraph;\n    case '[':\n      return this._readNamedGraphBlankLabel;\n    default:\n      return this._error('Invalid graph label', token);\n    }\n  }\n\n  // ### `_readNamedGraphLabel` reads a blank node label of a named graph\n  _readNamedGraphBlankLabel(token) {\n    if (token.type !== ']')\n      return this._error('Invalid graph label', token);\n    this._subject = this._blankNode();\n    return this._readGraph;\n  }\n\n  // ### `_readDeclarationPunctuation` reads the punctuation of a declaration\n  _readDeclarationPunctuation(token) {\n    // SPARQL-style declarations don't have punctuation\n    if (this._sparqlStyle) {\n      this._sparqlStyle = false;\n      return this._readInTopContext(token);\n    }\n\n    if (token.type !== '.')\n      return this._error('Expected declaration to end with a dot', token);\n    return this._readInTopContext;\n  }\n\n  // Reads a list of quantified symbols from a @forSome or @forAll statement\n  _readQuantifierList(token) {\n    let entity;\n    switch (token.type) {\n    case 'IRI':\n    case 'prefixed':\n      if ((entity = this._readEntity(token, true)) !== undefined)\n        break;\n    default:\n      return this._error(`Unexpected ${token.type}`, token);\n    }\n    // Without explicit quantifiers, map entities to a quantified entity\n    if (!this._explicitQuantifiers)\n      this._quantified[entity.id] = this._quantifier(this._blankNode().value);\n    // With explicit quantifiers, output the reified quantifier\n    else {\n      // If this is the first item, start a new quantifier list\n      if (this._subject === null)\n        this._emit(this._graph || this.DEFAULTGRAPH, this._predicate,\n                   this._subject = this._blankNode(), this.QUANTIFIERS_GRAPH);\n      // Otherwise, continue the previous list\n      else\n        this._emit(this._subject, this.RDF_REST,\n                   this._subject = this._blankNode(), this.QUANTIFIERS_GRAPH);\n      // Output the list item\n      this._emit(this._subject, this.RDF_FIRST, entity, this.QUANTIFIERS_GRAPH);\n    }\n    return this._readQuantifierPunctuation;\n  }\n\n  // Reads punctuation from a @forSome or @forAll statement\n  _readQuantifierPunctuation(token) {\n    // Read more quantifiers\n    if (token.type === ',')\n      return this._readQuantifierList;\n    // End of the quantifier list\n    else {\n      // With explicit quantifiers, close the quantifier list\n      if (this._explicitQuantifiers) {\n        this._emit(this._subject, this.RDF_REST, this.RDF_NIL, this.QUANTIFIERS_GRAPH);\n        this._subject = null;\n      }\n      // Read a dot\n      this._readCallback = this._getContextEndReader();\n      return this._readCallback(token);\n    }\n  }\n\n  // ### `_getPathReader` reads a potential path and then resumes with the given function\n  _getPathReader(afterPath) {\n    this._afterPath = afterPath;\n    return this._readPath;\n  }\n\n  // ### `_readPath` reads a potential path\n  _readPath(token) {\n    switch (token.type) {\n    // Forward path\n    case '!': return this._readForwardPath;\n    // Backward path\n    case '^': return this._readBackwardPath;\n    // Not a path; resume reading where we left off\n    default:\n      const stack = this._contextStack, parent = stack.length && stack[stack.length - 1];\n      // If we were reading a list item, we still need to output it\n      if (parent && parent.type === 'item') {\n        // The list item is the remaining subejct after reading the path\n        const item = this._subject;\n        // Switch back to the context of the list\n        this._restoreContext();\n        // Output the list item\n        this._emit(this._subject, this.RDF_FIRST, item, this._graph);\n      }\n      return this._afterPath(token);\n    }\n  }\n\n  // ### `_readForwardPath` reads a '!' path\n  _readForwardPath(token) {\n    let subject, predicate;\n    const object = this._blankNode();\n    // The next token is the predicate\n    if ((predicate = this._readEntity(token)) === undefined)\n      return;\n    // If we were reading a subject, replace the subject by the path's object\n    if (this._predicate === null)\n      subject = this._subject, this._subject = object;\n    // If we were reading an object, replace the subject by the path's object\n    else\n      subject = this._object,  this._object  = object;\n    // Emit the path's current quad and read its next section\n    this._emit(subject, predicate, object, this._graph);\n    return this._readPath;\n  }\n\n  // ### `_readBackwardPath` reads a '^' path\n  _readBackwardPath(token) {\n    const subject = this._blankNode();\n    let predicate, object;\n    // The next token is the predicate\n    if ((predicate = this._readEntity(token)) === undefined)\n      return;\n    // If we were reading a subject, replace the subject by the path's subject\n    if (this._predicate === null)\n      object = this._subject, this._subject = subject;\n    // If we were reading an object, replace the subject by the path's subject\n    else\n      object = this._object,  this._object  = subject;\n    // Emit the path's current quad and read its next section\n    this._emit(subject, predicate, object, this._graph);\n    return this._readPath;\n  }\n\n  // ### `_readRDFStarTailOrGraph` reads the graph of a nested RDF* quad or the end of a nested RDF* triple\n  _readRDFStarTailOrGraph(token) {\n    if (token.type !== '>>') {\n      // An entity means this is a quad (only allowed if not already inside a graph)\n      if (this._supportsQuads && this._graph === null && (this._graph = this._readEntity(token)) !== undefined)\n        return this._readRDFStarTail;\n      return this._error(`Expected >> to follow \"${this._object.id}\"`, token);\n    }\n    return this._readRDFStarTail(token);\n  }\n\n  // ### `_readRDFStarTail` reads the end of a nested RDF* triple\n  _readRDFStarTail(token) {\n    if (token.type !== '>>')\n      return this._error(`Expected >> but got ${token.type}`, token);\n    // Read the quad and restore the previous context\n    const quad = this._quad(this._subject, this._predicate, this._object,\n      this._graph || this.DEFAULTGRAPH);\n    this._restoreContext();\n    // If the triple was the subject, continue by reading the predicate.\n    if (this._subject === null) {\n      this._subject = quad;\n      return this._readPredicate;\n    }\n    // If the triple was the object, read context end.\n    else {\n      this._object = quad;\n      return this._getContextEndReader();\n    }\n  }\n\n  // ### `_getContextEndReader` gets the next reader function at the end of a context\n  _getContextEndReader() {\n    const contextStack = this._contextStack;\n    if (!contextStack.length)\n      return this._readPunctuation;\n\n    switch (contextStack[contextStack.length - 1].type) {\n    case 'blank':\n      return this._readBlankNodeTail;\n    case 'list':\n      return this._readListItem;\n    case 'formula':\n      return this._readFormulaTail;\n    case '<<':\n      return this._readRDFStarTailOrGraph;\n    }\n  }\n\n  // ### `_emit` sends a quad through the callback\n  _emit(subject, predicate, object, graph) {\n    this._callback(null, this._quad(subject, predicate, object, graph || this.DEFAULTGRAPH));\n  }\n\n  // ### `_error` emits an error message through the callback\n  _error(message, token) {\n    const err = new Error(`${message} on line ${token.line}.`);\n    err.context = {\n      token: token,\n      line: token.line,\n      previousToken: this._lexer.previousToken,\n    };\n    this._callback(err);\n    this._callback = noop;\n  }\n\n  // ### `_resolveIRI` resolves an IRI against the base path\n  _resolveIRI(iri) {\n    return /^[a-z][a-z0-9+.-]*:/i.test(iri) ? iri : this._resolveRelativeIRI(iri);\n  }\n\n  // ### `_resolveRelativeIRI` resolves an IRI against the base path,\n  // assuming that a base path has been set and that the IRI is indeed relative\n  _resolveRelativeIRI(iri) {\n    // An empty relative IRI indicates the base IRI\n    if (!iri.length)\n      return this._base;\n    // Decide resolving strategy based in the first character\n    switch (iri[0]) {\n    // Resolve relative fragment IRIs against the base IRI\n    case '#': return this._base + iri;\n    // Resolve relative query string IRIs by replacing the query string\n    case '?': return this._base.replace(/(?:\\?.*)?$/, iri);\n    // Resolve root-relative IRIs at the root of the base IRI\n    case '/':\n      // Resolve scheme-relative IRIs to the scheme\n      return (iri[1] === '/' ? this._baseScheme : this._baseRoot) + this._removeDotSegments(iri);\n    // Resolve all other IRIs at the base IRI's path\n    default:\n      // Relative IRIs cannot contain a colon in the first path segment\n      return (/^[^/:]*:/.test(iri)) ? null : this._removeDotSegments(this._basePath + iri);\n    }\n  }\n\n  // ### `_removeDotSegments` resolves './' and '../' path segments in an IRI as per RFC3986\n  _removeDotSegments(iri) {\n    // Don't modify the IRI if it does not contain any dot segments\n    if (!/(^|\\/)\\.\\.?($|[/#?])/.test(iri))\n      return iri;\n\n    // Start with an imaginary slash before the IRI in order to resolve trailing './' and '../'\n    const length = iri.length;\n    let result = '', i = -1, pathStart = -1, segmentStart = 0, next = '/';\n\n    while (i < length) {\n      switch (next) {\n      // The path starts with the first slash after the authority\n      case ':':\n        if (pathStart < 0) {\n          // Skip two slashes before the authority\n          if (iri[++i] === '/' && iri[++i] === '/')\n            // Skip to slash after the authority\n            while ((pathStart = i + 1) < length && iri[pathStart] !== '/')\n              i = pathStart;\n        }\n        break;\n      // Don't modify a query string or fragment\n      case '?':\n      case '#':\n        i = length;\n        break;\n      // Handle '/.' or '/..' path segments\n      case '/':\n        if (iri[i + 1] === '.') {\n          next = iri[++i + 1];\n          switch (next) {\n          // Remove a '/.' segment\n          case '/':\n            result += iri.substring(segmentStart, i - 1);\n            segmentStart = i + 1;\n            break;\n          // Remove a trailing '/.' segment\n          case undefined:\n          case '?':\n          case '#':\n            return result + iri.substring(segmentStart, i) + iri.substr(i + 1);\n          // Remove a '/..' segment\n          case '.':\n            next = iri[++i + 1];\n            if (next === undefined || next === '/' || next === '?' || next === '#') {\n              result += iri.substring(segmentStart, i - 2);\n              // Try to remove the parent path from result\n              if ((segmentStart = result.lastIndexOf('/')) >= pathStart)\n                result = result.substr(0, segmentStart);\n              // Remove a trailing '/..' segment\n              if (next !== '/')\n                return `${result}/${iri.substr(i + 1)}`;\n              segmentStart = i + 1;\n            }\n          }\n        }\n      }\n      next = iri[++i];\n    }\n    return result + iri.substring(segmentStart);\n  }\n\n  // ## Public methods\n\n  // ### `parse` parses the N3 input and emits each parsed quad through the callback\n  parse(input, quadCallback, prefixCallback) {\n    // The read callback is the next function to be executed when a token arrives.\n    // We start reading in the top context.\n    this._readCallback = this._readInTopContext;\n    this._sparqlStyle = false;\n    this._prefixes = Object.create(null);\n    this._prefixes._ = this._blankNodePrefix ? this._blankNodePrefix.substr(2)\n                                             : `b${blankNodePrefix++}_`;\n    this._prefixCallback = prefixCallback || noop;\n    this._inversePredicate = false;\n    this._quantified = Object.create(null);\n\n    // Parse synchronously if no quad callback is given\n    if (!quadCallback) {\n      const quads = [];\n      let error;\n      this._callback = (e, t) => { e ? (error = e) : t && quads.push(t); };\n      this._lexer.tokenize(input).every(token => {\n        return this._readCallback = this._readCallback(token);\n      });\n      if (error) throw error;\n      return quads;\n    }\n\n    // Parse asynchronously otherwise, executing the read callback when a token arrives\n    this._callback = quadCallback;\n    this._lexer.tokenize(input, (error, token) => {\n      if (error !== null)\n        this._callback(error), this._callback = noop;\n      else if (this._readCallback)\n        this._readCallback = this._readCallback(token);\n    });\n  }\n}\n\n// The empty function\nfunction noop() {}\n\n// Initializes the parser with the given data factory\nfunction initDataFactory(parser, factory) {\n  // Set factory methods\n  const namedNode = factory.namedNode;\n  parser._namedNode   = namedNode;\n  parser._blankNode   = factory.blankNode;\n  parser._literal     = factory.literal;\n  parser._variable    = factory.variable;\n  parser._quad        = factory.quad;\n  parser.DEFAULTGRAPH = factory.defaultGraph();\n\n  // Set common named nodes\n  parser.RDF_FIRST  = namedNode(namespaces.rdf.first);\n  parser.RDF_REST   = namedNode(namespaces.rdf.rest);\n  parser.RDF_NIL    = namedNode(namespaces.rdf.nil);\n  parser.N3_FORALL  = namedNode(namespaces.r.forAll);\n  parser.N3_FORSOME = namedNode(namespaces.r.forSome);\n  parser.ABBREVIATIONS = {\n    'a': namedNode(namespaces.rdf.type),\n    '=': namedNode(namespaces.owl.sameAs),\n    '>': namedNode(namespaces.log.implies),\n  };\n  parser.QUANTIFIERS_GRAPH = namedNode('urn:n3:quantifiers');\n}\ninitDataFactory(N3Parser.prototype, N3DataFactory);\n","// **N3Writer** writes N3 documents.\nimport namespaces from './IRIs';\nimport { default as N3DataFactory, Term } from './N3DataFactory';\nimport { isDefaultGraph } from './N3Util';\n\nconst DEFAULTGRAPH = N3DataFactory.defaultGraph();\n\nconst { rdf, xsd } = namespaces;\n\n// Characters in literals that require escaping\nconst escape    = /[\"\\\\\\t\\n\\r\\b\\f\\u0000-\\u0019\\ud800-\\udbff]/,\n    escapeAll = /[\"\\\\\\t\\n\\r\\b\\f\\u0000-\\u0019]|[\\ud800-\\udbff][\\udc00-\\udfff]/g,\n    escapedCharacters = {\n      '\\\\': '\\\\\\\\', '\"': '\\\\\"', '\\t': '\\\\t',\n      '\\n': '\\\\n', '\\r': '\\\\r', '\\b': '\\\\b', '\\f': '\\\\f',\n    };\n\n// ## Placeholder class to represent already pretty-printed terms\nclass SerializedTerm extends Term {\n  // Pretty-printed nodes are not equal to any other node\n  // (e.g., [] does not equal [])\n  equals() {\n    return false;\n  }\n}\n\n// ## Constructor\nexport default class N3Writer {\n  constructor(outputStream, options) {\n    // ### `_prefixRegex` matches a prefixed name or IRI that begins with one of the added prefixes\n    this._prefixRegex = /$0^/;\n\n    // Shift arguments if the first argument is not a stream\n    if (outputStream && typeof outputStream.write !== 'function')\n      options = outputStream, outputStream = null;\n    options = options || {};\n    this._lists = options.lists;\n\n    // If no output stream given, send the output as string through the end callback\n    if (!outputStream) {\n      let output = '';\n      this._outputStream = {\n        write(chunk, encoding, done) { output += chunk; done && done(); },\n        end: done => { done && done(null, output); },\n      };\n      this._endStream = true;\n    }\n    else {\n      this._outputStream = outputStream;\n      this._endStream = options.end === undefined ? true : !!options.end;\n    }\n\n    // Initialize writer, depending on the format\n    this._subject = null;\n    if (!(/triple|quad/i).test(options.format)) {\n      this._graph = DEFAULTGRAPH;\n      this._prefixIRIs = Object.create(null);\n      options.prefixes && this.addPrefixes(options.prefixes);\n    }\n    else {\n      this._writeQuad = this._writeQuadLine;\n    }\n  }\n\n  // ## Private methods\n\n  // ### Whether the current graph is the default graph\n  get _inDefaultGraph() {\n    return DEFAULTGRAPH.equals(this._graph);\n  }\n\n  // ### `_write` writes the argument to the output stream\n  _write(string, callback) {\n    this._outputStream.write(string, 'utf8', callback);\n  }\n\n  // ### `_writeQuad` writes the quad to the output stream\n  _writeQuad(subject, predicate, object, graph, done) {\n    try {\n      // Write the graph's label if it has changed\n      if (!graph.equals(this._graph)) {\n        // Close the previous graph and start the new one\n        this._write((this._subject === null ? '' : (this._inDefaultGraph ? '.\\n' : '\\n}\\n')) +\n                    (DEFAULTGRAPH.equals(graph) ? '' : `${this._encodeIriOrBlank(graph)} {\\n`));\n        this._graph = graph;\n        this._subject = null;\n      }\n      // Don't repeat the subject if it's the same\n      if (subject.equals(this._subject)) {\n        // Don't repeat the predicate if it's the same\n        if (predicate.equals(this._predicate))\n          this._write(`, ${this._encodeObject(object)}`, done);\n        // Same subject, different predicate\n        else\n          this._write(`;\\n    ${\n                      this._encodePredicate(this._predicate = predicate)} ${\n                      this._encodeObject(object)}`, done);\n      }\n      // Different subject; write the whole quad\n      else\n        this._write(`${(this._subject === null ? '' : '.\\n') +\n                    this._encodeSubject(this._subject = subject)} ${\n                    this._encodePredicate(this._predicate = predicate)} ${\n                    this._encodeObject(object)}`, done);\n    }\n    catch (error) { done && done(error); }\n  }\n\n  // ### `_writeQuadLine` writes the quad to the output stream as a single line\n  _writeQuadLine(subject, predicate, object, graph, done) {\n    // Write the quad without prefixes\n    delete this._prefixMatch;\n    this._write(this.quadToString(subject, predicate, object, graph), done);\n  }\n\n  // ### `quadToString` serializes a quad as a string\n  quadToString(subject, predicate, object, graph) {\n    return  `${this._encodeSubject(subject)} ${\n            this._encodeIriOrBlank(predicate)} ${\n            this._encodeObject(object)\n            }${graph && graph.value ? ` ${this._encodeIriOrBlank(graph)} .\\n` : ' .\\n'}`;\n  }\n\n  // ### `quadsToString` serializes an array of quads as a string\n  quadsToString(quads) {\n    return quads.map(t => {\n      return this.quadToString(t.subject, t.predicate, t.object, t.graph);\n    }).join('');\n  }\n\n  // ### `_encodeSubject` represents a subject\n  _encodeSubject(entity) {\n    return entity.termType === 'Quad' ?\n      this._encodeQuad(entity) : this._encodeIriOrBlank(entity);\n  }\n\n  // ### `_encodeIriOrBlank` represents an IRI or blank node\n  _encodeIriOrBlank(entity) {\n    // A blank node or list is represented as-is\n    if (entity.termType !== 'NamedNode') {\n      // If it is a list head, pretty-print it\n      if (this._lists && (entity.value in this._lists))\n        entity = this.list(this._lists[entity.value]);\n      return 'id' in entity ? entity.id : `_:${entity.value}`;\n    }\n    // Escape special characters\n    let iri = entity.value;\n    if (escape.test(iri))\n      iri = iri.replace(escapeAll, characterReplacer);\n    // Try to represent the IRI as prefixed name\n    const prefixMatch = this._prefixRegex.exec(iri);\n    return !prefixMatch ? `<${iri}>` :\n           (!prefixMatch[1] ? iri : this._prefixIRIs[prefixMatch[1]] + prefixMatch[2]);\n  }\n\n  // ### `_encodeLiteral` represents a literal\n  _encodeLiteral(literal) {\n    // Escape special characters\n    let value = literal.value;\n    if (escape.test(value))\n      value = value.replace(escapeAll, characterReplacer);\n    // Write the literal, possibly with type or language\n    if (literal.language)\n      return `\"${value}\"@${literal.language}`;\n    else if (literal.datatype.value !== xsd.string)\n      return `\"${value}\"^^${this._encodeIriOrBlank(literal.datatype)}`;\n    else\n      return `\"${value}\"`;\n  }\n\n  // ### `_encodePredicate` represents a predicate\n  _encodePredicate(predicate) {\n    return predicate.value === rdf.type ? 'a' : this._encodeIriOrBlank(predicate);\n  }\n\n  // ### `_encodeObject` represents an object\n  _encodeObject(object) {\n    switch (object.termType) {\n    case 'Quad':\n      return this._encodeQuad(object);\n    case 'Literal':\n      return this._encodeLiteral(object);\n    default:\n      return this._encodeIriOrBlank(object);\n    }\n  }\n\n  // ### `_encodeQuad` encodes an RDF* quad\n  _encodeQuad({ subject, predicate, object, graph }) {\n    return `<<${\n      this._encodeSubject(subject)} ${\n      this._encodePredicate(predicate)} ${\n      this._encodeObject(object)}${\n      isDefaultGraph(graph) ? '' : ` ${this._encodeIriOrBlank(graph)}`}>>`;\n  }\n\n  // ### `_blockedWrite` replaces `_write` after the writer has been closed\n  _blockedWrite() {\n    throw new Error('Cannot write because the writer has been closed.');\n  }\n\n  // ### `addQuad` adds the quad to the output stream\n  addQuad(subject, predicate, object, graph, done) {\n    // The quad was given as an object, so shift parameters\n    if (object === undefined)\n      this._writeQuad(subject.subject, subject.predicate, subject.object, subject.graph, predicate);\n    // The optional `graph` parameter was not provided\n    else if (typeof graph === 'function')\n      this._writeQuad(subject, predicate, object, DEFAULTGRAPH, graph);\n    // The `graph` parameter was provided\n    else\n      this._writeQuad(subject, predicate, object, graph || DEFAULTGRAPH, done);\n  }\n\n  // ### `addQuads` adds the quads to the output stream\n  addQuads(quads) {\n    for (let i = 0; i < quads.length; i++)\n      this.addQuad(quads[i]);\n  }\n\n  // ### `addPrefix` adds the prefix to the output stream\n  addPrefix(prefix, iri, done) {\n    const prefixes = {};\n    prefixes[prefix] = iri;\n    this.addPrefixes(prefixes, done);\n  }\n\n  // ### `addPrefixes` adds the prefixes to the output stream\n  addPrefixes(prefixes, done) {\n    // Ignore prefixes if not supported by the serialization\n    if (!this._prefixIRIs)\n      return done && done();\n\n    // Write all new prefixes\n    let hasPrefixes = false;\n    for (let prefix in prefixes) {\n      let iri = prefixes[prefix];\n      if (typeof iri !== 'string')\n        iri = iri.value;\n      hasPrefixes = true;\n      // Finish a possible pending quad\n      if (this._subject !== null) {\n        this._write(this._inDefaultGraph ? '.\\n' : '\\n}\\n');\n        this._subject = null, this._graph = '';\n      }\n      // Store and write the prefix\n      this._prefixIRIs[iri] = (prefix += ':');\n      this._write(`@prefix ${prefix} <${iri}>.\\n`);\n    }\n    // Recreate the prefix matcher\n    if (hasPrefixes) {\n      let IRIlist = '', prefixList = '';\n      for (const prefixIRI in this._prefixIRIs) {\n        IRIlist += IRIlist ? `|${prefixIRI}` : prefixIRI;\n        prefixList += (prefixList ? '|' : '') + this._prefixIRIs[prefixIRI];\n      }\n      IRIlist = IRIlist.replace(/[\\]\\/\\(\\)\\*\\+\\?\\.\\\\\\$]/g, '\\\\$&');\n      this._prefixRegex = new RegExp(`^(?:${prefixList})[^\\/]*$|` +\n                                     `^(${IRIlist})([a-zA-Z][\\\\-_a-zA-Z0-9]*)$`);\n    }\n    // End a prefix block with a newline\n    this._write(hasPrefixes ? '\\n' : '', done);\n  }\n\n  // ### `blank` creates a blank node with the given content\n  blank(predicate, object) {\n    let children = predicate, child, length;\n    // Empty blank node\n    if (predicate === undefined)\n      children = [];\n    // Blank node passed as blank(Term(\"predicate\"), Term(\"object\"))\n    else if (predicate.termType)\n      children = [{ predicate: predicate, object: object }];\n    // Blank node passed as blank({ predicate: predicate, object: object })\n    else if (!('length' in predicate))\n      children = [predicate];\n\n    switch (length = children.length) {\n    // Generate an empty blank node\n    case 0:\n      return new SerializedTerm('[]');\n    // Generate a non-nested one-triple blank node\n    case 1:\n      child = children[0];\n      if (!(child.object instanceof SerializedTerm))\n        return new SerializedTerm(`[ ${this._encodePredicate(child.predicate)} ${\n                                  this._encodeObject(child.object)} ]`);\n    // Generate a multi-triple or nested blank node\n    default:\n      let contents = '[';\n      // Write all triples in order\n      for (let i = 0; i < length; i++) {\n        child = children[i];\n        // Write only the object is the predicate is the same as the previous\n        if (child.predicate.equals(predicate))\n          contents += `, ${this._encodeObject(child.object)}`;\n        // Otherwise, write the predicate and the object\n        else {\n          contents += `${(i ? ';\\n  ' : '\\n  ') +\n                      this._encodePredicate(child.predicate)} ${\n                      this._encodeObject(child.object)}`;\n          predicate = child.predicate;\n        }\n      }\n      return new SerializedTerm(`${contents}\\n]`);\n    }\n  }\n\n  // ### `list` creates a list node with the given content\n  list(elements) {\n    const length = elements && elements.length || 0, contents = new Array(length);\n    for (let i = 0; i < length; i++)\n      contents[i] = this._encodeObject(elements[i]);\n    return new SerializedTerm(`(${contents.join(' ')})`);\n  }\n\n  // ### `end` signals the end of the output stream\n  end(done) {\n    // Finish a possible pending quad\n    if (this._subject !== null) {\n      this._write(this._inDefaultGraph ? '.\\n' : '\\n}\\n');\n      this._subject = null;\n    }\n    // Disallow further writing\n    this._write = this._blockedWrite;\n\n    // Try to end the underlying stream, ensuring done is called exactly one time\n    let singleDone = done && ((error, result) => { singleDone = null, done(error, result); });\n    if (this._endStream) {\n      try { return this._outputStream.end(singleDone); }\n      catch (error) { /* error closing stream */ }\n    }\n    singleDone && singleDone();\n  }\n}\n\n// Replaces a character by its escaped version\nfunction characterReplacer(character) {\n  // Replace a single character by its escaped version\n  let result = escapedCharacters[character];\n  if (result === undefined) {\n    // Replace a single character with its 4-bit unicode escape sequence\n    if (character.length === 1) {\n      result = character.charCodeAt(0).toString(16);\n      result = '\\\\u0000'.substr(0, 6 - result.length) + result;\n    }\n    // Replace a surrogate pair with its 8-bit unicode escape sequence\n    else {\n      result = ((character.charCodeAt(0) - 0xD800) * 0x400 +\n                 character.charCodeAt(1) + 0x2400).toString(16);\n      result = '\\\\U00000000'.substr(0, 10 - result.length) + result;\n    }\n  }\n  return result;\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function eventListener() {\n      if (errorListener !== undefined) {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n    var errorListener;\n\n    // Adding an error listener is not optional because\n    // if an error is thrown on an event emitter we cannot\n    // guarantee that the actual event we are waiting will\n    // be fired. The result could be a silent way to create\n    // memory or file descriptor leaks, which is something\n    // we should avoid.\n    if (name !== 'error') {\n      errorListener = function errorListener(err) {\n        emitter.removeListener(name, eventListener);\n        reject(err);\n      };\n\n      emitter.once('error', errorListener);\n    }\n\n    emitter.once(name, eventListener);\n  });\n}\n","module.exports = require('events').EventEmitter;\n","'use strict';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar _require = require('buffer'),\n    Buffer = _require.Buffer;\n\nvar _require2 = require('util'),\n    inspect = _require2.inspect;\n\nvar custom = inspect && inspect.custom || 'inspect';\n\nfunction copyBuffer(src, target, offset) {\n  Buffer.prototype.copy.call(src, target, offset);\n}\n\nmodule.exports =\n/*#__PURE__*/\nfunction () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  _createClass(BufferList, [{\n    key: \"push\",\n    value: function push(v) {\n      var entry = {\n        data: v,\n        next: null\n      };\n      if (this.length > 0) this.tail.next = entry;else this.head = entry;\n      this.tail = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"unshift\",\n    value: function unshift(v) {\n      var entry = {\n        data: v,\n        next: this.head\n      };\n      if (this.length === 0) this.tail = entry;\n      this.head = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"shift\",\n    value: function shift() {\n      if (this.length === 0) return;\n      var ret = this.head.data;\n      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n      --this.length;\n      return ret;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.head = this.tail = null;\n      this.length = 0;\n    }\n  }, {\n    key: \"join\",\n    value: function join(s) {\n      if (this.length === 0) return '';\n      var p = this.head;\n      var ret = '' + p.data;\n\n      while (p = p.next) {\n        ret += s + p.data;\n      }\n\n      return ret;\n    }\n  }, {\n    key: \"concat\",\n    value: function concat(n) {\n      if (this.length === 0) return Buffer.alloc(0);\n      var ret = Buffer.allocUnsafe(n >>> 0);\n      var p = this.head;\n      var i = 0;\n\n      while (p) {\n        copyBuffer(p.data, ret, i);\n        i += p.data.length;\n        p = p.next;\n      }\n\n      return ret;\n    } // Consumes a specified amount of bytes or characters from the buffered data.\n\n  }, {\n    key: \"consume\",\n    value: function consume(n, hasStrings) {\n      var ret;\n\n      if (n < this.head.data.length) {\n        // `slice` is the same for buffers and strings.\n        ret = this.head.data.slice(0, n);\n        this.head.data = this.head.data.slice(n);\n      } else if (n === this.head.data.length) {\n        // First chunk is a perfect match.\n        ret = this.shift();\n      } else {\n        // Result spans more than one buffer.\n        ret = hasStrings ? this._getString(n) : this._getBuffer(n);\n      }\n\n      return ret;\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      return this.head.data;\n    } // Consumes a specified amount of characters from the buffered data.\n\n  }, {\n    key: \"_getString\",\n    value: function _getString(n) {\n      var p = this.head;\n      var c = 1;\n      var ret = p.data;\n      n -= ret.length;\n\n      while (p = p.next) {\n        var str = p.data;\n        var nb = n > str.length ? str.length : n;\n        if (nb === str.length) ret += str;else ret += str.slice(0, n);\n        n -= nb;\n\n        if (n === 0) {\n          if (nb === str.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = str.slice(nb);\n          }\n\n          break;\n        }\n\n        ++c;\n      }\n\n      this.length -= c;\n      return ret;\n    } // Consumes a specified amount of bytes from the buffered data.\n\n  }, {\n    key: \"_getBuffer\",\n    value: function _getBuffer(n) {\n      var ret = Buffer.allocUnsafe(n);\n      var p = this.head;\n      var c = 1;\n      p.data.copy(ret);\n      n -= p.data.length;\n\n      while (p = p.next) {\n        var buf = p.data;\n        var nb = n > buf.length ? buf.length : n;\n        buf.copy(ret, ret.length - n, 0, nb);\n        n -= nb;\n\n        if (n === 0) {\n          if (nb === buf.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = buf.slice(nb);\n          }\n\n          break;\n        }\n\n        ++c;\n      }\n\n      this.length -= c;\n      return ret;\n    } // Make sure the linked list only shows the minimal necessary information.\n\n  }, {\n    key: custom,\n    value: function value(_, options) {\n      return inspect(this, _objectSpread({}, options, {\n        // Only inspect one level.\n        depth: 0,\n        // It should not recurse.\n        customInspect: false\n      }));\n    }\n  }]);\n\n  return BufferList;\n}();","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","'use strict'; // undocumented cb() API, needed for core, not for public API\n\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err) {\n      if (!this._writableState) {\n        process.nextTick(emitErrorNT, this, err);\n      } else if (!this._writableState.errorEmitted) {\n        this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorNT, this, err);\n      }\n    }\n\n    return this;\n  } // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  } // if this is a duplex stream mark the writable part as destroyed as well\n\n\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      if (!_this._writableState) {\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else if (!_this._writableState.errorEmitted) {\n        _this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else {\n        process.nextTick(emitCloseNT, _this);\n      }\n    } else if (cb) {\n      process.nextTick(emitCloseNT, _this);\n      cb(err);\n    } else {\n      process.nextTick(emitCloseNT, _this);\n    }\n  });\n\n  return this;\n}\n\nfunction emitErrorAndCloseNT(self, err) {\n  emitErrorNT(self, err);\n  emitCloseNT(self);\n}\n\nfunction emitCloseNT(self) {\n  if (self._writableState && !self._writableState.emitClose) return;\n  if (self._readableState && !self._readableState.emitClose) return;\n  self.emit('close');\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finalCalled = false;\n    this._writableState.prefinished = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nfunction errorOrDestroy(stream, err) {\n  // We have tests that rely on errors being emitted\n  // in the same tick, so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n  var rState = stream._readableState;\n  var wState = stream._writableState;\n  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy,\n  errorOrDestroy: errorOrDestroy\n};","'use strict';\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar codes = {};\n\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error;\n  }\n\n  function getMessage(arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message;\n    } else {\n      return message(arg1, arg2, arg3);\n    }\n  }\n\n  var NodeError =\n  /*#__PURE__*/\n  function (_Base) {\n    _inheritsLoose(NodeError, _Base);\n\n    function NodeError(arg1, arg2, arg3) {\n      return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;\n    }\n\n    return NodeError;\n  }(Base);\n\n  NodeError.prototype.name = Base.name;\n  NodeError.prototype.code = code;\n  codes[code] = NodeError;\n} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\n\n\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    var len = expected.length;\n    expected = expected.map(function (i) {\n      return String(i);\n    });\n\n    if (len > 2) {\n      return \"one of \".concat(thing, \" \").concat(expected.slice(0, len - 1).join(', '), \", or \") + expected[len - 1];\n    } else if (len === 2) {\n      return \"one of \".concat(thing, \" \").concat(expected[0], \" or \").concat(expected[1]);\n    } else {\n      return \"of \".concat(thing, \" \").concat(expected[0]);\n    }\n  } else {\n    return \"of \".concat(thing, \" \").concat(String(expected));\n  }\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\n\n\nfunction startsWith(str, search, pos) {\n  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n\n  return str.substring(this_len - search.length, this_len) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n\n\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\n\ncreateErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {\n  return 'The value \"' + value + '\" is invalid for option \"' + name + '\"';\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  // determiner: 'must be' or 'must not be'\n  var determiner;\n\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n\n  var msg;\n\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = \"The \".concat(name, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } else {\n    var type = includes(name, '.') ? 'property' : 'argument';\n    msg = \"The \\\"\".concat(name, \"\\\" \").concat(type, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  }\n\n  msg += \". Received type \".concat(typeof actual);\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');\ncreateErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {\n  return 'The ' + name + ' method is not implemented';\n});\ncreateErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');\ncreateErrorType('ERR_STREAM_DESTROYED', function (name) {\n  return 'Cannot call ' + name + ' after a stream was destroyed';\n});\ncreateErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');\ncreateErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');\ncreateErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');\ncreateErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);\ncreateErrorType('ERR_UNKNOWN_ENCODING', function (arg) {\n  return 'Unknown encoding: ' + arg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');\nmodule.exports.codes = codes;\n","'use strict';\n\nvar ERR_INVALID_OPT_VALUE = require('../../../errors').codes.ERR_INVALID_OPT_VALUE;\n\nfunction highWaterMarkFrom(options, isDuplex, duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;\n}\n\nfunction getHighWaterMark(state, options, duplexKey, isDuplex) {\n  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);\n\n  if (hwm != null) {\n    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {\n      var name = isDuplex ? duplexKey : 'highWaterMark';\n      throw new ERR_INVALID_OPT_VALUE(name, hwm);\n    }\n\n    return Math.floor(hwm);\n  } // Default value\n\n\n  return state.objectMode ? 16 : 16 * 1024;\n}\n\nmodule.exports = {\n  getHighWaterMark: getHighWaterMark\n};","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n'use strict';\n\nmodule.exports = Writable;\n/* <replacement> */\n\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n} // It seems a linked list but it is not\n// there will be only 2 of these for each stream\n\n\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\n\n\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n/*<replacement>*/\n\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n\nvar Buffer = require('buffer').Buffer;\n\nvar OurUint8Array = global.Uint8Array || function () {};\n\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\n\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nvar _require = require('./internal/streams/state'),\n    getHighWaterMark = _require.getHighWaterMark;\n\nvar _require$codes = require('../errors').codes,\n    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n    ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,\n    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,\n    ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,\n    ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,\n    ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;\n\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\n\nrequire('inherits')(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {}; // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream,\n  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.\n\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode; // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n\n  this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex); // if _final has been called\n\n  this.finalCalled = false; // drain event flag.\n\n  this.needDrain = false; // at the start of calling end()\n\n  this.ending = false; // when end() has been called, and returned\n\n  this.ended = false; // when 'finish' is emitted\n\n  this.finished = false; // has it been destroyed\n\n  this.destroyed = false; // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode; // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n\n  this.defaultEncoding = options.defaultEncoding || 'utf8'; // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n\n  this.length = 0; // a flag to see when we're in the middle of a write.\n\n  this.writing = false; // when true all writes will be buffered until .uncork() call\n\n  this.corked = 0; // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n\n  this.sync = true; // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n\n  this.bufferProcessing = false; // the callback that's passed to _write(chunk,cb)\n\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  }; // the callback that the user supplies to write(chunk,encoding,cb)\n\n\n  this.writecb = null; // the amount that is being written when _write is called.\n\n  this.writelen = 0;\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null; // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n\n  this.pendingcb = 0; // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n\n  this.prefinished = false; // True if the error was already emitted and should not be thrown again\n\n  this.errorEmitted = false; // Should close be emitted on destroy. Defaults to true.\n\n  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'finish' (and potentially 'end')\n\n  this.autoDestroy = !!options.autoDestroy; // count buffered requests\n\n  this.bufferedRequestCount = 0; // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function writableStateBufferGetter() {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})(); // Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\n\n\nvar realHasInstance;\n\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function value(object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function realHasInstance(object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex'); // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the WritableState constructor, at least with V8 6.5\n\n  var isDuplex = this instanceof Duplex;\n  if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);\n  this._writableState = new WritableState(options, this, isDuplex); // legacy.\n\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n    if (typeof options.writev === 'function') this._writev = options.writev;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n} // Otherwise people can pipe Writable streams, which is just wrong.\n\n\nWritable.prototype.pipe = function () {\n  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new ERR_STREAM_WRITE_AFTER_END(); // TODO: defer error events consistently everywhere, not just the cb\n\n  errorOrDestroy(stream, er);\n  process.nextTick(cb, er);\n} // Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\n\n\nfunction validChunk(stream, state, chunk, cb) {\n  var er;\n\n  if (chunk === null) {\n    er = new ERR_STREAM_NULL_VALUES();\n  } else if (typeof chunk !== 'string' && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);\n  }\n\n  if (er) {\n    errorOrDestroy(stream, er);\n    process.nextTick(cb, er);\n    return false;\n  }\n\n  return true;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n  if (typeof cb !== 'function') cb = nop;\n  if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  this._writableState.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nObject.defineProperty(Writable.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n}); // if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\n\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n\n  var len = state.objectMode ? 1 : chunk.length;\n  state.length += len;\n  var ret = state.length < state.highWaterMark; // we must ensure that previous needDrain will not be reset to false.\n\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    process.nextTick(cb, er); // this can emit finish, and it will always happen\n    // after error\n\n    process.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er); // this can emit finish, but finish must\n    // always follow error\n\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n  if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();\n  onwriteStateUpdate(state);\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state) || stream.destroyed;\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      process.nextTick(afterWrite, stream, state, finished, cb);\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n} // Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\n\n\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n} // if there's something in the buffer waiting, then process it\n\n\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n    var count = 0;\n    var allBuffers = true;\n\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n\n    buffer.allBuffers = allBuffers;\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish); // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--; // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding); // .end() fully uncorks\n\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  } // ignore unnecessary end() calls.\n\n\n  if (!state.ending) endWritable(this, state, cb);\n  return this;\n};\n\nObject.defineProperty(Writable.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\n\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n\n    if (err) {\n      errorOrDestroy(stream, err);\n    }\n\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\n\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function' && !state.destroyed) {\n      state.pendingcb++;\n      state.finalCalled = true;\n      process.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n\n  if (need) {\n    prefinish(stream, state);\n\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n\n      if (state.autoDestroy) {\n        // In case of duplex streams we need a way to detect\n        // if the readable side is ready for autoDestroy as well\n        var rState = stream._readableState;\n\n        if (!rState || rState.autoDestroy && rState.endEmitted) {\n          stream.destroy();\n        }\n      }\n    }\n  }\n\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n\n  if (cb) {\n    if (state.finished) process.nextTick(cb);else stream.once('finish', cb);\n  }\n\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  } // reuse the free corkReq.\n\n\n  state.corkedRequestsFree.next = corkReq;\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._writableState === undefined) {\n      return false;\n    }\n\n    return this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._writableState.destroyed = value;\n  }\n});\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\n\nWritable.prototype._destroy = function (err, cb) {\n  cb(err);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n'use strict';\n/*<replacement>*/\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n\n  for (var key in obj) {\n    keys.push(key);\n  }\n\n  return keys;\n};\n/*</replacement>*/\n\n\nmodule.exports = Duplex;\n\nvar Readable = require('./_stream_readable');\n\nvar Writable = require('./_stream_writable');\n\nrequire('inherits')(Duplex, Readable);\n\n{\n  // Allow the keys array to be GC'ed.\n  var keys = objectKeys(Writable.prototype);\n\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n  Readable.call(this, options);\n  Writable.call(this, options);\n  this.allowHalfOpen = true;\n\n  if (options) {\n    if (options.readable === false) this.readable = false;\n    if (options.writable === false) this.writable = false;\n\n    if (options.allowHalfOpen === false) {\n      this.allowHalfOpen = false;\n      this.once('end', onend);\n    }\n  }\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n}); // the no-half-open enforcer\n\nfunction onend() {\n  // If the writable side ended, then we're ok.\n  if (this._writableState.ended) return; // no more data can be written.\n  // But allow more writes to happen in this tick.\n\n  process.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}","// Ported from https://github.com/mafintosh/end-of-stream with\n// permission from the author, Mathias Buus (@mafintosh).\n'use strict';\n\nvar ERR_STREAM_PREMATURE_CLOSE = require('../../../errors').codes.ERR_STREAM_PREMATURE_CLOSE;\n\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    callback.apply(this, args);\n  };\n}\n\nfunction noop() {}\n\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\n\nfunction eos(stream, opts, callback) {\n  if (typeof opts === 'function') return eos(stream, null, opts);\n  if (!opts) opts = {};\n  callback = once(callback || noop);\n  var readable = opts.readable || opts.readable !== false && stream.readable;\n  var writable = opts.writable || opts.writable !== false && stream.writable;\n\n  var onlegacyfinish = function onlegacyfinish() {\n    if (!stream.writable) onfinish();\n  };\n\n  var writableEnded = stream._writableState && stream._writableState.finished;\n\n  var onfinish = function onfinish() {\n    writable = false;\n    writableEnded = true;\n    if (!readable) callback.call(stream);\n  };\n\n  var readableEnded = stream._readableState && stream._readableState.endEmitted;\n\n  var onend = function onend() {\n    readable = false;\n    readableEnded = true;\n    if (!writable) callback.call(stream);\n  };\n\n  var onerror = function onerror(err) {\n    callback.call(stream, err);\n  };\n\n  var onclose = function onclose() {\n    var err;\n\n    if (readable && !readableEnded) {\n      if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n\n    if (writable && !writableEnded) {\n      if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n  };\n\n  var onrequest = function onrequest() {\n    stream.req.on('finish', onfinish);\n  };\n\n  if (isRequest(stream)) {\n    stream.on('complete', onfinish);\n    stream.on('abort', onclose);\n    if (stream.req) onrequest();else stream.on('request', onrequest);\n  } else if (writable && !stream._writableState) {\n    // legacy streams\n    stream.on('end', onlegacyfinish);\n    stream.on('close', onlegacyfinish);\n  }\n\n  stream.on('end', onend);\n  stream.on('finish', onfinish);\n  if (opts.error !== false) stream.on('error', onerror);\n  stream.on('close', onclose);\n  return function () {\n    stream.removeListener('complete', onfinish);\n    stream.removeListener('abort', onclose);\n    stream.removeListener('request', onrequest);\n    if (stream.req) stream.req.removeListener('finish', onfinish);\n    stream.removeListener('end', onlegacyfinish);\n    stream.removeListener('close', onlegacyfinish);\n    stream.removeListener('finish', onfinish);\n    stream.removeListener('end', onend);\n    stream.removeListener('error', onerror);\n    stream.removeListener('close', onclose);\n  };\n}\n\nmodule.exports = eos;","'use strict';\n\nvar _Object$setPrototypeO;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar finished = require('./end-of-stream');\n\nvar kLastResolve = Symbol('lastResolve');\nvar kLastReject = Symbol('lastReject');\nvar kError = Symbol('error');\nvar kEnded = Symbol('ended');\nvar kLastPromise = Symbol('lastPromise');\nvar kHandlePromise = Symbol('handlePromise');\nvar kStream = Symbol('stream');\n\nfunction createIterResult(value, done) {\n  return {\n    value: value,\n    done: done\n  };\n}\n\nfunction readAndResolve(iter) {\n  var resolve = iter[kLastResolve];\n\n  if (resolve !== null) {\n    var data = iter[kStream].read(); // we defer if data is null\n    // we can be expecting either 'end' or\n    // 'error'\n\n    if (data !== null) {\n      iter[kLastPromise] = null;\n      iter[kLastResolve] = null;\n      iter[kLastReject] = null;\n      resolve(createIterResult(data, false));\n    }\n  }\n}\n\nfunction onReadable(iter) {\n  // we wait for the next tick, because it might\n  // emit an error with process.nextTick\n  process.nextTick(readAndResolve, iter);\n}\n\nfunction wrapForNext(lastPromise, iter) {\n  return function (resolve, reject) {\n    lastPromise.then(function () {\n      if (iter[kEnded]) {\n        resolve(createIterResult(undefined, true));\n        return;\n      }\n\n      iter[kHandlePromise](resolve, reject);\n    }, reject);\n  };\n}\n\nvar AsyncIteratorPrototype = Object.getPrototypeOf(function () {});\nvar ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {\n  get stream() {\n    return this[kStream];\n  },\n\n  next: function next() {\n    var _this = this;\n\n    // if we have detected an error in the meanwhile\n    // reject straight away\n    var error = this[kError];\n\n    if (error !== null) {\n      return Promise.reject(error);\n    }\n\n    if (this[kEnded]) {\n      return Promise.resolve(createIterResult(undefined, true));\n    }\n\n    if (this[kStream].destroyed) {\n      // We need to defer via nextTick because if .destroy(err) is\n      // called, the error will be emitted via nextTick, and\n      // we cannot guarantee that there is no error lingering around\n      // waiting to be emitted.\n      return new Promise(function (resolve, reject) {\n        process.nextTick(function () {\n          if (_this[kError]) {\n            reject(_this[kError]);\n          } else {\n            resolve(createIterResult(undefined, true));\n          }\n        });\n      });\n    } // if we have multiple next() calls\n    // we will wait for the previous Promise to finish\n    // this logic is optimized to support for await loops,\n    // where next() is only called once at a time\n\n\n    var lastPromise = this[kLastPromise];\n    var promise;\n\n    if (lastPromise) {\n      promise = new Promise(wrapForNext(lastPromise, this));\n    } else {\n      // fast path needed to support multiple this.push()\n      // without triggering the next() queue\n      var data = this[kStream].read();\n\n      if (data !== null) {\n        return Promise.resolve(createIterResult(data, false));\n      }\n\n      promise = new Promise(this[kHandlePromise]);\n    }\n\n    this[kLastPromise] = promise;\n    return promise;\n  }\n}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {\n  return this;\n}), _defineProperty(_Object$setPrototypeO, \"return\", function _return() {\n  var _this2 = this;\n\n  // destroy(err, cb) is a private API\n  // we can guarantee we have that here, because we control the\n  // Readable class this is attached to\n  return new Promise(function (resolve, reject) {\n    _this2[kStream].destroy(null, function (err) {\n      if (err) {\n        reject(err);\n        return;\n      }\n\n      resolve(createIterResult(undefined, true));\n    });\n  });\n}), _Object$setPrototypeO), AsyncIteratorPrototype);\n\nvar createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {\n  var _Object$create;\n\n  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {\n    value: stream,\n    writable: true\n  }), _defineProperty(_Object$create, kLastResolve, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kLastReject, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kError, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kEnded, {\n    value: stream._readableState.endEmitted,\n    writable: true\n  }), _defineProperty(_Object$create, kHandlePromise, {\n    value: function value(resolve, reject) {\n      var data = iterator[kStream].read();\n\n      if (data) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        resolve(createIterResult(data, false));\n      } else {\n        iterator[kLastResolve] = resolve;\n        iterator[kLastReject] = reject;\n      }\n    },\n    writable: true\n  }), _Object$create));\n  iterator[kLastPromise] = null;\n  finished(stream, function (err) {\n    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {\n      var reject = iterator[kLastReject]; // reject if we are waiting for data in the Promise\n      // returned by next() and store the error\n\n      if (reject !== null) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        reject(err);\n      }\n\n      iterator[kError] = err;\n      return;\n    }\n\n    var resolve = iterator[kLastResolve];\n\n    if (resolve !== null) {\n      iterator[kLastPromise] = null;\n      iterator[kLastResolve] = null;\n      iterator[kLastReject] = null;\n      resolve(createIterResult(undefined, true));\n    }\n\n    iterator[kEnded] = true;\n  });\n  stream.on('readable', onReadable.bind(null, iterator));\n  return iterator;\n};\n\nmodule.exports = createReadableStreamAsyncIterator;","module.exports = function () {\n  throw new Error('Readable.from is not available in the browser')\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n'use strict';\n\nmodule.exports = Readable;\n/*<replacement>*/\n\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n/*<replacement>*/\n\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function EElistenerCount(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\n\n\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n\nvar Buffer = require('buffer').Buffer;\n\nvar OurUint8Array = global.Uint8Array || function () {};\n\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\n\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n/*<replacement>*/\n\n\nvar debugUtil = require('util');\n\nvar debug;\n\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function debug() {};\n}\n/*</replacement>*/\n\n\nvar BufferList = require('./internal/streams/buffer_list');\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nvar _require = require('./internal/streams/state'),\n    getHighWaterMark = _require.getHighWaterMark;\n\nvar _require$codes = require('../errors').codes,\n    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n    ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT; // Lazy loaded to improve the startup performance.\n\n\nvar StringDecoder;\nvar createReadableStreamAsyncIterator;\nvar from;\n\nrequire('inherits')(Readable, Stream);\n\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn); // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {}; // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode; // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n\n  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex); // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false; // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n\n  this.sync = true; // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n  this.paused = true; // Should close be emitted on destroy. Defaults to true.\n\n  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'end' (and potentially 'finish')\n\n  this.autoDestroy = !!options.autoDestroy; // has it been destroyed\n\n  this.destroyed = false; // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n\n  this.defaultEncoding = options.defaultEncoding || 'utf8'; // the number of writers that are awaiting a drain event in .pipe()s\n\n  this.awaitDrain = 0; // if true, a maybeReadMore has been scheduled\n\n  this.readingMore = false;\n  this.decoder = null;\n  this.encoding = null;\n\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n  if (!(this instanceof Readable)) return new Readable(options); // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the ReadableState constructor, at least with V8 6.5\n\n  var isDuplex = this instanceof Duplex;\n  this._readableState = new ReadableState(options, this, isDuplex); // legacy\n\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined) {\n      return false;\n    }\n\n    return this._readableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._readableState.destroyed = value;\n  }\n});\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\n\nReadable.prototype._destroy = function (err, cb) {\n  cb(err);\n}; // Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\n\n\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n}; // Unshift should *always* be something directly out of read()\n\n\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  debug('readableAddChunk', chunk);\n  var state = stream._readableState;\n\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n\n    if (er) {\n      errorOrDestroy(stream, er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());\n      } else if (state.destroyed) {\n        return false;\n      } else {\n        state.reading = false;\n\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n      maybeReadMore(stream, state);\n    }\n  } // We can push more data if we are below the highWaterMark.\n  // Also, if we have no data yet, we can stand some more bytes.\n  // This is to work around cases where hwm=0, such as the repl.\n\n\n  return !state.ended && (state.length < state.highWaterMark || state.length === 0);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    state.awaitDrain = 0;\n    stream.emit('data', chunk);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n    if (state.needReadable) emitReadable(stream);\n  }\n\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);\n  }\n\n  return er;\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n}; // backwards compatibility.\n\n\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  var decoder = new StringDecoder(enc);\n  this._readableState.decoder = decoder; // If setEncoding(null), decoder.encoding equals utf8\n\n  this._readableState.encoding = this._readableState.decoder.encoding; // Iterate over current buffer to convert already stored Buffers:\n\n  var p = this._readableState.buffer.head;\n  var content = '';\n\n  while (p !== null) {\n    content += decoder.write(p.data);\n    p = p.next;\n  }\n\n  this._readableState.buffer.clear();\n\n  if (content !== '') this._readableState.buffer.push(content);\n  this._readableState.length = content.length;\n  return this;\n}; // Don't raise the hwm > 1GB\n\n\nvar MAX_HWM = 0x40000000;\n\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n\n  return n;\n} // This function is designed to be inlinable, so please take care when making\n// changes to the function body.\n\n\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  } // If we're asking for more than the current hwm, then raise the hwm.\n\n\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n; // Don't have enough\n\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n\n  return state.length;\n} // you can override either this method, or the async _read(n) below.\n\n\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n  if (n !== 0) state.emittedReadable = false; // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n\n  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state); // if we've ended, and we're now clear, then finish it up.\n\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  } // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n  // if we need a readable event, then we need to do some reading.\n\n\n  var doRead = state.needReadable;\n  debug('need readable', doRead); // if we currently have less than the highWaterMark, then also read some\n\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  } // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n\n\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true; // if the length is currently zero, then we *need* a readable event.\n\n    if (state.length === 0) state.needReadable = true; // call internal read method\n\n    this._read(state.highWaterMark);\n\n    state.sync = false; // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = state.length <= state.highWaterMark;\n    n = 0;\n  } else {\n    state.length -= n;\n    state.awaitDrain = 0;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true; // If we tried to read() past the EOF, then emit end on the next tick.\n\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  debug('onEofChunk');\n  if (state.ended) return;\n\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n\n  state.ended = true;\n\n  if (state.sync) {\n    // if we are sync, wait until next tick to emit the data.\n    // Otherwise we risk emitting data in the flow()\n    // the readable code triggers during a read() call\n    emitReadable(stream);\n  } else {\n    // emit 'readable' now to make sure it gets picked up.\n    state.needReadable = false;\n\n    if (!state.emittedReadable) {\n      state.emittedReadable = true;\n      emitReadable_(stream);\n    }\n  }\n} // Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\n\n\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  debug('emitReadable', state.needReadable, state.emittedReadable);\n  state.needReadable = false;\n\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    process.nextTick(emitReadable_, stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  var state = stream._readableState;\n  debug('emitReadable_', state.destroyed, state.length, state.ended);\n\n  if (!state.destroyed && (state.length || state.ended)) {\n    stream.emit('readable');\n    state.emittedReadable = false;\n  } // The stream needs another readable event if\n  // 1. It is not flowing, as the flow mechanism will take\n  //    care of it.\n  // 2. It is not ended.\n  // 3. It is below the highWaterMark, so we can schedule\n  //    another readable later.\n\n\n  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;\n  flow(stream);\n} // at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\n\n\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  // Attempt to read more data if we should.\n  //\n  // The conditions for reading more data are (one of):\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\n  //   is responsible for filling the buffer with enough data if such data\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\n  //   when the stream consumer calls read() instead.\n  // - No data in the buffer, and the stream is in flowing mode. In this mode\n  //   the loop below is responsible for ensuring read() is called. Failing to\n  //   call read here would abort the flow and there's no other mechanism for\n  //   continuing the flow if the stream consumer has just subscribed to the\n  //   'data' event.\n  //\n  // In addition to the above conditions to keep reading data, the following\n  // conditions prevent the data from being read:\n  // - The stream has ended (state.ended).\n  // - There is already a pending 'read' operation (state.reading). This is a\n  //   case where the the stream has called the implementation defined _read()\n  //   method, but they are processing the call asynchronously and have _not_\n  //   called push() with new data. In this case we skip performing more\n  //   read()s. The execution ends in this method again after the _read() ends\n  //   up calling push() with more data.\n  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {\n    var len = state.length;\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length) // didn't get any data, stop spinning.\n      break;\n  }\n\n  state.readingMore = false;\n} // abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\n\n\nReadable.prototype._read = function (n) {\n  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);\n  dest.on('unpipe', onunpipe);\n\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  } // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n\n\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n  var cleanedUp = false;\n\n  function cleanup() {\n    debug('cleanup'); // cleanup event handlers once the pipe is broken\n\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n    cleanedUp = true; // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  src.on('data', ondata);\n\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    debug('dest.write', ret);\n\n    if (ret === false) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', state.awaitDrain);\n        state.awaitDrain++;\n      }\n\n      src.pause();\n    }\n  } // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n\n\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);\n  } // Make sure our error handler is attached before userland ones.\n\n\n  prependListener(dest, 'error', onerror); // Both close and finish should trigger unpipe, but only once.\n\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n\n  dest.once('close', onclose);\n\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  } // tell the dest that it's being piped to\n\n\n  dest.emit('pipe', src); // start the flow if it hasn't been started already.\n\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function pipeOnDrainFunctionResult() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = {\n    hasUnpiped: false\n  }; // if we're not piping anywhere, then do nothing.\n\n  if (state.pipesCount === 0) return this; // just one destination.  most common case.\n\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n    if (!dest) dest = state.pipes; // got a match.\n\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  } // slow case. multiple pipe destinations.\n\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, {\n        hasUnpiped: false\n      });\n    }\n\n    return this;\n  } // try to find the right one.\n\n\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n  dest.emit('unpipe', this, unpipeInfo);\n  return this;\n}; // set up data events if they are asked for\n// Ensure readable listeners eventually get something\n\n\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n  var state = this._readableState;\n\n  if (ev === 'data') {\n    // update readableListening so that resume() may be a no-op\n    // a few lines down. This is needed to support once('readable').\n    state.readableListening = this.listenerCount('readable') > 0; // Try start flowing on next tick if stream isn't explicitly paused\n\n    if (state.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.flowing = false;\n      state.emittedReadable = false;\n      debug('on readable', state.length, state.reading);\n\n      if (state.length) {\n        emitReadable(this);\n      } else if (!state.reading) {\n        process.nextTick(nReadingNextTick, this);\n      }\n    }\n  }\n\n  return res;\n};\n\nReadable.prototype.addListener = Readable.prototype.on;\n\nReadable.prototype.removeListener = function (ev, fn) {\n  var res = Stream.prototype.removeListener.call(this, ev, fn);\n\n  if (ev === 'readable') {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n\n  return res;\n};\n\nReadable.prototype.removeAllListeners = function (ev) {\n  var res = Stream.prototype.removeAllListeners.apply(this, arguments);\n\n  if (ev === 'readable' || ev === undefined) {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n\n  return res;\n};\n\nfunction updateReadableListening(self) {\n  var state = self._readableState;\n  state.readableListening = self.listenerCount('readable') > 0;\n\n  if (state.resumeScheduled && !state.paused) {\n    // flowing needs to be set to true now, otherwise\n    // the upcoming resume will not flow.\n    state.flowing = true; // crude way to check if we should resume\n  } else if (self.listenerCount('data') > 0) {\n    self.resume();\n  }\n}\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n} // pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\n\n\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n\n  if (!state.flowing) {\n    debug('resume'); // we flow only if there is no one listening\n    // for readable, but we still have to call\n    // resume()\n\n    state.flowing = !state.readableListening;\n    resume(this, state);\n  }\n\n  state.paused = false;\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  debug('resume', state.reading);\n\n  if (!state.reading) {\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n\n  if (this._readableState.flowing !== false) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n\n  this._readableState.paused = true;\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n\n  while (state.flowing && stream.read() !== null) {\n    ;\n  }\n} // wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\n\n\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n  stream.on('end', function () {\n    debug('wrapped end');\n\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk); // don't skip over falsy values in objectMode\n\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  }); // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function methodWrap(method) {\n        return function methodWrapReturnFunction() {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  } // proxy certain important events.\n\n\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  } // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n\n\n  this._read = function (n) {\n    debug('wrapped _read', n);\n\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nif (typeof Symbol === 'function') {\n  Readable.prototype[Symbol.asyncIterator] = function () {\n    if (createReadableStreamAsyncIterator === undefined) {\n      createReadableStreamAsyncIterator = require('./internal/streams/async_iterator');\n    }\n\n    return createReadableStreamAsyncIterator(this);\n  };\n}\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.highWaterMark;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState && this._readableState.buffer;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableFlowing', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.flowing;\n  },\n  set: function set(state) {\n    if (this._readableState) {\n      this._readableState.flowing = state;\n    }\n  }\n}); // exposed for testing purposes only.\n\nReadable._fromList = fromList;\nObject.defineProperty(Readable.prototype, 'readableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.length;\n  }\n}); // Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\n\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = state.buffer.consume(n, state.decoder);\n  }\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n  debug('endReadable', state.endEmitted);\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  debug('endReadableNT', state.endEmitted, state.length); // Check that we didn't get one last unshift.\n\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n\n    if (state.autoDestroy) {\n      // In case of duplex streams we need a way to detect\n      // if the writable side is ready for autoDestroy as well\n      var wState = stream._writableState;\n\n      if (!wState || wState.autoDestroy && wState.finished) {\n        stream.destroy();\n      }\n    }\n  }\n}\n\nif (typeof Symbol === 'function') {\n  Readable.from = function (iterable, opts) {\n    if (from === undefined) {\n      from = require('./internal/streams/from');\n    }\n\n    return from(Readable, iterable, opts);\n  };\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n\n  return -1;\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n'use strict';\n\nmodule.exports = Transform;\n\nvar _require$codes = require('../errors').codes,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n    ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,\n    ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;\n\nvar Duplex = require('./_stream_duplex');\n\nrequire('inherits')(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n  var cb = ts.writecb;\n\n  if (cb === null) {\n    return this.emit('error', new ERR_MULTIPLE_CALLBACK());\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n  cb(er);\n  var rs = this._readableState;\n  rs.reading = false;\n\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n  Duplex.call(this, options);\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  }; // start out asking for a readable event once data is transformed.\n\n  this._readableState.needReadable = true; // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  } // When the writable side finishes, then flush out anything remaining.\n\n\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function' && !this._readableState.destroyed) {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n}; // This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\n\n\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n}; // Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\n\n\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && !ts.transforming) {\n    ts.transforming = true;\n\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data); // TODO(BridgeAR): Write a test for these two error cases\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n\n  if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();\n  if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();\n  return stream.push(null);\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\nrequire('inherits')(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","// Ported from https://github.com/mafintosh/pump with\n// permission from the author, Mathias Buus (@mafintosh).\n'use strict';\n\nvar eos;\n\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    callback.apply(void 0, arguments);\n  };\n}\n\nvar _require$codes = require('../../../errors').codes,\n    ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,\n    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;\n\nfunction noop(err) {\n  // Rethrow the error if it exists to avoid swallowing it\n  if (err) throw err;\n}\n\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\n\nfunction destroyer(stream, reading, writing, callback) {\n  callback = once(callback);\n  var closed = false;\n  stream.on('close', function () {\n    closed = true;\n  });\n  if (eos === undefined) eos = require('./end-of-stream');\n  eos(stream, {\n    readable: reading,\n    writable: writing\n  }, function (err) {\n    if (err) return callback(err);\n    closed = true;\n    callback();\n  });\n  var destroyed = false;\n  return function (err) {\n    if (closed) return;\n    if (destroyed) return;\n    destroyed = true; // request.destroy just do .end - .abort is what we want\n\n    if (isRequest(stream)) return stream.abort();\n    if (typeof stream.destroy === 'function') return stream.destroy();\n    callback(err || new ERR_STREAM_DESTROYED('pipe'));\n  };\n}\n\nfunction call(fn) {\n  fn();\n}\n\nfunction pipe(from, to) {\n  return from.pipe(to);\n}\n\nfunction popCallback(streams) {\n  if (!streams.length) return noop;\n  if (typeof streams[streams.length - 1] !== 'function') return noop;\n  return streams.pop();\n}\n\nfunction pipeline() {\n  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {\n    streams[_key] = arguments[_key];\n  }\n\n  var callback = popCallback(streams);\n  if (Array.isArray(streams[0])) streams = streams[0];\n\n  if (streams.length < 2) {\n    throw new ERR_MISSING_ARGS('streams');\n  }\n\n  var error;\n  var destroys = streams.map(function (stream, i) {\n    var reading = i < streams.length - 1;\n    var writing = i > 0;\n    return destroyer(stream, reading, writing, function (err) {\n      if (!error) error = err;\n      if (err) destroys.forEach(call);\n      if (reading) return;\n      destroys.forEach(call);\n      callback(error);\n    });\n  });\n  return streams.reduce(pipe);\n}\n\nmodule.exports = pipeline;","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\nexports.finished = require('./lib/internal/streams/end-of-stream.js');\nexports.pipeline = require('./lib/internal/streams/pipeline.js');\n","// **N3Store** objects store N3 quads by graph in memory.\nimport { default as N3DataFactory, termToId, termFromId } from './N3DataFactory';\nimport { Readable } from 'readable-stream';\nimport namespaces from './IRIs';\n\n// ## Constructor\nexport default class N3Store {\n  constructor(quads, options) {\n    // The number of quads is initially zero\n    this._size = 0;\n    // `_graphs` contains subject, predicate, and object indexes per graph\n    this._graphs = Object.create(null);\n    // `_ids` maps entities such as `http://xmlns.com/foaf/0.1/name` to numbers,\n    // saving memory by using only numbers as keys in `_graphs`\n    this._id = 0;\n    this._ids = Object.create(null);\n    this._ids['><'] = 0; // dummy entry, so the first actual key is non-zero\n    this._entities = Object.create(null); // inverse of `_ids`\n    // `_blankNodeIndex` is the index of the last automatically named blank node\n    this._blankNodeIndex = 0;\n\n    // Shift parameters if `quads` is not given\n    if (!options && quads && !quads[0])\n      options = quads, quads = null;\n    options = options || {};\n    this._factory = options.factory || N3DataFactory;\n\n    // Add quads if passed\n    if (quads)\n      this.addQuads(quads);\n  }\n\n  // ## Public properties\n\n  // ### `size` returns the number of quads in the store\n  get size() {\n    // Return the quad count if if was cached\n    let size = this._size;\n    if (size !== null)\n      return size;\n\n    // Calculate the number of quads by counting to the deepest level\n    size = 0;\n    const graphs = this._graphs;\n    let subjects, subject;\n    for (const graphKey in graphs)\n      for (const subjectKey in (subjects = graphs[graphKey].subjects))\n        for (const predicateKey in (subject = subjects[subjectKey]))\n          size += Object.keys(subject[predicateKey]).length;\n    return this._size = size;\n  }\n\n  // ## Private methods\n\n  // ### `_addToIndex` adds a quad to a three-layered index.\n  // Returns if the index has changed, if the entry did not already exist.\n  _addToIndex(index0, key0, key1, key2) {\n    // Create layers as necessary\n    const index1 = index0[key0] || (index0[key0] = {});\n    const index2 = index1[key1] || (index1[key1] = {});\n    // Setting the key to _any_ value signals the presence of the quad\n    const existed = key2 in index2;\n    if (!existed)\n      index2[key2] = null;\n    return !existed;\n  }\n\n  // ### `_removeFromIndex` removes a quad from a three-layered index\n  _removeFromIndex(index0, key0, key1, key2) {\n    // Remove the quad from the index\n    const index1 = index0[key0], index2 = index1[key1];\n    delete index2[key2];\n\n    // Remove intermediary index layers if they are empty\n    for (const key in index2) return;\n    delete index1[key1];\n    for (const key in index1) return;\n    delete index0[key0];\n  }\n\n  // ### `_findInIndex` finds a set of quads in a three-layered index.\n  // The index base is `index0` and the keys at each level are `key0`, `key1`, and `key2`.\n  // Any of these keys can be undefined, which is interpreted as a wildcard.\n  // `name0`, `name1`, and `name2` are the names of the keys at each level,\n  // used when reconstructing the resulting quad\n  // (for instance: _subject_, _predicate_, and _object_).\n  // Finally, `graph` will be the graph of the created quads.\n  // If `callback` is given, each result is passed through it\n  // and iteration halts when it returns truthy for any quad.\n  // If instead `array` is given, each result is added to the array.\n  _findInIndex(index0, key0, key1, key2, name0, name1, name2, graph, callback, array) {\n    let tmp, index1, index2;\n    // Depending on the number of variables, keys or reverse index are faster\n    const varCount = !key0 + !key1 + !key2,\n        entityKeys = varCount > 1 ? Object.keys(this._ids) : this._entities;\n\n    // If a key is specified, use only that part of index 0.\n    if (key0) (tmp = index0, index0 = {})[key0] = tmp[key0];\n    for (const value0 in index0) {\n      const entity0 = entityKeys[value0];\n\n      if (index1 = index0[value0]) {\n        // If a key is specified, use only that part of index 1.\n        if (key1) (tmp = index1, index1 = {})[key1] = tmp[key1];\n        for (const value1 in index1) {\n          const entity1 = entityKeys[value1];\n\n          if (index2 = index1[value1]) {\n            // If a key is specified, use only that part of index 2, if it exists.\n            const values = key2 ? (key2 in index2 ? [key2] : []) : Object.keys(index2);\n            // Create quads for all items found in index 2.\n            for (let l = 0; l < values.length; l++) {\n              const parts = { subject: null, predicate: null, object: null };\n              parts[name0] = termFromId(entity0, this._factory);\n              parts[name1] = termFromId(entity1, this._factory);\n              parts[name2] = termFromId(entityKeys[values[l]], this._factory);\n              const quad = this._factory.quad(\n                parts.subject, parts.predicate, parts.object, termFromId(graph, this._factory));\n              if (array)\n                array.push(quad);\n              else if (callback(quad))\n                return true;\n            }\n          }\n        }\n      }\n    }\n    return array;\n  }\n\n  // ### `_loop` executes the callback on all keys of index 0\n  _loop(index0, callback) {\n    for (const key0 in index0)\n      callback(key0);\n  }\n\n  // ### `_loopByKey0` executes the callback on all keys of a certain entry in index 0\n  _loopByKey0(index0, key0, callback) {\n    let index1, key1;\n    if (index1 = index0[key0]) {\n      for (key1 in index1)\n        callback(key1);\n    }\n  }\n\n  // ### `_loopByKey1` executes the callback on given keys of all entries in index 0\n  _loopByKey1(index0, key1, callback) {\n    let key0, index1;\n    for (key0 in index0) {\n      index1 = index0[key0];\n      if (index1[key1])\n        callback(key0);\n    }\n  }\n\n  // ### `_loopBy2Keys` executes the callback on given keys of certain entries in index 2\n  _loopBy2Keys(index0, key0, key1, callback) {\n    let index1, index2, key2;\n    if ((index1 = index0[key0]) && (index2 = index1[key1])) {\n      for (key2 in index2)\n        callback(key2);\n    }\n  }\n\n  // ### `_countInIndex` counts matching quads in a three-layered index.\n  // The index base is `index0` and the keys at each level are `key0`, `key1`, and `key2`.\n  // Any of these keys can be undefined, which is interpreted as a wildcard.\n  _countInIndex(index0, key0, key1, key2) {\n    let count = 0, tmp, index1, index2;\n\n    // If a key is specified, count only that part of index 0\n    if (key0) (tmp = index0, index0 = {})[key0] = tmp[key0];\n    for (const value0 in index0) {\n      if (index1 = index0[value0]) {\n        // If a key is specified, count only that part of index 1\n        if (key1) (tmp = index1, index1 = {})[key1] = tmp[key1];\n        for (const value1 in index1) {\n          if (index2 = index1[value1]) {\n            // If a key is specified, count the quad if it exists\n            if (key2) (key2 in index2) && count++;\n            // Otherwise, count all quads\n            else count += Object.keys(index2).length;\n          }\n        }\n      }\n    }\n    return count;\n  }\n\n  // ### `_getGraphs` returns an array with the given graph,\n  // or all graphs if the argument is null or undefined.\n  _getGraphs(graph) {\n    if (!isString(graph))\n      return this._graphs;\n    const graphs = {};\n    graphs[graph] = this._graphs[graph];\n    return graphs;\n  }\n\n  // ### `_uniqueEntities` returns a function that accepts an entity ID\n  // and passes the corresponding entity to callback if it hasn't occurred before.\n  _uniqueEntities(callback) {\n    const uniqueIds = Object.create(null);\n    return id => {\n      if (!(id in uniqueIds)) {\n        uniqueIds[id] = true;\n        callback(termFromId(this._entities[id], this._factory));\n      }\n    };\n  }\n\n  // ## Public methods\n\n  // ### `addQuad` adds a new quad to the store.\n  // Returns if the quad index has changed, if the quad did not already exist.\n  addQuad(subject, predicate, object, graph) {\n    // Shift arguments if a quad object is given instead of components\n    if (!predicate)\n      graph = subject.graph, object = subject.object,\n        predicate = subject.predicate, subject = subject.subject;\n\n    // Convert terms to internal string representation\n    subject = termToId(subject);\n    predicate = termToId(predicate);\n    object = termToId(object);\n    graph = termToId(graph);\n\n    // Find the graph that will contain the triple\n    let graphItem = this._graphs[graph];\n    // Create the graph if it doesn't exist yet\n    if (!graphItem) {\n      graphItem = this._graphs[graph] = { subjects: {}, predicates: {}, objects: {} };\n      // Freezing a graph helps subsequent `add` performance,\n      // and properties will never be modified anyway\n      Object.freeze(graphItem);\n    }\n\n    // Since entities can often be long IRIs, we avoid storing them in every index.\n    // Instead, we have a separate index that maps entities to numbers,\n    // which are then used as keys in the other indexes.\n    const ids = this._ids;\n    const entities = this._entities;\n    subject   = ids[subject]   || (ids[entities[++this._id] = subject]   = this._id);\n    predicate = ids[predicate] || (ids[entities[++this._id] = predicate] = this._id);\n    object    = ids[object]    || (ids[entities[++this._id] = object]    = this._id);\n\n    const changed = this._addToIndex(graphItem.subjects,   subject,   predicate, object);\n    this._addToIndex(graphItem.predicates, predicate, object,    subject);\n    this._addToIndex(graphItem.objects,    object,    subject,   predicate);\n\n    // The cached quad count is now invalid\n    this._size = null;\n    return changed;\n  }\n\n  // ### `addQuads` adds multiple quads to the store\n  addQuads(quads) {\n    for (let i = 0; i < quads.length; i++)\n      this.addQuad(quads[i]);\n  }\n\n  // ### `import` adds a stream of quads to the store\n  import(stream) {\n    stream.on('data', quad => { this.addQuad(quad); });\n    return stream;\n  }\n\n  // ### `removeQuad` removes a quad from the store if it exists\n  removeQuad(subject, predicate, object, graph) {\n    // Shift arguments if a quad object is given instead of components\n    if (!predicate)\n      graph = subject.graph, object = subject.object,\n        predicate = subject.predicate, subject = subject.subject;\n\n    // Convert terms to internal string representation\n    subject = termToId(subject);\n    predicate = termToId(predicate);\n    object = termToId(object);\n    graph = termToId(graph);\n\n    // Find internal identifiers for all components\n    // and verify the quad exists.\n    const ids = this._ids, graphs = this._graphs;\n    let graphItem, subjects, predicates;\n    if (!(subject    = ids[subject]) || !(predicate = ids[predicate]) ||\n        !(object     = ids[object])  || !(graphItem = graphs[graph])  ||\n        !(subjects   = graphItem.subjects[subject]) ||\n        !(predicates = subjects[predicate]) ||\n        !(object in predicates))\n      return false;\n\n    // Remove it from all indexes\n    this._removeFromIndex(graphItem.subjects,   subject,   predicate, object);\n    this._removeFromIndex(graphItem.predicates, predicate, object,    subject);\n    this._removeFromIndex(graphItem.objects,    object,    subject,   predicate);\n    if (this._size !== null) this._size--;\n\n    // Remove the graph if it is empty\n    for (subject in graphItem.subjects) return true;\n    delete graphs[graph];\n    return true;\n  }\n\n  // ### `removeQuads` removes multiple quads from the store\n  removeQuads(quads) {\n    for (let i = 0; i < quads.length; i++)\n      this.removeQuad(quads[i]);\n  }\n\n  // ### `remove` removes a stream of quads from the store\n  remove(stream) {\n    stream.on('data', quad => { this.removeQuad(quad); });\n    return stream;\n  }\n\n  // ### `removeMatches` removes all matching quads from the store\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  removeMatches(subject, predicate, object, graph) {\n    return this.remove(this.match(subject, predicate, object, graph));\n  }\n\n  // ### `deleteGraph` removes all triples with the given graph from the store\n  deleteGraph(graph) {\n    return this.removeMatches(null, null, null, graph);\n  }\n\n  // ### `getQuads` returns an array of quads matching a pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  getQuads(subject, predicate, object, graph) {\n    // Convert terms to internal string representation\n    subject = subject && termToId(subject);\n    predicate = predicate && termToId(predicate);\n    object = object && termToId(object);\n    graph = graph && termToId(graph);\n\n    const quads = [], graphs = this._getGraphs(graph), ids = this._ids;\n    let content, subjectId, predicateId, objectId;\n\n    // Translate IRIs to internal index keys.\n    if (isString(subject)   && !(subjectId   = ids[subject])   ||\n        isString(predicate) && !(predicateId = ids[predicate]) ||\n        isString(object)    && !(objectId    = ids[object]))\n      return quads;\n\n    for (const graphId in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graphId]) {\n        // Choose the optimal index, based on what fields are present\n        if (subjectId) {\n          if (objectId)\n            // If subject and object are given, the object index will be the fastest\n            this._findInIndex(content.objects, objectId, subjectId, predicateId,\n                              'object', 'subject', 'predicate', graphId, null, quads);\n          else\n            // If only subject and possibly predicate are given, the subject index will be the fastest\n            this._findInIndex(content.subjects, subjectId, predicateId, null,\n                              'subject', 'predicate', 'object', graphId, null, quads);\n        }\n        else if (predicateId)\n          // If only predicate and possibly object are given, the predicate index will be the fastest\n          this._findInIndex(content.predicates, predicateId, objectId, null,\n                            'predicate', 'object', 'subject', graphId, null, quads);\n        else if (objectId)\n          // If only object is given, the object index will be the fastest\n          this._findInIndex(content.objects, objectId, null, null,\n                            'object', 'subject', 'predicate', graphId, null, quads);\n        else\n          // If nothing is given, iterate subjects and predicates first\n          this._findInIndex(content.subjects, null, null, null,\n                            'subject', 'predicate', 'object', graphId, null, quads);\n      }\n    }\n    return quads;\n  }\n\n  // ### `match` returns a stream of quads matching a pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  match(subject, predicate, object, graph) {\n    const stream = new Readable({ objectMode: true });\n\n    // Initialize stream once it is being read\n    stream._read = () => {\n      for (const quad of this.getQuads(subject, predicate, object, graph))\n        stream.push(quad);\n      stream.push(null);\n    };\n\n    return stream;\n  }\n\n  // ### `countQuads` returns the number of quads matching a pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  countQuads(subject, predicate, object, graph) {\n    // Convert terms to internal string representation\n    subject = subject && termToId(subject);\n    predicate = predicate && termToId(predicate);\n    object = object && termToId(object);\n    graph = graph && termToId(graph);\n\n    const graphs = this._getGraphs(graph), ids = this._ids;\n    let count = 0, content, subjectId, predicateId, objectId;\n\n    // Translate IRIs to internal index keys.\n    if (isString(subject)   && !(subjectId   = ids[subject])   ||\n        isString(predicate) && !(predicateId = ids[predicate]) ||\n        isString(object)    && !(objectId    = ids[object]))\n      return 0;\n\n    for (const graphId in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graphId]) {\n        // Choose the optimal index, based on what fields are present\n        if (subject) {\n          if (object)\n            // If subject and object are given, the object index will be the fastest\n            count += this._countInIndex(content.objects, objectId, subjectId, predicateId);\n          else\n            // If only subject and possibly predicate are given, the subject index will be the fastest\n            count += this._countInIndex(content.subjects, subjectId, predicateId, objectId);\n        }\n        else if (predicate) {\n          // If only predicate and possibly object are given, the predicate index will be the fastest\n          count += this._countInIndex(content.predicates, predicateId, objectId, subjectId);\n        }\n        else {\n          // If only object is possibly given, the object index will be the fastest\n          count += this._countInIndex(content.objects, objectId, subjectId, predicateId);\n        }\n      }\n    }\n    return count;\n  }\n\n  // ### `forEach` executes the callback on all quads.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  forEach(callback, subject, predicate, object, graph) {\n    this.some(quad => {\n      callback(quad);\n      return false;\n    }, subject, predicate, object, graph);\n  }\n\n  // ### `every` executes the callback on all quads,\n  // and returns `true` if it returns truthy for all them.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  every(callback, subject, predicate, object, graph) {\n    let some = false;\n    const every = !this.some(quad => {\n      some = true;\n      return !callback(quad);\n    }, subject, predicate, object, graph);\n    return some && every;\n  }\n\n  // ### `some` executes the callback on all quads,\n  // and returns `true` if it returns truthy for any of them.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  some(callback, subject, predicate, object, graph) {\n    // Convert terms to internal string representation\n    subject = subject && termToId(subject);\n    predicate = predicate && termToId(predicate);\n    object = object && termToId(object);\n    graph = graph && termToId(graph);\n\n    const graphs = this._getGraphs(graph), ids = this._ids;\n    let content, subjectId, predicateId, objectId;\n\n    // Translate IRIs to internal index keys.\n    if (isString(subject)   && !(subjectId   = ids[subject])   ||\n        isString(predicate) && !(predicateId = ids[predicate]) ||\n        isString(object)    && !(objectId    = ids[object]))\n      return false;\n\n    for (const graphId in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graphId]) {\n        // Choose the optimal index, based on what fields are present\n        if (subjectId) {\n          if (objectId) {\n          // If subject and object are given, the object index will be the fastest\n            if (this._findInIndex(content.objects, objectId, subjectId, predicateId,\n                                  'object', 'subject', 'predicate', graphId, callback, null))\n              return true;\n          }\n          else\n            // If only subject and possibly predicate are given, the subject index will be the fastest\n            if (this._findInIndex(content.subjects, subjectId, predicateId, null,\n                                  'subject', 'predicate', 'object', graphId, callback, null))\n              return true;\n        }\n        else if (predicateId) {\n          // If only predicate and possibly object are given, the predicate index will be the fastest\n          if (this._findInIndex(content.predicates, predicateId, objectId, null,\n                                'predicate', 'object', 'subject', graphId, callback, null)) {\n            return true;\n          }\n        }\n        else if (objectId) {\n          // If only object is given, the object index will be the fastest\n          if (this._findInIndex(content.objects, objectId, null, null,\n                                'object', 'subject', 'predicate', graphId, callback, null)) {\n            return true;\n          }\n        }\n        else\n        // If nothing is given, iterate subjects and predicates first\n        if (this._findInIndex(content.subjects, null, null, null,\n                              'subject', 'predicate', 'object', graphId, callback, null)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  // ### `getSubjects` returns all subjects that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  getSubjects(predicate, object, graph) {\n    const results = [];\n    this.forSubjects(s => { results.push(s); }, predicate, object, graph);\n    return results;\n  }\n\n  // ### `forSubjects` executes the callback on all subjects that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  forSubjects(callback, predicate, object, graph) {\n    // Convert terms to internal string representation\n    predicate = predicate && termToId(predicate);\n    object = object && termToId(object);\n    graph = graph && termToId(graph);\n\n    const ids = this._ids, graphs = this._getGraphs(graph);\n    let content, predicateId, objectId;\n    callback = this._uniqueEntities(callback);\n\n    // Translate IRIs to internal index keys.\n    if (isString(predicate) && !(predicateId = ids[predicate]) ||\n        isString(object)    && !(objectId    = ids[object]))\n      return;\n\n    for (graph in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graph]) {\n        // Choose optimal index based on which fields are wildcards\n        if (predicateId) {\n          if (objectId)\n            // If predicate and object are given, the POS index is best.\n            this._loopBy2Keys(content.predicates, predicateId, objectId, callback);\n          else\n            // If only predicate is given, the SPO index is best.\n            this._loopByKey1(content.subjects, predicateId, callback);\n        }\n        else if (objectId)\n          // If only object is given, the OSP index is best.\n          this._loopByKey0(content.objects, objectId, callback);\n        else\n          // If no params given, iterate all the subjects\n          this._loop(content.subjects, callback);\n      }\n    }\n  }\n\n  // ### `getPredicates` returns all predicates that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  getPredicates(subject, object, graph) {\n    const results = [];\n    this.forPredicates(p => { results.push(p); }, subject, object, graph);\n    return results;\n  }\n\n  // ### `forPredicates` executes the callback on all predicates that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  forPredicates(callback, subject, object, graph) {\n    // Convert terms to internal string representation\n    subject = subject && termToId(subject);\n    object = object && termToId(object);\n    graph = graph && termToId(graph);\n\n    const ids = this._ids, graphs = this._getGraphs(graph);\n    let content, subjectId, objectId;\n    callback = this._uniqueEntities(callback);\n\n    // Translate IRIs to internal index keys.\n    if (isString(subject) && !(subjectId = ids[subject]) ||\n        isString(object)  && !(objectId  = ids[object]))\n      return;\n\n    for (graph in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graph]) {\n        // Choose optimal index based on which fields are wildcards\n        if (subjectId) {\n          if (objectId)\n            // If subject and object are given, the OSP index is best.\n            this._loopBy2Keys(content.objects, objectId, subjectId, callback);\n          else\n            // If only subject is given, the SPO index is best.\n            this._loopByKey0(content.subjects, subjectId, callback);\n        }\n        else if (objectId)\n          // If only object is given, the POS index is best.\n          this._loopByKey1(content.predicates, objectId, callback);\n        else\n          // If no params given, iterate all the predicates.\n          this._loop(content.predicates, callback);\n      }\n    }\n  }\n\n  // ### `getObjects` returns all objects that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  getObjects(subject, predicate, graph) {\n    const results = [];\n    this.forObjects(o => { results.push(o); }, subject, predicate, graph);\n    return results;\n  }\n\n  // ### `forObjects` executes the callback on all objects that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  forObjects(callback, subject, predicate, graph) {\n    // Convert terms to internal string representation\n    subject = subject && termToId(subject);\n    predicate = predicate && termToId(predicate);\n    graph = graph && termToId(graph);\n\n    const ids = this._ids, graphs = this._getGraphs(graph);\n    let content, subjectId, predicateId;\n    callback = this._uniqueEntities(callback);\n\n    // Translate IRIs to internal index keys.\n    if (isString(subject)   && !(subjectId   = ids[subject]) ||\n        isString(predicate) && !(predicateId = ids[predicate]))\n      return;\n\n    for (graph in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graph]) {\n        // Choose optimal index based on which fields are wildcards\n        if (subjectId) {\n          if (predicateId)\n            // If subject and predicate are given, the SPO index is best.\n            this._loopBy2Keys(content.subjects, subjectId, predicateId, callback);\n          else\n            // If only subject is given, the OSP index is best.\n            this._loopByKey1(content.objects, subjectId, callback);\n        }\n        else if (predicateId)\n          // If only predicate is given, the POS index is best.\n          this._loopByKey0(content.predicates, predicateId, callback);\n        else\n          // If no params given, iterate all the objects.\n          this._loop(content.objects, callback);\n      }\n    }\n  }\n\n  // ### `getGraphs` returns all graphs that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  getGraphs(subject, predicate, object) {\n    const results = [];\n    this.forGraphs(g => { results.push(g); }, subject, predicate, object);\n    return results;\n  }\n\n  // ### `forGraphs` executes the callback on all graphs that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  forGraphs(callback, subject, predicate, object) {\n    for (const graph in this._graphs) {\n      this.some(quad => {\n        callback(quad.graph);\n        return true; // Halt iteration of some()\n      }, subject, predicate, object, graph);\n    }\n  }\n\n  // ### `createBlankNode` creates a new blank node, returning its name\n  createBlankNode(suggestedName) {\n    let name, index;\n    // Generate a name based on the suggested name\n    if (suggestedName) {\n      name = suggestedName = `_:${suggestedName}`, index = 1;\n      while (this._ids[name])\n        name = suggestedName + index++;\n    }\n    // Generate a generic blank node name\n    else {\n      do { name = `_:b${this._blankNodeIndex++}`; }\n      while (this._ids[name]);\n    }\n    // Add the blank node to the entities, avoiding the generation of duplicates\n    this._ids[name] = ++this._id;\n    this._entities[this._id] = name;\n    return this._factory.blankNode(name.substr(2));\n  }\n\n  // ### `extractLists` finds and removes all list triples\n  // and returns the items per list.\n  extractLists({ remove = false, ignoreErrors = false } = {}) {\n    const lists = {}; // has scalar keys so could be a simple Object\n    const onError = ignoreErrors ? (() => true) :\n                  ((node, message) => { throw new Error(`${node.value} ${message}`); });\n\n    // Traverse each list from its tail\n    const tails = this.getQuads(null, namespaces.rdf.rest, namespaces.rdf.nil, null);\n    const toRemove = remove ? [...tails] : [];\n    tails.forEach(tailQuad => {\n      const items = [];             // the members found as objects of rdf:first quads\n      let malformed = false;      // signals whether the current list is malformed\n      let head;                   // the head of the list (_:b1 in above example)\n      let headPos;                // set to subject or object when head is set\n      const graph = tailQuad.graph; // make sure list is in exactly one graph\n\n      // Traverse the list from tail to end\n      let current = tailQuad.subject;\n      while (current && !malformed) {\n        const objectQuads = this.getQuads(null, null, current, null);\n        const subjectQuads = this.getQuads(current, null, null, null);\n        let quad, first = null, rest = null, parent = null;\n\n        // Find the first and rest of this list node\n        for (let i = 0; i < subjectQuads.length && !malformed; i++) {\n          quad = subjectQuads[i];\n          if (!quad.graph.equals(graph))\n            malformed = onError(current, 'not confined to single graph');\n          else if (head)\n            malformed = onError(current, 'has non-list arcs out');\n\n          // one rdf:first\n          else if (quad.predicate.value === namespaces.rdf.first) {\n            if (first)\n              malformed = onError(current, 'has multiple rdf:first arcs');\n            else\n              toRemove.push(first = quad);\n          }\n\n          // one rdf:rest\n          else if (quad.predicate.value === namespaces.rdf.rest) {\n            if (rest)\n              malformed = onError(current, 'has multiple rdf:rest arcs');\n            else\n              toRemove.push(rest = quad);\n          }\n\n          // alien triple\n          else if (objectQuads.length)\n            malformed = onError(current, 'can\\'t be subject and object');\n          else {\n            head = quad; // e.g. { (1 2 3) :p :o }\n            headPos = 'subject';\n          }\n        }\n\n        // { :s :p (1 2) } arrives here with no head\n        // { (1 2) :p :o } arrives here with head set to the list.\n        for (let i = 0; i < objectQuads.length && !malformed; ++i) {\n          quad = objectQuads[i];\n          if (head)\n            malformed = onError(current, 'can\\'t have coreferences');\n          // one rdf:rest\n          else if (quad.predicate.value === namespaces.rdf.rest) {\n            if (parent)\n              malformed = onError(current, 'has incoming rdf:rest arcs');\n            else\n              parent = quad;\n          }\n          else {\n            head = quad; // e.g. { :s :p (1 2) }\n            headPos = 'object';\n          }\n        }\n\n        // Store the list item and continue with parent\n        if (!first)\n          malformed = onError(current, 'has no list head');\n        else\n          items.unshift(first.object);\n        current = parent && parent.subject;\n      }\n\n      // Don't remove any quads if the list is malformed\n      if (malformed)\n        remove = false;\n      // Store the list under the value of its head\n      else if (head)\n        lists[head[headPos].value] = items;\n    });\n\n    // Remove list quads if requested\n    if (remove)\n      this.removeQuads(toRemove);\n    return lists;\n  }\n}\n\n// Determines whether the argument is a string\nfunction isString(s) {\n  return typeof s === 'string' || s instanceof String;\n}\n","// **N3StreamParser** parses a text stream into a quad stream.\nimport N3Parser from './N3Parser';\nimport { Transform } from 'readable-stream';\n\n// ## Constructor\nexport default class N3StreamParser extends Transform {\n  constructor(options) {\n    super({ decodeStrings: true });\n    this._readableState.objectMode = true;\n\n    // Set up parser with dummy stream to obtain `data` and `end` callbacks\n    const parser = new N3Parser(options);\n    let onData, onEnd;\n    parser.parse({\n      on: (event, callback) => {\n        switch (event) {\n        case 'data': onData = callback; break;\n        case 'end':   onEnd = callback; break;\n        }\n      },\n    },\n      // Handle quads by pushing them down the pipeline\n      (error, quad) => { error && this.emit('error', error) || quad && this.push(quad); },\n      // Emit prefixes through the `prefix` event\n      (prefix, uri) => { this.emit('prefix', prefix, uri); }\n    );\n\n    // Implement Transform methods through parser callbacks\n    this._transform = (chunk, encoding, done) => { onData(chunk); done(); };\n    this._flush = done => { onEnd(); done(); };\n  }\n\n  // ### Parses a stream of strings\n  import(stream) {\n    stream.on('data',  chunk => { this.write(chunk); });\n    stream.on('end',   ()      => { this.end(); });\n    stream.on('error', error => { this.emit('error', error); });\n    return this;\n  }\n}\n","// **N3StreamWriter** serializes a quad stream into a text stream.\nimport { Transform } from 'readable-stream';\nimport N3Writer from './N3Writer';\n\n// ## Constructor\nexport default class N3StreamWriter extends Transform {\n  constructor(options) {\n    super({ encoding: 'utf8' });\n    this._writableState.objectMode = true;\n\n    // Set up writer with a dummy stream object\n    const writer = this._writer = new N3Writer({\n      write: (quad, encoding, callback) => { this.push(quad); callback && callback(); },\n      end: callback => { this.push(null); callback && callback(); },\n    }, options);\n\n    // Implement Transform methods on top of writer\n    this._transform = (quad, encoding, done) => { writer.addQuad(quad, done); };\n    this._flush = done => { writer.end(done); };\n  }\n\n// ### Serializes a stream of quads\n  import(stream) {\n    stream.on('data',   quad => { this.write(quad); });\n    stream.on('end',    () => { this.end(); });\n    stream.on('error',  error => { this.emit('error', error); });\n    stream.on('prefix', (prefix, iri) => { this._writer.addPrefix(prefix, iri); });\n    return this;\n  }\n}\n","import Lexer from './N3Lexer';\nimport Parser from './N3Parser';\nimport Writer from './N3Writer';\nimport Store from './N3Store';\nimport StreamParser from './N3StreamParser';\nimport StreamWriter from './N3StreamWriter';\nimport * as Util from './N3Util';\n\nimport {\n  default as DataFactory,\n\n  Term,\n  NamedNode,\n  Literal,\n  BlankNode,\n  Variable,\n  DefaultGraph,\n  Quad,\n  Triple,\n\n  termFromId,\n  termToId,\n} from './N3DataFactory';\n\nexport {\n  Lexer,\n  Parser,\n  Writer,\n  Store,\n  StreamParser,\n  StreamWriter,\n  Util,\n\n  DataFactory,\n\n  Term,\n  NamedNode,\n  Literal,\n  BlankNode,\n  Variable,\n  DefaultGraph,\n  Quad,\n  Triple,\n\n  termFromId,\n  termToId,\n};\n","/**\n * author: Pieter Heyvaert (pheyvaer.heyvaert@ugent.be)\n * Ghent University - imec - IDLab\n */\n\nconst YAML = require('yamljs');\nconst expand = require('./expander.js');\nconst namespaces = require('prefix-ns').asMap();\nconst rdfaVocs = require('./rdfa-context.json')['@context'];\nconst {DataFactory} = require('n3');\nconst {namedNode, literal, quad} = DataFactory;\n\nnamespaces.ql = 'http://semweb.mmlab.be/ns/ql#';\nnamespaces.fnml = 'http://semweb.mmlab.be/ns/fnml#';\nnamespaces.fno = 'https://w3id.org/function/ontology#';\n\nclass AbstractGenerator {\n\n  constructor(options = null) {\n    this.mappingsAndIRIs = {};\n    this.referencingObjectMapDetails = {};\n    this.prefixes = {};\n    this.baseIRI = 'http://mapping.example.com/';\n    this.quads = [];\n    this.options = {...{class: false, externalReferences: {}, includeMetadata: true}, ...options}\n    this.externalReferences = this.options.externalReferences;\n    this.authors = [];\n  }\n\n  /**\n   * This method converts YARRRML to another set of rules.\n   * @param yarrrml {string|array} This is either an array of objects {yarrrml, file} that need to be converted or\n   * a single YARRRML string.\n   */\n  convert(yarrrml) {\n    // To make it backwards compatible.\n    if (typeof yarrrml === 'string' || yarrrml instanceof String) {\n      yarrrml = [{yarrrml}];\n    }\n\n    this.counter = {};\n    const expandedJSONs = [];\n\n    for (const el of yarrrml) {\n      const {yarrrml, file} = el;\n\n      let json;\n\n      try {\n        json = YAML.parse(yarrrml);\n      } catch (e) {\n        e.code = 'INVALID_YAML';\n        e.file = file\n        throw e;\n      }\n\n      try {\n        const expandedJSON = expand(json);\n        if (expandedJSON.external) {\n          this.externalReferences = {...this.externalReferences, ...expandedJSON.external};\n        }\n\n        if (expandedJSON.authors) {\n          this.authors = this.authors.concat(expandedJSON.authors);\n        }\n\n        expandedJSONs.push(expandedJSON);\n      } catch (e) {\n        e.code = 'INVALID_YARRRML';\n        throw e;\n      }\n    }\n\n    const combinedExpandedJSON = this._combineExpandedJSONs(expandedJSONs);\n    this.prefixes = combinedExpandedJSON.prefixes;\n    this.externalReferences = {...this.externalReferences, ...this.options.externalReferences};\n\n    //convert to RML\n    return this.convertExpandedJSON(combinedExpandedJSON);\n  }\n\n  convertExpandedJSON(yarrrml) {\n    if (yarrrml.prefixes) {\n      Object.keys(yarrrml.prefixes).forEach(prefix => {\n        rdfaVocs[prefix] = yarrrml.prefixes[prefix];\n      });\n    }\n\n    if (this.options.includeMetadata) {\n      this._generateDatasetDescription(this.authors);\n    }\n  }\n\n  /**\n   * This method combines multiple expanded JSONs in a single one.\n   * @param expandedJSONs An array of expanded JSONs that need to be combined.\n   * @returns {{mappings: {}, prefixes: {}, sources: {}}} The combined expanded JSON.\n   * @private\n   */\n  _combineExpandedJSONs(expandedJSONs) {\n    const result = {mappings: {}, prefixes: {}, sources: {}};\n\n    for (const json of expandedJSONs) {\n      this._addSourceValuesToTarget(json.mappings, result.mappings, 'Mapping');\n      this._addSourceValuesToTarget(json.prefixes, result.prefixes, 'Prefix');\n      this._addSourceValuesToTarget(json.sources, result.sources, 'Source');\n\n      if (json.base) {\n        if (result.base) {\n          console.warn(`Base is multiple times defined. Using only \"${result.base}\".`);\n        } else {\n          result.base = json.base;\n        }\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * This method adds all key-values from a source object to a target object.\n   * Warning messages are outputted if a key already exists in the target object.\n   * In this case the value in the target object for that key is preserved.\n   * @param sourceObj {object} The object from which the key-value pairs are read.\n   * @param targetObj {object} The object to which the non-existing key-value pairs are added.\n   * @param messageValue {string} The type of key. This is used in the warning message.\n   * @private\n   */\n  _addSourceValuesToTarget(sourceObj, targetObj, messageValue) {\n    for (const key in sourceObj) {\n      if (targetObj[key]) {\n        console.warn(`${messageValue} with key \"${key}\" is multiple times defined. Using only fist occurrence.`);\n      } else {\n        targetObj[key] = sourceObj[key];\n      }\n    }\n  }\n\n  generateMapping(tmSubject, mapping, mappingName, sourceSubject) {\n\n    this.quads.push(quad(\n      tmSubject,\n      namedNode(namespaces.rdfs + 'label'),\n      literal(mappingName)\n    ));\n\n    const subjectMaps = []\n\n    mapping.subjects.forEach(subject => {\n      const smSubject = namedNode(this.baseIRI + this.getUniqueID('s'));\n\n      this.quads.push(quad(\n        smSubject,\n        namedNode(namespaces.rdf + 'type'),\n        namedNode(namespaces.rr + 'SubjectMap')\n      ));\n\n      this.quads.push(quad(\n        tmSubject,\n        namedNode(namespaces.rr + 'subjectMap'),\n        smSubject\n      ));\n\n      if (typeof subject === \"object\") {\n        if (subject.function) {\n          this.generateFunctionTermMap(smSubject, subject, sourceSubject, subject.type === 'iri' ? 'IRI' : 'BlankNode');\n        } else {\n          this.quads.push(quad(\n            smSubject,\n            namedNode(namespaces.rr + 'termType'),\n            namedNode(namespaces.rr + 'BlankNode')\n          ));\n        }\n      } else {\n        const {predicate, object} = this.getAppropriatePredicateAndObjectForValue(subject);\n        this.quads.push(quad(\n          smSubject,\n          predicate,\n          object\n        ));\n      }\n\n      if (mapping.graphs) {\n        mapping.graphs.forEach(graph => {\n          this.generateGraphMap(smSubject, graph, sourceSubject);\n        });\n      }\n      subjectMaps.push(smSubject);\n    });\n\n    if (mapping.predicateobjects) {\n      mapping.predicateobjects.forEach(po => {\n\n        if (this.options.class && // flag\n          po.predicates.length === 1 && // only one predicate\n          po.predicates[0].indexOf('$(') === -1 && // without template, ie, a constant value\n          ['a', 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type'].indexOf(AbstractGenerator.expandPrefix(po.predicates[0])) !== -1 && // is `a` or `rdf:type`\n          po.objects.filter(o => o.function).length === 0 && // no functions\n          po.objects.filter(o => o.mapping).length === 0 // no mappings\n        ) {\n          subjectMaps.forEach(sMap => {\n            po.objects.forEach(o => {\n              const {object} = this.getAppropriatePredicateAndObjectForValue(o.value, true);\n              this.quads.push(quad(\n                sMap,\n                namedNode(namespaces.rr + 'class'),\n                object\n              ));\n            });\n          });\n          return;\n        }\n\n        const pomSubject = namedNode(this.baseIRI + this.getUniqueID('pom'));\n\n\n        this.quads.push(quad(\n          pomSubject,\n          namedNode(namespaces.rdf + 'type'),\n          namedNode(namespaces.rr + 'PredicateObjectMap')\n        ));\n\n        this.quads.push(quad(\n          tmSubject,\n          namedNode(namespaces.rr + 'predicateObjectMap'),\n          pomSubject\n        ));\n\n        let isPredicateRDFTYPE = false;\n\n        po.predicates.forEach(p => {\n          const pmSubject = namedNode(this.baseIRI + this.getUniqueID('pm'));\n\n          this.quads.push(quad(\n            pmSubject,\n            namedNode(namespaces.rdf + 'type'),\n            namedNode(namespaces.rr + 'PredicateMap')\n          ));\n\n          this.quads.push(quad(\n            pomSubject,\n            namedNode(namespaces.rr + 'predicateMap'),\n            pmSubject\n          ));\n\n          let appropriatePO;\n\n          if (p === 'a') {\n            appropriatePO = {\n              object: namedNode(namespaces.rdf + 'type'),\n              predicate: namedNode(namespaces.rr + 'constant')\n            };\n            isPredicateRDFTYPE = true;\n          } else {\n            appropriatePO = this.getAppropriatePredicateAndObjectForValue(p, true);\n          }\n\n          this.quads.push(quad(\n            pmSubject,\n            appropriatePO.predicate,\n            appropriatePO.object\n          ));\n        });\n\n        po.objects.forEach(o => {\n          const omSubject = namedNode(this.baseIRI + this.getUniqueID('om'));\n\n          this.quads.push(quad(\n            pomSubject,\n            namedNode(namespaces.rr + 'objectMap'),\n            omSubject\n          ));\n\n          if (o.function) {\n            if (isPredicateRDFTYPE) {\n              o.type = 'iri';\n            }\n\n            this.generateFunctionTermMap(omSubject, o, sourceSubject, 'Literal');\n          } else if (o.mapping) {\n            //we are dealing with a parenttriplesmap\n            this.saveReferencingObjectMapDetails(mappingName, omSubject, o);\n          } else {\n            this.generateNormalObjectMap(omSubject, o);\n          }\n        });\n\n        if (po.graphs) {\n          po.graphs.forEach(graph => {\n            this.generateGraphMap(pomSubject, graph, sourceSubject);\n          });\n        }\n      });\n    }\n  }\n\n  generateNormalObjectMap(omSubject, o) {\n    this.quads.push(quad(\n      omSubject,\n      namedNode(namespaces.rdf + 'type'),\n      namedNode(namespaces.rr + 'ObjectMap')\n    ));\n\n    switch (o.type) {\n      case 'iri':\n        o.type = namedNode(namespaces.rr + 'IRI');\n        break;\n      case 'blank':\n        o.type = namedNode(namespaces.rr + 'BlankNode');\n        break;\n      case 'literal':\n      default:\n        o.type = namedNode(namespaces.rr + 'Literal');\n        break;\n    }\n\n    if (o.value) {\n      const {predicate, object} = this.getAppropriatePredicateAndObjectForValue(o.value);\n\n      this.quads.push(quad(\n        omSubject,\n        predicate,\n        object\n      ));\n    }\n\n    this.quads.push(quad(\n      omSubject,\n      namedNode(namespaces.rr + 'termType'),\n      o.type\n    ));\n\n    if (o.datatype) {\n      this.quads.push(quad(\n        omSubject,\n        namedNode(namespaces.rr + 'datatype'),\n        namedNode(AbstractGenerator.expandPrefix(o.datatype))\n      ));\n    } else if (o.language) {\n      this.quads.push(quad(\n        omSubject,\n        namedNode(namespaces.rr + 'language'),\n        literal(o.language)\n      ));\n    }\n  }\n\n  generateAllReferencingObjectMap() {\n    Object.keys(this.referencingObjectMapDetails).forEach(mappingName => {\n      const allDetails = this.referencingObjectMapDetails[mappingName];\n\n      allDetails.forEach(details => {\n        this.generateReferencingObjectMap(details.om, details.o);\n      });\n    });\n  };\n\n  generateReferencingObjectMap(omSubject, o) {\n    this.quads.push(quad(\n      omSubject,\n      namedNode(namespaces.rdf + 'type'),\n      namedNode(namespaces.rr + 'ObjectMap')\n    ));\n\n    this.quads.push(quad(\n      omSubject,\n      namedNode(namespaces.rr + 'parentTriplesMap'),\n      this.mappingsAndIRIs[o.mapping][0]\n    ));\n\n    if (o.conditions) {\n      o.conditions.forEach(condition => {\n        this.generateCondition(condition, omSubject);\n      });\n    }\n  }\n\n  generateCondition(condition, omSubject) {\n    const joinConditionSubject = namedNode(this.baseIRI + this.getUniqueID('jc'));\n\n    this.quads.push(quad(\n      omSubject,\n      namedNode(namespaces.rr + 'joinCondition'),\n      joinConditionSubject\n    ));\n\n    condition.parameters.forEach(parameter => {\n      let predicate;\n\n      if (AbstractGenerator.expandPrefix(parameter.parameter) === 'str1') {\n        predicate = namedNode(namespaces.rr + 'child');\n      } else {\n        predicate = namedNode(namespaces.rr + 'parent');\n      }\n\n      this.quads.push(quad(\n        joinConditionSubject,\n        predicate,\n        literal(parameter.value.substr(2).slice(0, -1))\n      ));\n    });\n  }\n\n  saveReferencingObjectMapDetails(mappingName, om, o) {\n    if (!this.referencingObjectMapDetails[mappingName]) {\n      this.referencingObjectMapDetails[mappingName] = [];\n    }\n\n    this.referencingObjectMapDetails[mappingName].push({\n      om, o\n    });\n  }\n\n  generateFunctionTermMap(omSubject, o, sourceSubject, termType) {\n    if (o.function === 'equal') {\n      this.convertEqualToIDLabEqual(o);\n    }\n\n    this.quads.push(quad(\n      omSubject,\n      namedNode(namespaces.rdf + 'type'),\n      namedNode(namespaces.fnml + 'FunctionTermMap')\n    ));\n\n    if (o.type === 'iri') {\n      this.quads.push(quad(\n        omSubject,\n        namedNode(namespaces.rr + 'termType'),\n        namedNode(namespaces.rr + 'IRI')\n      ));\n    } else if (termType) {\n      this.quads.push(quad(\n        omSubject,\n        namedNode(namespaces.rr + 'termType'),\n        namedNode(namespaces.rr + termType)\n      ));\n    }\n\n    if (o.datatype) {\n      this.quads.push(quad(\n        omSubject,\n        namedNode(namespaces.rr + 'datatype'),\n        namedNode(AbstractGenerator.expandPrefix(o.datatype))\n      ));\n    } else if (o.language) {\n      this.quads.push(quad(\n        omSubject,\n        namedNode(namespaces.rr + 'language'),\n        literal(o.language)\n      ));\n    }\n\n    const fnSubject = namedNode(this.baseIRI + this.getUniqueID('fn'));\n    const pomExecutesSubject = namedNode(this.baseIRI + this.getUniqueID('pomexec'));\n    const pmExecutesSubject = namedNode(this.baseIRI + this.getUniqueID('pmexec'));\n    const omExecutesSubject = namedNode(this.baseIRI + this.getUniqueID('omexec'));\n\n    this.quads.push(quad(\n      omSubject,\n      namedNode(namespaces.fnml + 'functionValue'),\n      fnSubject\n    ));\n\n    if (sourceSubject) {\n      this.generateFnSource(fnSubject, sourceSubject);\n    }\n\n    this.quads.push(quad(\n      fnSubject,\n      namedNode(namespaces.rr + 'predicateObjectMap'),\n      pomExecutesSubject\n    ));\n\n    this.quads.push(quad(\n      pomExecutesSubject,\n      namedNode(namespaces.rr + 'predicateMap'),\n      pmExecutesSubject\n    ));\n\n    this.quads.push(quad(\n      pmExecutesSubject,\n      namedNode(namespaces.rr + 'constant'),\n      namedNode(namespaces.fno + 'executes')\n    ));\n\n    this.quads.push(quad(\n      pomExecutesSubject,\n      namedNode(namespaces.rr + 'objectMap'),\n      omExecutesSubject\n    ));\n\n    const {predicate, object} = this.getAppropriatePredicateAndObjectForValue(o.function);\n\n    this.quads.push(quad(\n      omExecutesSubject,\n      predicate,\n      object\n    ));\n\n    this.quads.push(quad(\n      omExecutesSubject,\n      namedNode(namespaces.rr + 'termType'),\n      namedNode(namespaces.rr + 'IRI')\n    ));\n\n    if (o.parameters) {\n      o.parameters.forEach(pm => {\n        const pomSubject = namedNode(this.baseIRI + this.getUniqueID('pom'));\n        const pmSubject = namedNode(this.baseIRI + this.getUniqueID('pm'));\n        const omSubject = namedNode(this.baseIRI + this.getUniqueID('om'));\n\n        this.quads.push(quad(\n          fnSubject,\n          namedNode(namespaces.rr + 'predicateObjectMap'),\n          pomSubject\n        ));\n\n        this.quads.push(quad(\n          pomSubject,\n          namedNode(namespaces.rdf + 'type'),\n          namedNode(namespaces.rr + 'PredicateObjectMap')\n        ));\n\n        this.quads.push(quad(\n          pomSubject,\n          namedNode(namespaces.rr + 'predicateMap'),\n          pmSubject\n        ));\n\n        this.quads.push(quad(\n          pmSubject,\n          namedNode(namespaces.rdf + 'type'),\n          namedNode(namespaces.rr + 'PredicateMap')\n        ));\n\n        const {predicate, object} = this.getAppropriatePredicateAndObjectForValue(pm.parameter, true);\n\n        this.quads.push(quad(\n          pmSubject,\n          predicate,\n          object\n        ));\n\n        this.quads.push(quad(\n          pomSubject,\n          namedNode(namespaces.rr + 'objectMap'),\n          omSubject\n        ));\n\n        this.quads.push(quad(\n          omSubject,\n          namedNode(namespaces.rdf + 'type'),\n          namedNode(namespaces.rr + 'ObjectMap')\n        ));\n\n\n        if (pm.from === 'subject') {\n          if (pm.type === 'blank') {\n            this.quads.push(quad(\n              omSubject,\n              namedNode(namespaces.rr + 'termType'),\n              namedNode(namespaces.rr + 'BlankNode')\n            ));\n          } else {\n            const {predicate, object} = this.getAppropriatePredicateAndObjectForValue(pm.value);\n\n            this.quads.push(quad(\n              omSubject,\n              predicate,\n              object\n            ));\n\n            const termTypeObject = pm.type === 'iri' ? 'IRI' : 'Literal';\n\n            this.quads.push(quad(\n              omSubject,\n              namedNode(namespaces.rr + 'termType'),\n              namedNode(namespaces.rr + termTypeObject)\n            ));\n          }\n        } else if (pm.from === 'function') {\n          this.generateFunctionTermMap(omSubject, pm.value, sourceSubject);\n        } else {\n          const parentTermMapSubject = namedNode(this.baseIRI + this.getUniqueID('ptm'));\n\n          this.quads.push(quad(\n            omSubject,\n            namedNode(namespaces.rml + 'parentTermMap'),\n            parentTermMapSubject\n          ));\n\n          const {predicate, object} = this.getAppropriatePredicateAndObjectForValue(pm.value);\n\n          this.quads.push(quad(\n            parentTermMapSubject,\n            predicate,\n            object\n          ));\n        }\n      });\n    }\n  }\n\n  generateGraphMap(subject, graph, sourceSubject) {\n    const graphMapSubject = namedNode(this.baseIRI + this.getUniqueID('gm'));\n\n    this.quads.push(quad(\n      subject,\n      namedNode(namespaces.rr + 'graphMap'),\n      graphMapSubject\n    ));\n\n    this.quads.push(quad(\n      graphMapSubject,\n      namedNode(namespaces.rdf + 'type'),\n      namedNode(namespaces.rr + 'GraphMap')\n    ));\n\n    if (typeof graph === \"object\") {\n      this.generateFunctionTermMap(graphMapSubject, graph, sourceSubject, 'IRI');\n    } else {\n      const {predicate, object} = this.getAppropriatePredicateAndObjectForValue(graph);\n\n      this.quads.push(quad(\n        graphMapSubject,\n        predicate,\n        object\n      ));\n    }\n  }\n\n  generateFnSource(fnSubject, sourceSubject) {\n    throw new Error('Not implemented yet.');\n  }\n\n  /**\n   * This method creates quads for the void dataset representing the rules with\n   * the authors as contributors.\n   * @param authors - An array of authors that will be added as contributors.\n   */\n  _generateDatasetDescription(authors) {\n    this.datasetIRI = namedNode(this.baseIRI + this.getUniqueID('rules'));\n\n    this.quads.push(quad(\n      this.datasetIRI,\n      namedNode(namespaces.rdf + 'type'),\n      namedNode(namespaces.void + 'Dataset')\n    ));\n\n    for (const author of authors) {\n      if (author.webid) {\n        this.quads.push(quad(\n          this.datasetIRI,\n          namedNode(namespaces.dcterms + 'contributor'),\n          namedNode(author.webid)\n        ));\n      } else {\n        const personIRI = namedNode(this.baseIRI + this.getUniqueID('person'));\n\n        this.quads.push(quad(\n          this.datasetIRI,\n          namedNode(namespaces.dcterms + 'contributor'),\n          personIRI\n        ));\n\n        this.quads.push(quad(\n          personIRI,\n          namedNode(namespaces.dcterms + 'contributor'),\n          namedNode(namespaces.foaf + 'Person')\n        ));\n\n        if (author.name) {\n          this.quads.push(quad(\n            personIRI,\n            namedNode(namespaces.rdfs + 'label'),\n            literal(author.name)\n          ));\n        }\n\n        if (author.email) {\n          this.quads.push(quad(\n            personIRI,\n            namedNode(namespaces.foaf + 'mbox'),\n            namedNode(`mailto:${author.email}`)\n          ));\n        }\n\n        if (author.website) {\n          this.quads.push(quad(\n            personIRI,\n            namedNode(namespaces.foaf + 'homepage'),\n            namedNode(author.website)\n          ));\n        }\n      }\n    }\n  }\n\n  static parseTemplate(t) {\n    t = '' + t; // Make sure it's a string.\n    t = t.replace(/\\\\\\\\/g, '@@@BACKWARD-SLASH@@@'); // We want to preserve real backward slashes.\n    t = t.replace(/\\\\\\(/g, '@@@BRACKET-OPEN@@@'); // Same for opening brackets.\n    t = t.replace(/\\\\\\)/g, '@@@BRACKET-CLOSE@@@'); // Same for closing brackets.\n    t = t.replace(/\\$\\(([^)]*)\\)/g, \"{$1}\");\n    t = t.replace(/@@@BRACKET-CLOSE@@@/g, ')');\n    t = t.replace(/@@@BRACKET-OPEN@@@/g, '(');\n    t = t.replace(/@@@BACKWARD-SLASH@@@/g, '/');\n\n    return t;\n  }\n\n  static escapeTemplate(t) {\n    return ('' + t).replace('{', '\\\\{').replace('}', '\\\\}');\n  }\n\n  static countReference(t) {\n    t = '' + t;\n    const match = t.match(/\\{([^\\}]*)\\}/g);\n\n    if (match === null) {\n      return 0;\n    } else {\n      return match.length;\n    }\n  }\n\n  static hasConstantPart(t) {\n    return ('' + t).replace(/\\{([^\\}]*)\\}/g, \"\").length > 0;\n  }\n\n  static getFirstReference(t) {\n    t = '' + t;\n    const a = t.match(/\\{([^\\}]*)\\}/g);\n\n    return a[0].substr(1, a[0].length - 2);\n  }\n\n  /**\n   * This function replaces all external references in a given string.\n   * @param {string} str - The string in which the external references have to be replaced with their values.\n   */\n  _replaceExternalReferences(str) {\n    str = '' + str;\n    const refs = str.match(/\\{([^\\}]*)\\}/g);\n\n    if (refs) {\n      for (const ref of refs) {\n        if (ref.startsWith('{_')) {\n          const refWithoutBrackets = ref.substr(2, ref.length - 3);\n          const externalRefValue = this.externalReferences[refWithoutBrackets];\n\n          if (externalRefValue) {\n            str = str.replace(ref, externalRefValue);\n          } else {\n            console.info(`No external reference is found for ${ref}. It is not replaced.`);\n          }\n        }\n      }\n    }\n\n    return str;\n  }\n\n  getUniqueID(prefix = '') {\n    if (!prefix) {\n      prefix = 'id';\n    }\n\n    if (!this.counter[prefix]) {\n      this.counter[prefix] = 0;\n    }\n    const id = '' + this.counter[prefix];\n    this.counter[prefix]++;\n\n    return `${prefix}_${id.padStart(3, '0')}`;\n  }\n\n  static expandPrefix(str) {\n    if (!(typeof (str) === 'string' || str instanceof String)) {\n      return str;\n    }\n\n    if (str.indexOf('http://') !== -1 || str.indexOf('https://') !== -1) {\n      return str;\n    }\n\n    str = str.replace(/\\\\:/g, '@@@@____@@@@');\n\n    const splits = str.split(':');\n\n    if (splits.length === 1) {\n      return str.replace(/@@@@____@@@@/g, ':');\n    }\n\n    if (splits[1].charAt(0) === ' ') {\n      return str.replace('@@@@____@@@@', ':');\n    }\n\n    if (rdfaVocs[splits[0]]) {\n      return rdfaVocs[splits[0]] + splits[1].replace(/@@@@____@@@@/g, ':');\n    } else {\n      console.error(`prefix \"${splits[0]}\" was not found.`);\n      return str.replace(/@@@@____@@@@/g, ':');\n    }\n  }\n\n  addMappingIRI(mappingName, iri) {\n    if (!this.mappingsAndIRIs[mappingName]) {\n      this.mappingsAndIRIs[mappingName] = [];\n    }\n\n    this.mappingsAndIRIs[mappingName].push(iri);\n\n    if (this.datasetIRI) {\n      // Add the Triples Map to the void dataset.\n      this.quads.push(quad(\n        this.datasetIRI,\n        namedNode(namespaces.void + 'exampleResource'),\n        iri\n      ));\n    }\n  }\n\n  getPrefixes() {\n    return this.prefixes;\n  }\n\n  getBaseIRI() {\n    return this.baseIRI;\n  }\n\n  getAppropriatePredicateAndObjectForValue(value, isIRI = false) {\n    let predicate = namedNode(namespaces.rr + 'template');\n    const escapedValue = AbstractGenerator.escapeTemplate(value);\n    const parsedValue = AbstractGenerator.parseTemplate(escapedValue);\n    let object;\n\n    if (AbstractGenerator.countReference(parsedValue) === 1 && !AbstractGenerator.hasConstantPart(parsedValue)) {\n      object = this._replaceExternalReferences(parsedValue);\n\n      if (object === parsedValue) {\n        object = object.replace(/\\\\_/g, '_');\n        object = AbstractGenerator.getFirstReference(object);\n        object = AbstractGenerator.expandPrefix(object)\n        object = literal(object);\n        predicate = this.getReferenceOnlyPredicate();\n      } else {\n        object = literal(object);\n        predicate = namedNode(namespaces.rr + 'constant');\n      }\n    } else if (parsedValue === escapedValue) {\n      predicate = namedNode(namespaces.rr + 'constant');\n      object = this._replaceExternalReferences(AbstractGenerator.expandPrefix(value));\n\n      if (isIRI) {\n        object = namedNode(object);\n      } else {\n        object = literal(object);\n      }\n    } else {\n      const expandedValue = AbstractGenerator.expandPrefix(parsedValue);\n      object = this._replaceExternalReferences(expandedValue);\n      object = object.replace(/\\\\_/g, '_');\n      object = literal(object);\n    }\n\n    return {predicate, object};\n  }\n\n  /**\n   * This method converts the equal function to a an IDLab equal function.\n   * @param fn The function that needs to be converted.\n   */\n  convertEqualToIDLabEqual(fn) {\n    fn.function = 'http://example.com/idlab/function/equal';\n\n    fn.parameters.forEach(pm => {\n      if (pm.parameter === 'str1') {\n        pm.parameter = 'http://users.ugent.be/~bjdmeest/function/grel.ttl#valueParameter';\n      } else if (pm.parameter === 'str2') {\n        pm.parameter = 'http://users.ugent.be/~bjdmeest/function/grel.ttl#valueParameter2';\n      }\n    });\n  }\n\n}\n\nmodule.exports = AbstractGenerator;\n","module.exports={query:{sql2008:\"http://www.w3.org/ns/r2rml#SQL2008\",oracle:\"http://www.w3.org/ns/r2rml#Oracle\",mysql:\"http://www.w3.org/ns/r2rml#MySQL\",mssql:\"http://www.w3.org/ns/r2rml#MSSQLServer\",hsql:\"http://www.w3.org/ns/r2rml#HSQLDB\",postgresql:\"http://www.w3.org/ns/r2rml#PostgreSQL\",db2:\"http://www.w3.org/ns/r2rml#DB2\",informix:\"Informix\",ingres:\"http://www.w3.org/ns/r2rml#Ingres\",progress:\"http://www.w3.org/ns/r2rml#Progress\",sybasease:\"http://www.w3.org/ns/r2rml#SybaseASE\",sybasesqlanywhere:\"http://www.w3.org/ns/r2rml#SybaseSQLAnywhere\",virtuoso:\"http://www.w3.org/ns/r2rml#Virtuoso\",firebird:\"http://www.w3.org/ns/r2rml#Firebird\"},reference:{jsonpath:\"http://semweb.mmlab.be/ns/ql#JSONPath\",xpath:\"http://semweb.mmlab.be/ns/ql#XPath\",csv:\"http://semweb.mmlab.be/ns/ql#CSV\",css3:\"http://semweb.mmlab.be/ns/ql#CSS3\"}};","module.exports={oracle:\"oracle.jdbc.driver.OracleDriver\",mysql:\"com.mysql.cj.jdbc.Driver\",postgresql:\"org.postgresql.Driver\",mssql:\"com.microsoft.sqlserver.jdbc.SQLServerDriver\",db2:\"com.ibm.as400.access.AS400JDBCDriver\"};","/**\n * author: Pieter Heyvaert (pheyvaer.heyvaert@ugent.be)\n * Ghent University - imec - IDLab\n */\n\nconst namespaces = require('prefix-ns').asMap();\nconst AbstractGenerator = require('./abstract-generator.js');\nconst formulations = require('./formulations.json');\nconst { DataFactory } = require('n3');\nconst {namedNode, literal, quad} = DataFactory;\nconst jdbcDrivers = require('./jdbc-drivers');\n\nnamespaces.ql = 'http://semweb.mmlab.be/ns/ql#';\nnamespaces['idlab-fn'] = 'http://example.com/idlab/function/';\n\nclass RMLGenerator extends AbstractGenerator {\n\n  constructor(options = null) {\n    super(options);\n  }\n\n  convertExpandedJSON(yarrrml) {\n    super.convertExpandedJSON(yarrrml);\n\n    if (yarrrml.base) {\n      this.baseIRI = yarrrml.base;\n    }\n\n    const sourcesIRIMap = {};\n\n    if (yarrrml.sources) {\n      Object.keys(yarrrml.sources).forEach(sourceName => {\n        sourcesIRIMap[sourceName] = this.generateSource(yarrrml.sources[sourceName], undefined, sourceName);\n      });\n    }\n\n    if (!yarrrml.mappings) {\n      return this.quads;\n    }\n\n    Object.keys(yarrrml.mappings).forEach(mappingName => {\n      const mapping = yarrrml.mappings[mappingName];\n\n      if (mapping.sources) {\n        mapping.sources = [].concat(mapping.sources);\n        mapping.sources.forEach(source => {\n          const tmSubject = namedNode(this.baseIRI + this.getUniqueID('map_' + mappingName));\n          this.addMappingIRI(mappingName, tmSubject);\n\n          let sourceSubject;\n\n          if (typeof source === 'string') {\n            sourceSubject = sourcesIRIMap[source];\n\n            this.quads.push(quad(\n              tmSubject,\n              namedNode(namespaces.rml + 'logicalSource'),\n              sourceSubject\n            ));\n          } else {\n            sourceSubject = this.generateSource(source, tmSubject);\n          }\n\n          this.generateMapping(tmSubject, mapping, mappingName, sourceSubject);\n        });\n      } else {\n        const tmSubject = namedNode(this.baseIRI + mappingName);\n        this.generateMapping(tmSubject, mapping, mappingName);\n      }\n    });\n\n    this.generateAllReferencingObjectMap();\n    return this.quads;\n  }\n\n  generateMapping(tmSubject, mapping, mappingName, sourceSubject) {\n    this.quads.push(quad(\n      tmSubject,\n      namedNode(namespaces.rdf + 'type'),\n      namedNode(namespaces.rr + 'TriplesMap')\n    ));\n\n    super.generateMapping(tmSubject, mapping, mappingName, sourceSubject);\n  }\n\n  generateSource(source, tmSubject, sourceName) {\n    const sSubject = namedNode(this.baseIRI + this.getUniqueID('source'));\n\n    if (tmSubject) {\n      this.quads.push(quad(\n        tmSubject,\n        namedNode(namespaces.rml + 'logicalSource'),\n        sSubject\n      ));\n    }\n\n    this.quads.push(quad(\n      sSubject,\n      namedNode(namespaces.rdf + 'type'),\n      namedNode(namespaces.rml + 'LogicalSource')\n    ));\n\n    if (sourceName) {\n      this.quads.push(quad(\n        sSubject,\n        namedNode(namespaces.rdfs + 'label'),\n        literal(sourceName)\n      ));\n    }\n\n    if (!source.type) {\n      if (source.referenceFormulation === 'csv' && source.delimiter !== undefined && source.delimiter !== ',') {\n       // We need CSVW.\n        this.prefixes['csvw'] = namespaces.csvw;\n        const csvwSubject = namedNode(this.baseIRI + this.getUniqueID('csvw'));\n        const dialectSubject = namedNode(this.baseIRI + this.getUniqueID('csvw-dialect'));\n\n        this.quads.push(quad(\n          sSubject,\n          namedNode(namespaces.rml + 'source'),\n          csvwSubject\n        ));\n\n        this.quads.push(quad(\n          csvwSubject,\n          namedNode(namespaces.rdf + 'type'),\n          namedNode(namespaces.csvw + 'Table')\n        ));\n\n        this.quads.push(quad(\n          csvwSubject,\n          namedNode(namespaces.csvw + 'url'),\n          literal(source.access)\n        ));\n\n        this.quads.push(quad(\n          csvwSubject,\n          namedNode(namespaces.csvw + 'dialect'),\n          dialectSubject\n        ));\n\n        this.quads.push(quad(\n          dialectSubject,\n          namedNode(namespaces.rdf + 'type'),\n          namedNode(namespaces.csvw + 'Dialect')\n        ));\n\n        this.quads.push(quad(\n          dialectSubject,\n          namedNode(namespaces.csvw + 'delimiter'),\n          literal(source.delimiter)\n        ));\n      } else {\n        this.quads.push(quad(\n          sSubject,\n          namedNode(namespaces.rml + 'source'),\n          literal(source.access)\n        ));\n      }\n\n      if (source.iterator) {\n        this.quads.push(quad(\n          sSubject,\n          namedNode(namespaces.rml + 'iterator'),\n          literal(source.iterator)\n        ));\n      }\n    } else {\n      const databaseSubject = namedNode(this.baseIRI + this.getUniqueID('database'));\n\n      this.quads.push(quad(\n        sSubject,\n        namedNode(namespaces.rml + 'source'),\n        databaseSubject\n      ));\n\n      this.quads.push(quad(\n        sSubject,\n        namedNode(namespaces.rml + 'query'),\n        literal(source.query)\n      ));\n\n      this._generateDatabaseDescription(databaseSubject, source);\n    }\n\n    let object = namedNode(formulations.reference[source.referenceFormulation]);\n\n    this.quads.push(quad(\n      sSubject,\n      namedNode(namespaces.rml + 'referenceFormulation'),\n      object\n    ));\n\n    return sSubject;\n  }\n\n  _generateDatabaseDescription(subject, source) {\n    this.quads.push(quad(\n      subject,\n      namedNode(namespaces.rdf + 'type'),\n      namedNode(namespaces.d2rq + 'Database')\n    ));\n\n    this.quads.push(quad(\n      subject,\n      namedNode(namespaces.d2rq + 'jdbcDSN'),\n      literal(source.access)\n    ));\n\n    this.quads.push(quad(\n      subject,\n      namedNode(namespaces.d2rq + 'jdbcDriver'),\n      literal(jdbcDrivers[source.type])\n    ));\n\n    if (source.credentials) {\n      if (source.credentials.username) {\n        this.quads.push(quad(\n          subject,\n          namedNode(namespaces.d2rq + 'username'),\n          literal(source.credentials.username)\n        ));\n      }\n\n      if (source.credentials.password) {\n        this.quads.push(quad(\n          subject,\n          namedNode(namespaces.d2rq + 'password'),\n          literal(source.credentials.password)\n        ));\n      }\n    }\n  }\n\n  generateFnSource(fnSubject, sourceSubject) {\n    this.quads.push(quad(\n      fnSubject,\n      namedNode(namespaces.rml + 'logicalSource'),\n      sourceSubject\n    ));\n  }\n\n  generateCondition(condition, omSubject) {\n    if (condition.function === 'equal'\n      && !this._parametersContainsFunction(condition.parameters)\n      && !this._parametersContainsConstantValues(condition.parameters)\n      && !this._parametersContainsTemplates(condition.parameters)\n    ) {\n      super.generateCondition(condition, omSubject);\n    } else {\n      if (condition.function === 'equal') {\n        this.convertEqualToIDLabEqual(condition);\n      }\n\n      const joinConditionSubject = namedNode(this.baseIRI + this.getUniqueID('jc'));\n\n      this.quads.push(quad(\n        omSubject,\n        namedNode(namespaces.rml + 'joinCondition'),\n        joinConditionSubject\n      ));\n\n      this.generateFunctionTermMap(joinConditionSubject, condition);\n    }\n  }\n\n  getReferenceOnlyPredicate() {\n    return namedNode(namespaces.rml + 'reference');\n  }\n\n  /**\n   * This method returns true if there is at least one parameter that is a function.\n   * @param parameters The list of parameters to check.\n   * @returns {boolean} True if at least one parameter is found that is a function, else false.\n   * @private\n   */\n  _parametersContainsFunction(parameters) {\n    let i = 0;\n\n    while (i < parameters.length && typeof parameters[i].value === 'string') {\n      i ++\n    }\n\n    return i < parameters.length;\n  }\n\n  /**\n   * This method returns true if there is at least one parameter that is a constant value.\n   * @param parameters The list of parameters to check.\n   * @returns {boolean} True if at least one parameter is found that is a constant value, else false.\n   * @private\n   */\n  _parametersContainsConstantValues(parameters) {\n    let i = 0;\n\n    while (i < parameters.length &&\n    (typeof parameters[i].value !== 'string' ||\n      (typeof parameters[i].value === 'string'\n        && this.getAppropriatePredicateAndObjectForValue(parameters[i].value).predicate.value !== namespaces.rr + 'constant'))) {\n      i ++\n    }\n\n    return i < parameters.length;\n  }\n\n  /**\n   * This method returns true if there is at least one parameter that is a template.\n   * @param parameters The list of parameters to check.\n   * @returns {boolean} True if at least one parameter is found that is a template, else false.\n   * @private\n   */\n  _parametersContainsTemplates(parameters) {\n    let i = 0;\n\n    while (i < parameters.length &&\n    (typeof parameters[i].value !== 'string' ||\n      (typeof parameters[i].value === 'string'\n        && this.getAppropriatePredicateAndObjectForValue(parameters[i].value).predicate.value !== namespaces.rr + 'template'))) {\n      i ++\n    }\n\n    return i < parameters.length;\n  }\n}\n\nmodule.exports = RMLGenerator;\n","import yarrrml from '@rmlio/yarrrml-parser/lib/rml-generator'\nconst N3 = require('n3');\nconst { DataFactory } = N3;\nconst { namedNode, literal, defaultGraph, quad } = DataFactory;\n\nlet _GLOBAL = {\n    instance: null,\n    config: {\n        defaults: {\n            dataUrl: 'example-data.json',\n            mappingUrl: 'example-mapping.yml',\n            rmlMapperUrl: 'http://localhost:3000/rmlmapper'\n        }\n\n    },\n    prefixes: {\n        as: \"https://www.w3.org/ns/activitystreams#\",\n        dqv: \"http://www.w3.org/ns/dqv#\",\n        duv: \"https://www.w3.org/TR/vocab-duv#\",\n        cat: \"http://www.w3.org/ns/dcat#\",\n        qb: \"http://purl.org/linked-data/cube#\",\n        grddl: \"http://www.w3.org/2003/g/data-view#\",\n        ldp: \"http://www.w3.org/ns/ldp#\",\n        oa: \"http://www.w3.org/ns/oa#\",\n        ma: \"http://www.w3.org/ns/ma-ont#\",\n        owl: \"http://www.w3.org/2002/07/owl#\",\n        rdf: \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\",\n        rdfa: \"http://www.w3.org/ns/rdfa#\",\n        rdfs: \"http://www.w3.org/2000/01/rdf-schema#\",\n        rif: \"http://www.w3.org/2007/rif#\",\n        rr: \"http://www.w3.org/ns/r2rml#\",\n        skos: \"http://www.w3.org/2004/02/skos/core#\",\n        skosxl: \"http://www.w3.org/2008/05/skos-xl#\",\n        wdr: \"http://www.w3.org/2007/05/powder#\",\n        void: \"http://rdfs.org/ns/void#\",\n        wdrs: \"http://www.w3.org/2007/05/powder-s#\",\n        xhv: \"http://www.w3.org/1999/xhtml/vocab#\",\n        xml: \"http://www.w3.org/XML/1998/namespace\",\n        xsd: \"http://www.w3.org/2001/XMLSchema#\",\n        prov: \"http://www.w3.org/ns/prov#\",\n        sd: \"http://www.w3.org/ns/sparql-service-description#\",\n        org: \"http://www.w3.org/ns/org#\",\n        gldp: \"http://www.w3.org/ns/people#\",\n        cnt: \"http://www.w3.org/2008/content#\",\n        dcat: \"http://www.w3.org/ns/dcat#\",\n        earl: \"http://www.w3.org/ns/earl#\",\n        ht: \"http://www.w3.org/2006/http#\",\n        ptr: \"http://www.w3.org/2009/pointers#\",\n        cc: \"http://creativecommons.org/ns#\",\n        ctag: \"http://commontag.org/ns#\",\n        dc: \"http://purl.org/dc/terms/\",\n        dc11: \"http://purl.org/dc/elements/1.1/\",\n        dcterms: \"http://purl.org/dc/terms/\",\n        foaf: \"http://xmlns.com/foaf/0.1/\",\n        gr: \"http://purl.org/goodrelations/v1#\",\n        ical: \"http://www.w3.org/2002/12/cal/icaltzd#\",\n        og: \"http://ogp.me/ns#\",\n        rev: \"http://purl.org/stuff/rev#\",\n        sioc: \"http://rdfs.org/sioc/ns#\",\n        v: \"http://rdf.data-vocabulary.org/#\",\n        vcard: \"http://www.w3.org/2006/vcard/ns#\",\n        schema: \"http://schema.org/\",\n        describedby: \"http://www.w3.org/2007/05/powder-s#describedby\",\n        license: \"http://www.w3.org/1999/xhtml/vocab#license\",\n        role: \"http://www.w3.org/1999/xhtml/vocab#role\",\n        ssn: \"http://www.w3.org/ns/ssn/\",\n        sosa: \"http://www.w3.org/ns/sosa/\",\n        time: \"http://www.w3.org/2006/time#\"\n    }\n};\n\nexport default class MadamsEditor {\n\n    constructor(config) {\n        if (_GLOBAL.instance) {\n            return _GLOBAL.instance;\n        }\n\n        this.config = config;\n        this.ui = new MadamsEditor_UI();\n        this.parser = new MadamsEditor_Parser();\n\n        this._init(config);\n        _GLOBAL.instance = this;\n    }\n\n    _init(config) {\n        const self = this;\n\n        Object.assign(_GLOBAL.config, _GLOBAL.config.defaults, config);\n        console.log('config', _GLOBAL.config);\n\n        this.ui.init(this);\n        this.parser.init(this);\n    }\n}\n\nclass MadamsEditor_UI {\n\n    init(parent) {\n        this.config = parent.config;\n        this.parser = parent.parser;\n\n        this.initEditors();\n        if (_GLOBAL.config.dataUrl != \"\") {\n            this.loadExampleData(_GLOBAL.config.dataUrl, this.dataEditor);\n        }\n        if (_GLOBAL.config.mappingUrl != \"\") {\n            this.loadExampleData(_GLOBAL.config.mappingUrl, this.yarrrmlEditor);\n        }\n\n        // init run btn event\n        document.querySelector(\"#convert-btn\").addEventListener(\"click\", (e) => {\n            this.handleClickRunBtn(e);\n            e.preventDefault();\n        })\n    }\n\n    initEditors() {\n        const self = this;\n        let handleUpdateYarrmlEditorTimeout;\n        this.yarrrmlEditor = ace.edit(\"yarrrml-editor\")\n        this.yarrrmlEditor.setTheme(\"ace/theme/tomorrow\")\n        this.yarrrmlEditor.session.setMode(\"ace/mode/yaml\")\n        this.yarrrmlEditor.session.on(\"change\", () => {\n            clearTimeout(handleUpdateYarrmlEditorTimeout)\n            handleUpdateYarrmlEditorTimeout = setTimeout(() => {\n                self.handleUpdateYarrmlEditor();\n            }, 1500)\n        })\n\n        this.dataEditor = ace.edit(\"json-editor\")\n        this.dataEditor.setTheme(\"ace/theme/tomorrow\")\n        // this.jsonEditor.setReadOnly(true);  // false to make it editable\n        this.dataEditor.session.setMode(\"ace/mode/json\")\n\n        this.outEditor = ace.edit(\"out-editor\")\n        this.outEditor.setTheme(\"ace/theme/tomorrow\")\n        this.outEditor.session.setMode(\"ace/mode/turtle\")\n        // this.outEditor.setReadOnly(true);  // false to make it editable\n    }\n\n    handleClickRunBtn(e) {\n        const btn = e.target.closest(\"#convert-btn\");\n        btn.classList.add('disabled')\n        btn.querySelector(\".loader\").classList.remove(\"d-none\");\n        btn.querySelector(\".bi\").classList.add(\"d-none\");\n\n        this.cleanupMessages();\n\n        this.parser.runMapping()\n        .then(result => {\n            return this.parser.rdf2Turtle(result)\n        })\n        .then(result => {\n            result = result.replace(/\\.\\n([\\w\\<])/g, \".\\n\\n$1\");\n            if (document.querySelector(\"#out-wrapper\").classList.contains(\"d-none\")) {\n                document.querySelector(\"#out-wrapper\").classList.remove(\"d-none\");\n                document.querySelector(\"#out-wrapper\").scrollIntoView({ left: 0, block: 'start', behavior: 'smooth' });\n            }\n            this.outEditor.setValue(result);\n            this.outEditor.clearSelection();\n        })\n        .catch(e => {\n            this.addMessage('error', 'RML Mapper failed: ' + e);\n        })\n        .finally(result => {\n            btn.classList.remove('disabled')\n            btn.querySelector(\".loader\").classList.add(\"d-none\");\n            btn.querySelector(\".bi\").classList.remove(\"d-none\");\n        })\n    }\n\n    handleUpdateYarrmlEditor() {\n        this.cleanupMessages();\n\n        const inputData = this.dataEditor.getValue();\n        let mappingStr = this.yarrrmlEditor.getValue();\n        mappingStr = this.parser.yarrrmlExtend(mappingStr);\n        mappingStr = this.parser.yarrrmlEncodeBrackets(mappingStr);\n\n        this.parser.yarrrml2RML(mappingStr)\n        .then(rml => {})\n        .catch(e => {\n            this.addMessage('error', e);\n        })\n    }\n\n    loadExampleData(url = \"\", target = null) {\n        fetch(url)\n        .then(data => {\n            if (!data.ok) {\n                throw new Error('Network response was not ok');\n            }\n            return data.text()\n        })\n        .then(text => {\n            target.setValue(text);\n            target.clearSelection();\n        })\n        .catch(error => {\n            this.addMessage('error', 'Fetch example data failed. ' + error)\n        });\n    }\n\n    addMessage(type, ...message) {\n        console.log(type, message);\n        const wrapper = document.querySelector(\"#messages-wrapper\");\n        const closeBtn = '<button type=\"button\" class=\"close ml-2\" data-dismiss=\"alert\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>'\n        const alertEl = $('<div class=\"alert\" role=\"alert\">' + message.toString() + closeBtn + '</div>');\n\n        switch (type) {\n            case 'error':\n                alertEl.addClass('alert-danger')\n                break;\n\n            case 'success':\n                alertEl.addClass('alert-success')\n                break;\n\n            default:\n                break;\n        }\n        $(wrapper).append(alertEl)\n    }\n\n    cleanupMessages() {\n        const wrapper = document.querySelector(\"#messages-wrapper\");\n        wrapper.innerHTML = \"\";\n    }\n}\n\nclass MadamsEditor_Parser {\n\n    escapeTable = {\n        '(': '\\\\$LBR',\n        ')': '\\\\$RBR',\n        '{': '\\\\$LCB',\n        '}': '\\\\$RCB',\n      };\n\n    init(parent) {\n        this.parent = parent;\n        this.ui = parent.ui;\n    }\n\n    runMapping() {\n        const self = this;\n        const inputData = this.ui.dataEditor.getValue();\n        let mappingStr = this.ui.yarrrmlEditor.getValue();\n        mappingStr = this.yarrrmlExtend(mappingStr);\n        mappingStr = this.yarrrmlEncodeBrackets(mappingStr);\n\n        return new Promise((resolve, reject) => {\n            this.yarrrml2RML(mappingStr)\n            .then(rml => {\n                return fetch(_GLOBAL.config.rmlMapperUrl, {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify({\n                        rml: rml,\n                        sources: { 'data.json': inputData }\n                    })\n                });\n            })\n            .then(response => {\n                if (!response.ok) {\n                    return response.text().then(e => {\n                        e = JSON.parse(e);\n                        if (e.error)\n                            throw new Error(e.error);\n                        else\n                            throw new Error('Something went wrong');\n                    })\n                }\n                return response.text()\n            })\n            .then(data => {\n                data = self.decodeRMLReplacements(data);\n                resolve(data);\n            })\n            .catch(e => {\n                console.log(e);\n                reject(e.toString())\n            })\n\n        })\n    }\n\n\n    yarrrmlExtend(yarrrml) {\n        // replace function\n        let str = yarrrml.replace(\n            /((?:parameters|pms): *\\[)([\\w@^./$()\"' ,[\\]|=:]+)(\\])/g,\n            (...e) => {\n            const [, cg1, cg2, cg3] = e;\n            const params = cg2\n                .split(',')\n                .map((el, i) => `[schema:str${i}, ${el.trim()}]`)\n                .join(', ');\n            return cg1 + params + cg3;\n            },\n        );\n        // replace join\n        str = str.replace(\n            /join: *\\[ *\"?([\\w@^./$:\\-*, ')()]+)\"? *, *\"?([\\w@^./$:\\-*, '()]+)\"? *\\]/g,\n            'condition:{function:equal,parameters:[[str1,\"$($1)\"],[str2,\"$($2)\"]]}',\n        );\n        return str;\n    }\n\n    yarrrmlEncodeBrackets (str) {\n        let level = 0;\n        let ret = '';\n\n        for (let i = 0; i < str.length; i += 1) {\n          const c = str[i];\n\n          if (level < 0) {\n            throw new Error('failed parsing brackets');\n          }\n\n          if (level === 0) {\n            switch (c) {\n              case '$':\n                if (str[i + 1] === '(') {\n                  level += 1;\n                  i += 1;\n                  ret += '$(';\n                } else {\n                  ret += c;\n                }\n                break;\n              case '(':\n              case ')':\n              default:\n                ret += c;\n            }\n          } else {\n            switch (c) {\n              case '(':\n                level += 1;\n                ret += '$LBR';\n                break;\n              case ')':\n                level -= 1;\n                if (level === 0) {\n                  ret += ')';\n                } else {\n                  ret += '$RBR';\n                }\n                break;\n              default:\n                ret += c;\n            }\n          }\n        }\n        return ret;\n    }\n\n    decodeRMLReplacements (rml) {\n        return Object.entries(this.escapeTable).reduce(\n            (str, [char, code]) => str.replace(new RegExp(code, 'g'), char),\n            rml,\n        );\n    }\n\n    yarrrml2RML(yaml) {\n        const self = this;\n        const y2r = new yarrrml();\n        const writer = new N3.Writer();\n        let quads;\n        try {\n            quads = y2r.convert(yaml)\n            if(typeof y2r.getMessages !== 'undefined') {\n                const messages = y2r.getMessages()\n                messages.forEach(message => {\n                    self.ui.addMessage(message.type, message.text);\n                });\n            }\n        } catch (e) {\n            return new Promise((resolve, reject) => {\n                reject('Generate the RML mapping from YARRRML failed. ' + e)\n            });\n        }\n\n        quads.forEach(q => {\n            if (q.object.termType === \"Literal\") {\n                writer.addQuad(quad(\n                    namedNode(q.subject.value),\n                    namedNode(q.predicate.value),\n                    literal(q.object.value)\n                ))\n            } else {\n                writer.addQuad(\n                    namedNode(q.subject.value),\n                    namedNode(q.predicate.value),\n                    namedNode(q.object.value)\n                )\n            }\n        });\n        return new Promise((resolve, reject) => {\n            writer.end( (err,doc) => {\n                if (err) {\n                    return reject(e);\n                }\n                resolve(doc)\n            });\n        });\n    }\n\n    rdf2Turtle(rdf) {\n        const self = this;\n        const parser = new N3.Parser();\n        const prefixes = self.getUsedPrefixes();\n        const outWriter = new N3.Writer({\n            format: \"turtle\",\n            prefixes: prefixes\n        });\n\n        return new Promise((resolve, reject) => {\n            parser.parse(rdf, (err, quad, prefixes) => {\n                if (err) {\n                    return reject('N3 parser error: ' + err);\n                }\n                if (quad) {\n                    outWriter.addQuad(quad)\n                } else {\n                    outWriter.end((err,outTtl)=>{\n                        if (err) {\n                            return reject('N3 parser error: ' + err);\n                        }\n                        resolve(outTtl);\n                    });\n                }\n            })\n        });\n    }\n\n\n    getUsedPrefixes() {\n        const self = this;\n        const yaml = this.ui.yarrrmlEditor.getValue()\n        let prefixes = {};\n        prefixes.rdf = _GLOBAL.prefixes.rdf;\n        Object.keys(_GLOBAL.prefixes).forEach(pre=>{\n            if (yaml.indexOf(`${pre}:`) >= 0) {\n                prefixes[pre] = _GLOBAL.prefixes[pre]\n            }\n        });\n        try {\n            let json = YAML.parse(yaml);\n            if (json.prefixes) {\n                prefixes = Object.assign({}, prefixes, json.prefixes)\n            }\n        } catch (e) {\n            self.ui.addMessage('error', e);\n        }\n        return prefixes\n    }\n\n}","import MadamsEditor from \"./madamseditor\";\n\nlet options = {};\n\nif (process.env.NODE_ENV === 'development') {\n    options = {\n        'dataUrl':      './example-data.json',\n        'mappingUrl':   './example-mapping.yml',\n        'rmlMapperUrl': 'http://localhost:3000/rmlmapper'\n    }\n} else {\n    options = {\n        'dataUrl':      './example-data.json',\n        'mappingUrl':   './example-mapping.yml',\n        'rmlMapperUrl': 'https://ledot.de/rmlmapper'\n    }\n}\n\nnew MadamsEditor(options);\n"]}